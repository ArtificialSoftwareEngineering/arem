<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\axis\ValueAxis.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as publihed by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * --------------
        * ValueAxis.java
        * --------------
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): Jonathan Nash;
        * Nicolas Brodu (for Astrium and EADS Corporate Research
        * Center);
        *
        * Changes
        * -------
        * 18-Sep-2001 : Added standard header and fixed DOS encoding problem (DG);
        * 23-Nov-2001 : Overhauled standard tick unit code (DG);
        * 04-Dec-2001 : Changed constructors to protected, and tidied up default
        * values (DG);
        * 12-Dec-2001 : Fixed vertical gridlines bug (DG);
        * 16-Jan-2002 : Added an optional crosshair, based on the implementation by
        * Jonathan Nash (DG);
        * 23-Jan-2002 : Moved the minimum and maximum values to here from NumberAxis,
        * and changed the type from Number to double (DG);
        * 25-Feb-2002 : Added default value for autoRange. Changed autoAdjustRange
        * from public to protected. Updated import statements (DG);
        * 23-Apr-2002 : Added setRange() method (DG);
        * 29-Apr-2002 : Added range adjustment methods (DG);
        * 13-Jun-2002 : Modified setCrosshairValue() to notify listeners only when the
        * crosshairs are visible, to avoid unnecessary repaints, as
        * suggested by Kees Kuip (DG);
        * 25-Jul-2002 : Moved lower and upper margin attributes from the NumberAxis
        * class (DG);
        * 05-Sep-2002 : Updated constructor for changes in Axis class (DG);
        * 01-Oct-2002 : Fixed errors reported by Checkstyle (DG);
        * 04-Oct-2002 : Moved standardTickUnits from NumberAxis --&gt; ValueAxis (DG);
        * 08-Nov-2002 : Moved to new package com.jrefinery.chart.axis (DG);
        * 19-Nov-2002 : Removed grid settings (now controlled by the plot) (DG);
        * 27-Nov-2002 : Moved the 'inverted' attributed from NumberAxis to
        * ValueAxis (DG);
        * 03-Jan-2003 : Small fix to ensure auto-range minimum is observed
        * immediately (DG);
        * 14-Jan-2003 : Changed autoRangeMinimumSize from Number --&gt; double (DG);
        * 20-Jan-2003 : Replaced monolithic constructor (DG);
        * 26-Mar-2003 : Implemented Serializable (DG);
        * 09-May-2003 : Added AxisLocation parameter to translation methods (DG);
        * 13-Aug-2003 : Implemented Cloneable (DG);
        * 01-Sep-2003 : Fixed bug 793167 (setMaximumAxisValue exception) (DG);
        * 02-Sep-2003 : Fixed bug 795366 (zooming on inverted axes) (DG);
        * 08-Sep-2003 : Completed Serialization support (NB);
        * 08-Sep-2003 : Renamed get/setMinimumValue --&gt; get/setLowerBound,
        * and get/setMaximumValue --&gt; get/setUpperBound (DG);
        * 27-Oct-2003 : Changed DEFAULT_AUTO_RANGE_MINIMUM_SIZE value - see bug ID
        * 829606 (DG);
        * 07-Nov-2003 : Changes to tick mechanism (DG);
        * 06-Jan-2004 : Moved axis line attributes to Axis class (DG);
        * 21-Jan-2004 : Removed redundant axisLineVisible attribute. Renamed
        * translateJava2DToValue --&gt; java2DToValue, and
        * translateValueToJava2D --&gt; valueToJava2D (DG);
        * 23-Jan-2004 : Fixed setAxisLinePaint() and setAxisLineStroke() which had no
        * effect (andreas.gawecki@coremedia.com);
        * 07-Apr-2004 : Changed text bounds calculation (DG);
        * 26-Apr-2004 : Added getter/setter methods for arrow shapes (DG);
        * 18-May-2004 : Added methods to set axis range *including* current
        * margins (DG);
        * 02-Jun-2004 : Fixed bug in setRangeWithMargins() method (DG);
        * 30-Sep-2004 : Moved drawRotatedString() from RefineryUtilities
        * --&gt; TextUtilities (DG);
        * 11-Jan-2005 : Removed deprecated methods in preparation for 1.0.0
        * release (DG);
        * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 10-Oct-2006 : Source reformatting (DG);
        * 22-Mar-2007 : Added new defaultAutoRange attribute (DG);
        * 02-Aug-2007 : Check for major tick when drawing label (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>axis</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Font</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>FontMetrics</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Polygon</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Shape</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>font</name>.
            <name>LineMetrics</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>AffineTransform</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Line2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>AxisChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>Plot</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>Range</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>io</name>.
            <name>SerialUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>text</name>.
            <name>TextUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>RectangleEdge</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>RectangleInsets</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ObjectUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PublicCloneable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The base class for axes that display value data, where values are measured
        * using the &lt;code&gt;double&lt;/code&gt; primitive. The two key subclasses are
        * {@link DateAxis} and {@link NumberAxis}.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>ValueAxis</name>
        <super>
            <extends>extends
                <name>Axis</name>
            </extends>
            <implements>implements <name>Cloneable</name>, <name>PublicCloneable</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** For serialization. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>3698345477322391456L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default axis range. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Range</name>
                    </type>
                    <name>DEFAULT_RANGE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Range</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>1.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default auto-range value. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEFAULT_AUTO_RANGE</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default inverted flag setting. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEFAULT_INVERTED</name> =
                    <init>
                        <expr>false</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default minimum auto range. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>double</name>
                    </type>
                    <name>DEFAULT_AUTO_RANGE_MINIMUM_SIZE</name> =
                    <init>
                        <expr>0.00000001</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default value for the lower margin (0.05 = 5%). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>double</name>
                    </type>
                    <name>DEFAULT_LOWER_MARGIN</name> =
                    <init>
                        <expr>0.05</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default value for the upper margin (0.05 = 5%). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>double</name>
                    </type>
                    <name>DEFAULT_UPPER_MARGIN</name> =
                    <init>
                        <expr>0.05</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The default lower bound for the axis.
                *
                * @deprecated From 1.0.5 onwards, the axis defines a defaultRange
                * attribute (see {@link #getDefaultAutoRange()}).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>double</name>
                    </type>
                    <name>DEFAULT_LOWER_BOUND</name> =
                    <init>
                        <expr>0.0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The default upper bound for the axis.
                *
                * @deprecated From 1.0.5 onwards, the axis defines a defaultRange
                * attribute (see {@link #getDefaultAutoRange()}).
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>double</name>
                    </type>
                    <name>DEFAULT_UPPER_BOUND</name> =
                    <init>
                        <expr>1.0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default auto-tick-unit-selection value. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>boolean</name>
                    </type>
                    <name>DEFAULT_AUTO_TICK_UNIT_SELECTION</name> =
                    <init>
                        <expr>true</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The maximum tick count. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MAXIMUM_TICK_COUNT</name> =
                    <init>
                        <expr>500</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether an arrow is drawn at the positive end of
                * the axis line.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>positiveArrowVisible</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether an arrow is drawn at the negative end of
                * the axis line.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>negativeArrowVisible</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The shape used for an up arrow. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Shape</name>
                    </type>
                    <name>upArrow</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The shape used for a down arrow. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Shape</name>
                    </type>
                    <name>downArrow</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The shape used for a left arrow. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Shape</name>
                    </type>
                    <name>leftArrow</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The shape used for a right arrow. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Shape</name>
                    </type>
                    <name>rightArrow</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A flag that affects the orientation of the values on the axis. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>inverted</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The axis range. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Range</name>
                    </type>
                    <name>range</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Flag that indicates whether the axis automatically scales to fit the
                * chart data.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoRange</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The minimum size for the 'auto' axis range (excluding margins). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>autoRangeMinimumSize</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The default range is used when the dataset is empty and the axis needs
                * to determine the auto range.
                *
                * @since 1.0.5
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Range</name>
                    </type>
                    <name>defaultAutoRange</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The upper margin percentage. This indicates the amount by which the
                * maximum axis value exceeds the maximum data value (as a percentage of
                * the range on the axis) when the axis range is determined automatically.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>upperMargin</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The lower margin. This is a percentage that indicates the amount by
                * which the minimum axis value is "less than" the minimum data value when
                * the axis range is determined automatically.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>lowerMargin</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * If this value is positive, the amount is subtracted from the maximum
                * data value to determine the lower axis range. This can be used to
                * provide a fixed "window" on dynamic data.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>fixedAutoRange</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Flag that indicates whether or not the tick unit is selected
                * automatically.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoTickUnitSelection</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The standard tick units for the axis. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>TickUnitSource</name>
                    </type>
                    <name>standardTickUnits</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** An index into an array of standard tick values. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>autoTickIndex</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A flag indicating whether or not tick labels are rotated to vertical. */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>verticalTickLabels</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Constructs a value axis.
                *
                * @param label the axis label (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param standardTickUnits the source for standard tick units
                * (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>ValueAxis</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>label</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TickUnitSource</name>
                            </type>
                            <name>standardTickUnits</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>label</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>positiveArrowVisible</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>negativeArrowVisible</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>range</name>
                            </name>
                            =
                            <name>DEFAULT_RANGE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoRange</name>
                            </name>
                            =
                            <name>DEFAULT_AUTO_RANGE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>defaultAutoRange</name>
                            </name>
                            =
                            <name>DEFAULT_RANGE</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>inverted</name>
                            </name>
                            =
                            <name>DEFAULT_INVERTED</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoRangeMinimumSize</name>
                            </name>
                            =
                            <name>DEFAULT_AUTO_RANGE_MINIMUM_SIZE</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>lowerMargin</name>
                            </name>
                            =
                            <name>DEFAULT_LOWER_MARGIN</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>upperMargin</name>
                            </name>
                            =
                            <name>DEFAULT_UPPER_MARGIN</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fixedAutoRange</name>
                            </name>
                            = 0.0
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoTickUnitSelection</name>
                            </name>
                            =
                            <name>DEFAULT_AUTO_TICK_UNIT_SELECTION</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>standardTickUnits</name>
                            </name>
                            =
                            <name>standardTickUnits</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Polygon</name>
                            </type>
                            <name>p1</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Polygon</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p1</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p1</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p1</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>upArrow</name>
                            </name>
                            =
                            <name>p1</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Polygon</name>
                            </type>
                            <name>p2</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Polygon</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p2</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p2</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p2</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>downArrow</name>
                            </name>
                            =
                            <name>p2</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Polygon</name>
                            </type>
                            <name>p3</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Polygon</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p3</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p3</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p3</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rightArrow</name>
                            </name>
                            =
                            <name>p3</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Polygon</name>
                            </type>
                            <name>p4</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Polygon</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p4</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p4</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>p4</name>.
                                    <name>addPoint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>2</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>leftArrow</name>
                            </name>
                            =
                            <name>p4</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>verticalTickLabels</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the tick labels should be rotated (to
                * vertical), and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.
                *
                * @see #setVerticalTickLabels(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isVerticalTickLabels</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>verticalTickLabels</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether the tick labels are displayed
                * vertically (that is, rotated 90 degrees from horizontal). If the flag
                * is changed, an {@link AxisChangeEvent} is sent to all registered
                * listeners.
                *
                * @param flag the flag.
                *
                * @see #isVerticalTickLabels()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setVerticalTickLabels</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>flag</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>verticalTickLabels</name>
                                </name>
                                !=
                                <name>flag</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>verticalTickLabels</name>
                                        </name>
                                        =
                                        <name>flag</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>AxisChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a flag that controls whether or not the axis line has an arrow
                * drawn that points in the positive direction for the axis.
                *
                * @return A boolean.
                *
                * @see #setPositiveArrowVisible(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isPositiveArrowVisible</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>positiveArrowVisible</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets a flag that controls whether or not the axis lines has an arrow
                * drawn that points in the positive direction for the axis, and sends an
                * {@link AxisChangeEvent} to all registered listeners.
                *
                * @param visible the flag.
                *
                * @see #isPositiveArrowVisible()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPositiveArrowVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>positiveArrowVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a flag that controls whether or not the axis line has an arrow
                * drawn that points in the negative direction for the axis.
                *
                * @return A boolean.
                *
                * @see #setNegativeArrowVisible(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isNegativeArrowVisible</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>negativeArrowVisible</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets a flag that controls whether or not the axis lines has an arrow
                * drawn that points in the negative direction for the axis, and sends an
                * {@link AxisChangeEvent} to all registered listeners.
                *
                * @param visible the flag.
                *
                * @see #setNegativeArrowVisible(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNegativeArrowVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>negativeArrowVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a shape that can be displayed as an arrow pointing upwards at
                * the end of an axis line.
                *
                * @return A shape (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setUpArrow(Shape)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getUpArrow</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>upArrow</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape that can be displayed as an arrow pointing upwards at
                * the end of an axis line and sends an {@link AxisChangeEvent} to all
                * registered listeners.
                *
                * @param arrow the arrow shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getUpArrow()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setUpArrow</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>arrow</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>arrow</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'arrow' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>upArrow</name>
                            </name>
                            =
                            <name>arrow</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a shape that can be displayed as an arrow pointing downwards at
                * the end of an axis line.
                *
                * @return A shape (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setDownArrow(Shape)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getDownArrow</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>downArrow</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape that can be displayed as an arrow pointing downwards at
                * the end of an axis line and sends an {@link AxisChangeEvent} to all
                * registered listeners.
                *
                * @param arrow the arrow shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getDownArrow()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDownArrow</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>arrow</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>arrow</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'arrow' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>downArrow</name>
                            </name>
                            =
                            <name>arrow</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a shape that can be displayed as an arrow pointing left at the
                * end of an axis line.
                *
                * @return A shape (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setLeftArrow(Shape)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getLeftArrow</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>leftArrow</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape that can be displayed as an arrow pointing left at the
                * end of an axis line and sends an {@link AxisChangeEvent} to all
                * registered listeners.
                *
                * @param arrow the arrow shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getLeftArrow()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLeftArrow</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>arrow</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>arrow</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'arrow' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>leftArrow</name>
                            </name>
                            =
                            <name>arrow</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a shape that can be displayed as an arrow pointing right at the
                * end of an axis line.
                *
                * @return A shape (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setRightArrow(Shape)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getRightArrow</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>rightArrow</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape that can be displayed as an arrow pointing rightwards at
                * the end of an axis line and sends an {@link AxisChangeEvent} to all
                * registered listeners.
                *
                * @param arrow the arrow shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getRightArrow()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRightArrow</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>arrow</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>arrow</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'arrow' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rightArrow</name>
                            </name>
                            =
                            <name>arrow</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws an axis line at the current cursor position and edge.
                *
                * @param g2 the graphics device.
                * @param cursor the cursor position.
                * @param dataArea the data area.
                * @param edge the edge.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawAxisLine</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>cursor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Line2D</name>
                            </type>
                            <name>axisLine</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>edge</name>
                                ==
                                <name><name>RectangleEdge</name>.
                                    <name>TOP</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>axisLine</name>
                                        = new
                                        <call>
                                            <name><name>Line2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>dataArea</name>.
                                                                <name>getX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>cursor</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>dataArea</name>.
                                                                <name>getMaxX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>cursor</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>edge</name>
                                        ==
                                        <name><name>RectangleEdge</name>.
                                            <name>BOTTOM</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>axisLine</name>
                                                = new
                                                <call>
                                                    <name><name>Line2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataArea</name>.
                                                                        <name>getX</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>cursor</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataArea</name>.
                                                                        <name>getMaxX</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>cursor</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>edge</name>
                                                ==
                                                <name><name>RectangleEdge</name>.
                                                    <name>LEFT</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>axisLine</name>
                                                        = new
                                                        <call>
                                                            <name><name>Line2D</name>.
                                                                <name>Double</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>cursor</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>dataArea</name>.
                                                                                <name>getY</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>cursor</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>dataArea</name>.
                                                                                <name>getMaxY</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>edge</name>
                                                        ==
                                                        <name><name>RectangleEdge</name>.
                                                            <name>RIGHT</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>axisLine</name>
                                                                = new
                                                                <call>
                                                                    <name><name>Line2D</name>.
                                                                        <name>Double</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>cursor</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>dataArea</name>.
                                                                                        <name>getY</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>cursor</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>dataArea</name>.
                                                                                        <name>getMaxY</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getAxisLinePaint</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getAxisLineStroke</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>draw</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>axisLine</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>drawUpOrRight</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>drawDownOrLeft</name> =
                            <init>
                                <expr>false</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>positiveArrowVisible</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>inverted</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>drawDownOrLeft</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>drawUpOrRight</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>negativeArrowVisible</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>inverted</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>drawUpOrRight</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>drawDownOrLeft</name>
                                                    = true
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>drawUpOrRight</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>x</name> =
                                        <init>
                                            <expr>0.0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>y</name> =
                                        <init>
                                            <expr>0.0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Shape</name>
                                        </type>
                                        <name>arrow</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>edge</name>
                                            ==
                                            <name><name>RectangleEdge</name>.
                                                <name>TOP</name>
                                            </name>
                                            || <name>edge</name> ==
                                            <name><name>RectangleEdge</name>.
                                                <name>BOTTOM</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>x</name>
                                                    =
                                                    <call>
                                                        <name><name>dataArea</name>.
                                                            <name>getMaxX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>y</name>
                                                    =
                                                    <name>cursor</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>arrow</name>
                                                    =
                                                    <name><name>this</name>.
                                                        <name>rightArrow</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>edge</name>
                                                    ==
                                                    <name><name>RectangleEdge</name>.
                                                        <name>LEFT</name>
                                                    </name>
                                                    || <name>edge</name> ==
                                                    <name><name>RectangleEdge</name>.
                                                        <name>RIGHT</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>x</name>
                                                            =
                                                            <name>cursor</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>y</name>
                                                            =
                                                            <call>
                                                                <name><name>dataArea</name>.
                                                                    <name>getMinY</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>arrow</name>
                                                            =
                                                            <name><name>this</name>.
                                                                <name>upArrow</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>

                                <comment type="line">// draw the arrow...</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>AffineTransform</name>
                                        </type>
                                        <name>transformer</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>AffineTransform</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>transformer</name>.
                                                <name>setToTranslation</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Shape</name>
                                        </type>
                                        <name>shape</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>transformer</name>.
                                                        <name>createTransformedShape</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>arrow</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>fill</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>shape</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>draw</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>shape</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name>drawDownOrLeft</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>x</name> =
                                        <init>
                                            <expr>0.0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>y</name> =
                                        <init>
                                            <expr>0.0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Shape</name>
                                        </type>
                                        <name>arrow</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>edge</name>
                                            ==
                                            <name><name>RectangleEdge</name>.
                                                <name>TOP</name>
                                            </name>
                                            || <name>edge</name> ==
                                            <name><name>RectangleEdge</name>.
                                                <name>BOTTOM</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>x</name>
                                                    =
                                                    <call>
                                                        <name><name>dataArea</name>.
                                                            <name>getMinX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>y</name>
                                                    =
                                                    <name>cursor</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name>arrow</name>
                                                    =
                                                    <name><name>this</name>.
                                                        <name>leftArrow</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>edge</name>
                                                    ==
                                                    <name><name>RectangleEdge</name>.
                                                        <name>LEFT</name>
                                                    </name>
                                                    || <name>edge</name> ==
                                                    <name><name>RectangleEdge</name>.
                                                        <name>RIGHT</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>x</name>
                                                            =
                                                            <name>cursor</name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>y</name>
                                                            =
                                                            <call>
                                                                <name><name>dataArea</name>.
                                                                    <name>getMaxY</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>arrow</name>
                                                            =
                                                            <name><name>this</name>.
                                                                <name>downArrow</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>

                                <comment type="line">// draw the arrow...</comment>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>AffineTransform</name>
                                        </type>
                                        <name>transformer</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>AffineTransform</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>transformer</name>.
                                                <name>setToTranslation</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Shape</name>
                                        </type>
                                        <name>shape</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>transformer</name>.
                                                        <name>createTransformedShape</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>arrow</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>fill</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>shape</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>draw</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>shape</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Calculates the anchor point for a tick label.
                *
                * @param tick the tick.
                * @param cursor the cursor.
                * @param dataArea the data area.
                * @param edge the edge on which the axis is drawn.
                *
                * @return The x and y coordinates of the anchor point.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>float</name>
                    <index>[]</index>
                </type>
                <name>calculateAnchorPoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ValueTick</name>
                            </type>
                            <name>tick</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>cursor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RectangleInsets</name>
                            </type>
                            <name>insets</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTickLabelInsets</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>float</name>
                                <index>[]</index>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>float</name>
                                        <index>[<expr>2</expr>]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>edge</name>
                                ==
                                <name><name>RectangleEdge</name>.
                                    <name>TOP</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>result</name>
                                            <index>[<expr>0</expr>]
                                            </index>
                                        </name>
                                        = (<name>float</name>)
                                        <call>
                                            <name>valueToJava2D</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>tick</name>.
                                                                <name>getValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>dataArea</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>edge</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>
                                            <name>result</name>
                                            <index>[<expr>1</expr>]
                                            </index>
                                        </name>
                                        =
                                        <call>(<name>float</name>)
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>cursor</name>
                                                        -
                                                        <call>
                                                            <name><name>insets</name>.
                                                                <name>getBottom</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        - 2.0
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>edge</name>
                                        ==
                                        <name><name>RectangleEdge</name>.
                                            <name>BOTTOM</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>result</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                = (<name>float</name>)
                                                <call>
                                                    <name>valueToJava2D</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>tick</name>.
                                                                        <name>getValue</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>dataArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>edge</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <name>
                                                    <name>result</name>
                                                    <index>[<expr>1</expr>]
                                                    </index>
                                                </name>
                                                =
                                                <call>(<name>float</name>)
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>cursor</name>
                                                                +
                                                                <call>
                                                                    <name><name>insets</name>.
                                                                        <name>getTop</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                                + 2.0
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>edge</name>
                                                ==
                                                <name><name>RectangleEdge</name>.
                                                    <name>LEFT</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>result</name>
                                                            <index>[<expr>0</expr>]
                                                            </index>
                                                        </name>
                                                        =
                                                        <call>(<name>float</name>)
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>cursor</name>
                                                                        -
                                                                        <call>
                                                                            <name><name>insets</name>.
                                                                                <name>getLeft</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                        - 2.0
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                <expr_stmt>
                                                    <expr>
                                                        <name>
                                                            <name>result</name>
                                                            <index>[<expr>1</expr>]
                                                            </index>
                                                        </name>
                                                        = (<name>float</name>)
                                                        <call>
                                                            <name>valueToJava2D</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tick</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dataArea</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>edge</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>edge</name>
                                                        ==
                                                        <name><name>RectangleEdge</name>.
                                                            <name>RIGHT</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>result</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                                =
                                                                <call>(<name>float</name>)
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>cursor</name>
                                                                                +
                                                                                <call>
                                                                                    <name><name>insets</name>.
                                                                                        <name>getRight</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                                + 2.0
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>
                                                                    <name>result</name>
                                                                    <index>[<expr>1</expr>]
                                                                    </index>
                                                                </name>
                                                                = (<name>float</name>)
                                                                <call>
                                                                    <name>valueToJava2D</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>tick</name>.
                                                                                        <name>getValue</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>dataArea</name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>edge</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws the axis line, tick marks and tick mark labels.
                *
                * @param g2 the graphics device.
                * @param cursor the cursor.
                * @param plotArea the plot area.
                * @param dataArea the data area.
                * @param edge the edge that the axis is aligned with.
                *
                * @return The width or height used to draw the axis.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>AxisState</name>
                </type>
                <name>drawTickMarksAndLabels</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>cursor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>plotArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AxisState</name>
                            </type>
                            <name>state</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>AxisState</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>cursor</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isAxisLineVisible</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>drawAxisLine</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>g2</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>cursor</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>dataArea</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>edge</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>ol</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTickMarkOutsideLength</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>il</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTickMarkInsideLength</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>List</name>
                            </type>
                            <name>ticks</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>refreshTicks</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>g2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>state</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>dataArea</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>edge</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>state</name>.
                                    <name>setTicks</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>ticks</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setFont</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getTickLabelFont</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Iterator</name>
                            </type>
                            <name>iterator</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>ticks</name>.
                                            <name>iterator</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>iterator</name>.
                                        <name>hasNext</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>ValueTick</name>
                                    </type>
                                    <name>tick</name> =
                                    <init>
                                        <expr>(<name>ValueTick</name>)
                                            <call>
                                                <name><name>iterator</name>.
                                                    <name>next</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isTickLabelsVisible</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>setPaint</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getTickLabelPaint</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>float</name>
                                                    <index>[]</index>
                                                </type>
                                                <name>anchorPoint</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name>calculateAnchorPoint</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>tick</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>cursor</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dataArea</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>edge</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>TextUtilities</name>.
                                                        <name>drawRotatedString</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>tick</name>.
                                                                        <name>getText</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>g2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>anchorPoint</name>
                                                                    <index>[<expr>0</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>
                                                                    <name>anchorPoint</name>
                                                                    <index>[<expr>1</expr>]
                                                                    </index>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>tick</name>.
                                                                        <name>getTextAnchor</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>tick</name>.
                                                                        <name>getAngle</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>tick</name>.
                                                                        <name>getRotationAnchor</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>

                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name>isTickMarksVisible</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &amp;&amp;
                                        <call>
                                            <name><name>tick</name>.
                                                <name>getTickType</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        .
                                        <call>
                                            <name>equals</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>TickType</name>.
                                                            <name>MAJOR</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>float</name>
                                                </type>
                                                <name>xx</name> =
                                                <init>
                                                    <expr>(<name>float</name>)
                                                        <call>
                                                            <name>valueToJava2D</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tick</name>.
                                                                                <name>getValue</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dataArea</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>edge</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Line2D</name>
                                                </type>
                                                <name>mark</name> =
                                                <init>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>setStroke</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getTickMarkStroke</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>setPaint</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name>getTickMarkPaint</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>edge</name>
                                                    ==
                                                    <name><name>RectangleEdge</name>.
                                                        <name>LEFT</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>mark</name>
                                                            = new
                                                            <call>
                                                                <name><name>Line2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>cursor</name>
                                                                            -
                                                                            <name>ol</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>xx</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>cursor</name>
                                                                            +
                                                                            <name>il</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>xx</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>edge</name>
                                                            ==
                                                            <name><name>RectangleEdge</name>.
                                                                <name>RIGHT</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>mark</name>
                                                                    = new
                                                                    <call>
                                                                        <name><name>Line2D</name>.
                                                                            <name>Double</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>cursor</name>
                                                                                    +
                                                                                    <name>ol</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>xx</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>cursor</name>
                                                                                    -
                                                                                    <name>il</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>xx</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>edge</name>
                                                                    ==
                                                                    <name><name>RectangleEdge</name>.
                                                                        <name>TOP</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>mark</name>
                                                                            = new
                                                                            <call>
                                                                                <name><name>Line2D</name>.
                                                                                    <name>Double</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>xx</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>cursor</name>
                                                                                            -
                                                                                            <name>ol</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>xx</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>cursor</name>
                                                                                            +
                                                                                            <name>il</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>edge</name>
                                                                            ==
                                                                            <name><name>RectangleEdge</name>.
                                                                                <name>BOTTOM</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>mark</name>
                                                                                    = new
                                                                                    <call>
                                                                                        <name><name>Line2D</name>.
                                                                                            <name>Double</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>xx</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>cursor</name>
                                                                                                    +
                                                                                                    <name>ol</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>xx</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>cursor</name>
                                                                                                    -
                                                                                                    <name>il</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>draw</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>mark</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>

                    <comment type="line">// need to work out the space used by the tick labels...</comment>
                    <comment type="line">// so we can update the cursor...</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>used</name> =
                            <init>
                                <expr>0.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isTickLabelsVisible</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>edge</name>
                                            ==
                                            <name><name>RectangleEdge</name>.
                                                <name>LEFT</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>used</name>
                                                    +=
                                                    <call>
                                                        <name>findMaximumTickLabelWidth</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ticks</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>g2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>plotArea</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>isVerticalTickLabels</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>state</name>.
                                                            <name>cursorLeft</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>used</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>edge</name>
                                                    ==
                                                    <name><name>RectangleEdge</name>.
                                                        <name>RIGHT</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>used</name>
                                                            =
                                                            <call>
                                                                <name>findMaximumTickLabelWidth</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ticks</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>g2</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>plotArea</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>isVerticalTickLabels</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>state</name>.
                                                                    <name>cursorRight</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>used</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>edge</name>
                                                            ==
                                                            <name><name>RectangleEdge</name>.
                                                                <name>TOP</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>used</name>
                                                                    =
                                                                    <call>
                                                                        <name>findMaximumTickLabelHeight</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>ticks</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>g2</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>plotArea</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>isVerticalTickLabels
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>state</name>.
                                                                            <name>cursorUp</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>used</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>edge</name>
                                                                    ==
                                                                    <name><name>RectangleEdge</name>.
                                                                        <name>BOTTOM</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>used</name>
                                                                            =
                                                                            <call>
                                                                                <name>findMaximumTickLabelHeight</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>ticks</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>g2</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>plotArea</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    ,
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <call>
                                                                                                <name>
                                                                                                    isVerticalTickLabels
                                                                                                </name>
                                                                                                <argument_list>()
                                                                                                </argument_list>
                                                                                            </call>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>state</name>.
                                                                                    <name>cursorDown</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>used</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <name>state</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the space required to draw the axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot that the axis belongs to.
                * @param plotArea the area within which the plot should be drawn.
                * @param edge the axis location.
                * @param space the space already reserved (for other axes).
                *
                * @return The space required to draw the axis (including pre-reserved
                * space).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>AxisSpace</name>
                </type>
                <name>reserveSpace</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Plot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>plotArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>AxisSpace</name>
                            </type>
                            <name>space</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// create a new space object if one wasn't supplied...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>space</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>space</name>
                                        = new
                                        <call>
                                            <name>AxisSpace</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// if the axis is not visible, no additional space is required...</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isVisible</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>space</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// if the axis has a fixed dimension, return it...</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>dimension</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getFixedDimension</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dimension</name>
                                &gt; 0.0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>space</name>.
                                                <name>ensureAtLeast</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>dimension</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>edge</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// calculate the max size of the tick labels (if visible)...</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>tickLabelHeight</name> =
                            <init>
                                <expr>0.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>tickLabelWidth</name> =
                            <init>
                                <expr>0.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isTickLabelsVisible</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setFont</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name>getTickLabelFont</name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>List</name>
                                        </type>
                                        <name>ticks</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>refreshTicks</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>g2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>AxisState</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>plotArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>edge</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>RectangleEdge</name>.
                                                    <name>isTopOrBottom</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>edge</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>tickLabelHeight</name>
                                                    =
                                                    <call>
                                                        <name>findMaximumTickLabelHeight</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>ticks</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>g2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>plotArea</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name>isVerticalTickLabels</name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>RectangleEdge</name>.
                                                            <name>isLeftOrRight</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>edge</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>tickLabelWidth</name>
                                                            =
                                                            <call>
                                                                <name>findMaximumTickLabelWidth</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>ticks</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>g2</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>plotArea</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>isVerticalTickLabels</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// get the axis label size and update the space object...</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>labelEnclosure</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getLabelEnclosure</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>g2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>edge</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>labelHeight</name> =
                            <init>
                                <expr>0.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>labelWidth</name> =
                            <init>
                                <expr>0.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>RectangleEdge</name>.
                                        <name>isTopOrBottom</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>edge</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>labelHeight</name>
                                        =
                                        <call>
                                            <name><name>labelEnclosure</name>.
                                                <name>getHeight</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>space</name>.
                                                <name>add</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>labelHeight</name>
                                                        +
                                                        <name>tickLabelHeight</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>edge</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>RectangleEdge</name>.
                                                <name>isLeftOrRight</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>edge</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>labelWidth</name>
                                                =
                                                <call>
                                                    <name><name>labelEnclosure</name>.
                                                        <name>getWidth</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>space</name>.
                                                        <name>add</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>labelWidth</name>
                                                                +
                                                                <name>tickLabelWidth</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>edge</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <return>return
                        <expr>
                            <name>space</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A utility method for determining the height of the tallest tick label.
                *
                * @param ticks the ticks.
                * @param g2 the graphics device.
                * @param drawArea the area within which the plot and axes should be drawn.
                * @param vertical a flag that indicates whether or not the tick labels
                * are 'vertical'.
                *
                * @return The height of the tallest tick label.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>double</name>
                </type>
                <name>findMaximumTickLabelHeight</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>List</name>
                            </type>
                            <name>ticks</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>drawArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>vertical</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RectangleInsets</name>
                            </type>
                            <name>insets</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTickLabelInsets</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTickLabelFont</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxHeight</name> =
                            <init>
                                <expr>0.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>vertical</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>FontMetrics</name>
                                        </type>
                                        <name>fm</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>getFontMetrics</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>font</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Iterator</name>
                                        </type>
                                        <name>iterator</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ticks</name>.
                                                        <name>iterator</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>iterator</name>.
                                                    <name>hasNext</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Tick</name>
                                                </type>
                                                <name>tick</name> =
                                                <init>
                                                    <expr>(<name>Tick</name>)
                                                        <call>
                                                            <name><name>iterator</name>.
                                                                <name>next</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Rectangle2D</name>
                                                </type>
                                                <name>labelBounds</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>TextUtilities</name>.
                                                                <name>getTextBounds</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tick</name>.
                                                                                <name>getText</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>g2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>fm</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>labelBounds</name>.
                                                            <name>getWidth</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    +
                                                    <call>
                                                        <name><name>insets</name>.
                                                            <name>getTop</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    +
                                                    <call>
                                                        <name><name>insets</name>.
                                                            <name>getBottom</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt;
                                                    <name>maxHeight</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>maxHeight</name>
                                                            =
                                                            <call>
                                                                <name><name>labelBounds</name>.
                                                                    <name>getWidth</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            +
                                                            <call>
                                                                <name><name>insets</name>.
                                                                    <name>getTop</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            +
                                                            <call>
                                                                <name><name>insets</name>.
                                                                    <name>getBottom</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>LineMetrics</name>
                                        </type>
                                        <name>metrics</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>font</name>.
                                                        <name>getLineMetrics</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"ABCxyz"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>g2</name>.
                                                                        <name>getFontRenderContext</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>maxHeight</name>
                                        =
                                        <call>
                                            <name><name>metrics</name>.
                                                <name>getHeight</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        +
                                        <call>
                                            <name><name>insets</name>.
                                                <name>getTop</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        +
                                        <call>
                                            <name><name>insets</name>.
                                                <name>getBottom</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>maxHeight</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A utility method for determining the width of the widest tick label.
                *
                * @param ticks the ticks.
                * @param g2 the graphics device.
                * @param drawArea the area within which the plot and axes should be drawn.
                * @param vertical a flag that indicates whether or not the tick labels
                * are 'vertical'.
                *
                * @return The width of the tallest tick label.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>double</name>
                </type>
                <name>findMaximumTickLabelWidth</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>List</name>
                            </type>
                            <name>ticks</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>drawArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>vertical</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RectangleInsets</name>
                            </type>
                            <name>insets</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTickLabelInsets</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getTickLabelFont</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxWidth</name> =
                            <init>
                                <expr>0.0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <name>vertical</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>FontMetrics</name>
                                        </type>
                                        <name>fm</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>getFontMetrics</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>font</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Iterator</name>
                                        </type>
                                        <name>iterator</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>ticks</name>.
                                                        <name>iterator</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <while>while
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>iterator</name>.
                                                    <name>hasNext</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Tick</name>
                                                </type>
                                                <name>tick</name> =
                                                <init>
                                                    <expr>(<name>Tick</name>)
                                                        <call>
                                                            <name><name>iterator</name>.
                                                                <name>next</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Rectangle2D</name>
                                                </type>
                                                <name>labelBounds</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>TextUtilities</name>.
                                                                <name>getTextBounds</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>tick</name>.
                                                                                <name>getText</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>g2</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>fm</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>labelBounds</name>.
                                                            <name>getWidth</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    +
                                                    <call>
                                                        <name><name>insets</name>.
                                                            <name>getLeft</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    +
                                                    <call>
                                                        <name><name>insets</name>.
                                                            <name>getRight</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    &gt;
                                                    <name>maxWidth</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>maxWidth</name>
                                                            =
                                                            <call>
                                                                <name><name>labelBounds</name>.
                                                                    <name>getWidth</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            +
                                                            <call>
                                                                <name><name>insets</name>.
                                                                    <name>getLeft</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            +
                                                            <call>
                                                                <name><name>insets</name>.
                                                                    <name>getRight</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </while>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>LineMetrics</name>
                                        </type>
                                        <name>metrics</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>font</name>.
                                                        <name>getLineMetrics</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"ABCxyz"</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>g2</name>.
                                                                        <name>getFontRenderContext</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>maxWidth</name>
                                        =
                                        <call>
                                            <name><name>metrics</name>.
                                                <name>getHeight</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        +
                                        <call>
                                            <name><name>insets</name>.
                                                <name>getTop</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        +
                                        <call>
                                            <name><name>insets</name>.
                                                <name>getBottom</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>maxWidth</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a flag that controls the direction of values on the axis.
                * &lt;P&gt;
                * For a regular axis, values increase from left to right (for a horizontal
                * axis) and bottom to top (for a vertical axis). When the axis is
                * 'inverted', the values increase in the opposite direction.
                *
                * @return The flag.
                *
                * @see #setInverted(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isInverted</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>inverted</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets a flag that controls the direction of values on the axis, and
                * notifies registered listeners that the axis has changed.
                *
                * @param flag the flag.
                *
                * @see #isInverted()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setInverted</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>flag</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>inverted</name>
                                </name>
                                !=
                                <name>flag</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>inverted</name>
                                        </name>
                                        =
                                        <name>flag</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>AxisChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the axis range is
                * automatically adjusted to fit the data values.
                *
                * @return The flag.
                *
                * @see #setAutoRange(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isAutoRange</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoRange</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets a flag that determines whether or not the axis range is
                * automatically adjusted to fit the data, and notifies registered
                * listeners that the axis has been modified.
                *
                * @param auto the new value of the flag.
                *
                * @see #isAutoRange()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setAutoRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>auto</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the auto range attribute. If the &lt;code&gt;notify&lt;/code&gt; flag is set,
                * an {@link AxisChangeEvent} is sent to registered listeners.
                *
                * @param auto the flag.
                * @param notify notify listeners?
                *
                * @see #isAutoRange()
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setAutoRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>autoRange</name>
                                </name>
                                !=
                                <name>auto</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>autoRange</name>
                                        </name>
                                        =
                                        <name>auto</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>autoRange</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>autoAdjustRange</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>notify</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>notifyListeners</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>AxisChangeEvent</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>this</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the minimum size allowed for the axis range when it is
                * automatically calculated.
                *
                * @return The minimum range.
                *
                * @see #setAutoRangeMinimumSize(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getAutoRangeMinimumSize</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoRangeMinimumSize</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the auto range minimum size and sends an {@link AxisChangeEvent}
                * to all registered listeners.
                *
                * @param size the size.
                *
                * @see #getAutoRangeMinimumSize()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoRangeMinimumSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setAutoRangeMinimumSize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>size</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the minimum size allowed for the axis range when it is
                * automatically calculated.
                * &lt;p&gt;
                * If requested, an {@link AxisChangeEvent} is forwarded to all registered
                * listeners.
                *
                * @param size the new minimum.
                * @param notify notify listeners?
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoRangeMinimumSize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>size</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>size</name>
                                &lt;= 0.0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"NumberAxis.setAutoRangeMinimumSize(double): must be &gt;
                                                        0.0."
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>autoRangeMinimumSize</name>
                                </name>
                                !=
                                <name>size</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>autoRangeMinimumSize</name>
                                        </name>
                                        =
                                        <name>size</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>autoRange</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>autoAdjustRange</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>notify</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>notifyListeners</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>AxisChangeEvent</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>this</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the default auto range.
                *
                * @return The default auto range (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setDefaultAutoRange(Range)
                *
                * @since 1.0.5
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>getDefaultAutoRange</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>defaultAutoRange</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the default auto range and sends an {@link AxisChangeEvent} to all
                * registered listeners.
                *
                * @param range the range (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getDefaultAutoRange()
                *
                * @since 1.0.5
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDefaultAutoRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>range</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'range' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>defaultAutoRange</name>
                            </name>
                            =
                            <name>range</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the lower margin for the axis, expressed as a percentage of the
                * axis range. This controls the space added to the lower end of the axis
                * when the axis range is automatically calculated (it is ignored when the
                * axis range is set explicitly). The default value is 0.05 (five percent).
                *
                * @return The lower margin.
                *
                * @see #setLowerMargin(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getLowerMargin</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>lowerMargin</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the lower margin for the axis (as a percentage of the axis range)
                * and sends an {@link AxisChangeEvent} to all registered listeners. This
                * margin is added only when the axis range is auto-calculated - if you set
                * the axis range manually, the margin is ignored.
                *
                * @param margin the margin percentage (for example, 0.05 is five percent).
                *
                * @see #getLowerMargin()
                * @see #setUpperMargin(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLowerMargin</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>margin</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>lowerMargin</name>
                            </name>
                            =
                            <name>margin</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isAutoRange</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>autoAdjustRange</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the upper margin for the axis, expressed as a percentage of the
                * axis range. This controls the space added to the lower end of the axis
                * when the axis range is automatically calculated (it is ignored when the
                * axis range is set explicitly). The default value is 0.05 (five percent).
                *
                * @return The upper margin.
                *
                * @see #setUpperMargin(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getUpperMargin</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>upperMargin</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the upper margin for the axis (as a percentage of the axis range)
                * and sends an {@link AxisChangeEvent} to all registered listeners. This
                * margin is added only when the axis range is auto-calculated - if you set
                * the axis range manually, the margin is ignored.
                *
                * @param margin the margin percentage (for example, 0.05 is five percent).
                *
                * @see #getLowerMargin()
                * @see #setLowerMargin(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setUpperMargin</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>margin</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>upperMargin</name>
                            </name>
                            =
                            <name>margin</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isAutoRange</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>autoAdjustRange</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the fixed auto range.
                *
                * @return The length.
                *
                * @see #setFixedAutoRange(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getFixedAutoRange</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>fixedAutoRange</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the fixed auto range for the axis.
                *
                * @param length the range length.
                *
                * @see #getFixedAutoRange()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFixedAutoRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fixedAutoRange</name>
                            </name>
                            =
                            <name>length</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isAutoRange</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>autoAdjustRange</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the lower bound of the axis range.
                *
                * @return The lower bound.
                *
                * @see #setLowerBound(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getLowerBound</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>range</name>.
                                    <name>getLowerBound</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the lower bound for the axis range. An {@link AxisChangeEvent} is
                * sent to all registered listeners.
                *
                * @param min the new minimum.
                *
                * @see #getLowerBound()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLowerBound</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>min</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>this</name>.<name>range</name>.
                                        <name>getUpperBound</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt;
                                <name>min</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setRange</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>Range</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>min</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>this</name>.<name>range</name>.
                                                                                <name>getUpperBound</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setRange</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>Range</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>min</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>min</name>
                                                                        + 1.0
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the upper bound for the axis range.
                *
                * @return The upper bound.
                *
                * @see #setUpperBound(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getUpperBound</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>range</name>.
                                    <name>getUpperBound</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the upper bound for the axis range, and sends an
                * {@link AxisChangeEvent} to all registered listeners.
                *
                * @param max the new maximum.
                *
                * @see #getUpperBound()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setUpperBound</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>max</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>this</name>.<name>range</name>.
                                        <name>getLowerBound</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                                &lt;
                                <name>max</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setRange</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>Range</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>this</name>.<name>range</name>.
                                                                                <name>getLowerBound</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>max</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setRange</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>max</name>
                                                        - 1.0
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>max</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the range for the axis.
                *
                * @return The axis range (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setRange(Range)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>getRange</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>range</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the range attribute and sends an {@link AxisChangeEvent} to all
                * registered listeners. As a side-effect, the auto-range flag is set to
                * &lt;code&gt;false&lt;/code&gt;.
                *
                * @param range the range (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getRange()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the range for the axis, if requested, sends an
                * {@link AxisChangeEvent} to all registered listeners. As a side-effect,
                * the auto-range flag is set to &lt;code&gt;false&lt;/code&gt; (optional).
                *
                * @param range the range (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param turnOffAutoRange a flag that controls whether or not the auto
                * range is turned off.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getRange()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>turnOffAutoRange</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>range</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'range' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>turnOffAutoRange</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>autoRange</name>
                                        </name>
                                        = false
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>range</name>
                            </name>
                            =
                            <name>range</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>AxisChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the axis range and sends an {@link AxisChangeEvent} to all
                * registered listeners. As a side-effect, the auto-range flag is set to
                * &lt;code&gt;false&lt;/code&gt;.
                *
                * @param lower the lower axis limit.
                * @param upper the upper axis limit.
                *
                * @see #getRange()
                * @see #setRange(Range)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>lower</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>upper</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>Range</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>lower</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>upper</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the range for the axis (after first adding the current margins to
                * the specified range) and sends an {@link AxisChangeEvent} to all
                * registered listeners.
                *
                * @param range the range (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRangeWithMargins</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRangeWithMargins</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>range</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the range for the axis after first adding the current margins to
                * the range and, if requested, sends an {@link AxisChangeEvent} to all
                * registered listeners. As a side-effect, the auto-range flag is set to
                * &lt;code&gt;false&lt;/code&gt; (optional).
                *
                * @param range the range (excluding margins, &lt;code&gt;null&lt;/code&gt; not
                * permitted).
                * @param turnOffAutoRange a flag that controls whether or not the auto
                * range is turned off.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRangeWithMargins</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>turnOffAutoRange</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>range</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'range' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>Range</name>.
                                                    <name>expand</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>range</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>getLowerMargin</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name>getUpperMargin</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>turnOffAutoRange</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>notify</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the axis range (after first adding the current margins to the
                * range) and sends an {@link AxisChangeEvent} to all registered listeners.
                * As a side-effect, the auto-range flag is set to &lt;code&gt;false&lt;/code&gt;.
                *
                * @param lower the lower axis limit.
                * @param upper the upper axis limit.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRangeWithMargins</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>lower</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>upper</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRangeWithMargins</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>Range</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>lower</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>upper</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the axis range, where the new range is 'size' in length, and
                * centered on 'value'.
                *
                * @param value the central value.
                * @param length the range length.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRangeAboutValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>Range</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                            - <name>length</name> / 2
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                            + <name>length</name> / 2
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a flag indicating whether or not the tick unit is automatically
                * selected from a range of standard tick units.
                *
                * @return A flag indicating whether or not the tick unit is automatically
                * selected.
                *
                * @see #setAutoTickUnitSelection(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isAutoTickUnitSelection</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoTickUnitSelection</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets a flag indicating whether or not the tick unit is automatically
                * selected from a range of standard tick units. If the flag is changed,
                * registered listeners are notified that the chart has changed.
                *
                * @param flag the new value of the flag.
                *
                * @see #isAutoTickUnitSelection()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoTickUnitSelection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>flag</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setAutoTickUnitSelection</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>flag</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets a flag indicating whether or not the tick unit is automatically
                * selected from a range of standard tick units.
                *
                * @param flag the new value of the flag.
                * @param notify notify listeners?
                *
                * @see #isAutoTickUnitSelection()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoTickUnitSelection</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>flag</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>autoTickUnitSelection</name>
                                </name>
                                !=
                                <name>flag</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>autoTickUnitSelection</name>
                                        </name>
                                        =
                                        <name>flag</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>notify</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>notifyListeners</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>AxisChangeEvent</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>this</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the source for obtaining standard tick units for the axis.
                *
                * @return The source (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setStandardTickUnits(TickUnitSource)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>TickUnitSource</name>
                </type>
                <name>getStandardTickUnits</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>standardTickUnits</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the source for obtaining standard tick units for the axis and sends
                * an {@link AxisChangeEvent} to all registered listeners. The axis will
                * try to select the smallest tick unit from the source that does not cause
                * the tick labels to overlap (see also the
                * {@link #setAutoTickUnitSelection(boolean)} method.
                *
                * @param source the source for standard tick units (&lt;code&gt;null&lt;/code&gt;
                * permitted).
                *
                * @see #getStandardTickUnits()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStandardTickUnits</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TickUnitSource</name>
                            </type>
                            <name>source</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>standardTickUnits</name>
                            </name>
                            =
                            <name>source</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>AxisChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Converts a data value to a coordinate in Java2D space, assuming that the
                * axis runs along one edge of the specified dataArea.
                * &lt;p&gt;
                * Note that it is possible for the coordinate to fall outside the area.
                *
                * @param value the data value.
                * @param area the area for plotting the data.
                * @param edge the edge along which the axis lies.
                *
                * @return The Java2D coordinate.
                *
                * @see #java2DToValue(double, Rectangle2D, RectangleEdge)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>double</name>
                </type>
                <name>valueToJava2D</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Converts a length in data coordinates into the corresponding length in
                * Java2D coordinates.
                *
                * @param length the length.
                * @param area the plot area.
                * @param edge the edge along which the axis lies.
                *
                * @return The length in Java2D coordinates.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>lengthToJava2D</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>zero</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>valueToJava2D</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0.0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>area</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>edge</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>l</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>valueToJava2D</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>length</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>area</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>edge</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>Math</name>.
                                    <name>abs</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>l</name>
                                            -
                                            <name>zero</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Converts a coordinate in Java2D space to the corresponding data value,
                * assuming that the axis runs along one edge of the specified dataArea.
                *
                * @param java2DValue the coordinate in Java2D space.
                * @param area the area in which the data is plotted.
                * @param edge the edge along which the axis lies.
                *
                * @return The data value.
                *
                * @see #valueToJava2D(double, Rectangle2D, RectangleEdge)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>double</name>
                </type>
                <name>java2DToValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>java2DValue</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Automatically sets the axis range to fit the range of values in the
                * dataset. Sometimes this can depend on the renderer used as well (for
                * example, the renderer may "stack" values, requiring an axis range
                * greater than otherwise necessary).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>protected</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>autoAdjustRange</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Centers the axis range about the specified value and sends an
                * {@link AxisChangeEvent} to all registered listeners.
                *
                * @param value the center value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>centerRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>central</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>range</name>.
                                            <name>getCentralValue</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>adjusted</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Range</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>this</name>.<name>range</name>.
                                                            <name>getLowerBound</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + <name>value</name> -
                                                    <name>central</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>this</name>.<name>range</name>.
                                                            <name>getUpperBound</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    + <name>value</name> -
                                                    <name>central</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>adjusted</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Increases or decreases the axis range by the specified percentage about
                * the central value and sends an {@link AxisChangeEvent} to all registered
                * listeners.
                * &lt;P&gt;
                * To double the length of the axis range, use 200% (2.0).
                * To halve the length of the axis range, use 50% (0.5).
                *
                * @param percent the resize factor.
                *
                * @see #resizeRange(double, double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>resizeRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>percent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>resizeRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>percent</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>this</name>.<name>range</name>.
                                                    <name>getCentralValue</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Increases or decreases the axis range by the specified percentage about
                * the specified anchor value and sends an {@link AxisChangeEvent} to all
                * registered listeners.
                * &lt;P&gt;
                * To double the length of the axis range, use 200% (2.0).
                * To halve the length of the axis range, use 50% (0.5).
                *
                * @param percent the resize factor.
                * @param anchorValue the new central value after the resize.
                *
                * @see #resizeRange(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>resizeRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>percent</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>anchorValue</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>percent</name>
                                &gt; 0.0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>halfLength</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>this</name>.<name>range</name>.
                                                        <name>getLength</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                * <name>percent</name> / 2
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Range</name>
                                        </type>
                                        <name>adjusted</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>Range</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>anchorValue</name>
                                                                -
                                                                <name>halfLength</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>anchorValue</name>
                                                                +
                                                                <name>halfLength</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setRange</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>adjusted</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setAutoRange</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>true</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Zooms in on the current range.
                *
                * @param lowerPercent the new lower bound.
                * @param upperPercent the new upper bound.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>zoomRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>lowerPercent</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>upperPercent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>range</name>.
                                            <name>getLowerBound</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>length</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>range</name>.
                                            <name>getLength</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>adjusted</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>isInverted</name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>adjusted</name>
                                        = new
                                        <call>
                                            <name>Range</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                        + (<name>length</name> * (1 - <name>upperPercent</name>))
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                        + (<name>length</name> * (1 - <name>lowerPercent</name>))
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>adjusted</name>
                                        = new
                                        <call>
                                            <name>Range</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                        + <name>length</name> *
                                                        <name>lowerPercent</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                        + <name>length</name> *
                                                        <name>upperPercent</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setRange</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>adjusted</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the auto tick index.
                *
                * @return The auto tick index.
                *
                * @see #setAutoTickIndex(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>int</name>
                </type>
                <name>getAutoTickIndex</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoTickIndex</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the auto tick index.
                *
                * @param index the new value.
                *
                * @see #getAutoTickIndex()
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setAutoTickIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoTickIndex</name>
                            </name>
                            =
                            <name>index</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests the axis for equality with an arbitrary object.
                *
                * @param obj the object (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                ==
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!(<name>obj</name>
                                <name>instanceof</name>
                                <name>ValueAxis</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>ValueAxis</name>)
                                    <name>obj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>positiveArrowVisible</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>positiveArrowVisible</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>negativeArrowVisible</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>negativeArrowVisible</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>inverted</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>inverted</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>range</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>range</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>autoRange</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>autoRange</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>autoRangeMinimumSize</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>autoRangeMinimumSize</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>this</name>.<name>defaultAutoRange</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>defaultAutoRange</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>upperMargin</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>upperMargin</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>lowerMargin</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>lowerMargin</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>fixedAutoRange</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>fixedAutoRange</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>autoTickUnitSelection</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>autoTickUnitSelection</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>standardTickUnits</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>standardTickUnits</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>verticalTickLabels</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>verticalTickLabels</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>obj</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a clone of the object.
                *
                * @return A clone.
                *
                * @throws CloneNotSupportedException if some component of the axis does
                * not support cloning.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>CloneNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>clone</name> =
                            <init>
                                <expr>(<name>ValueAxis</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>clone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provides serialization support.
                *
                * @param stream the output stream.
                *
                * @throws IOException if there is an I/O error.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>writeObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ObjectOutputStream</name>
                            </type>
                            <name>stream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stream</name>.
                                    <name>defaultWriteObject</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>upArrow</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>downArrow</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>leftArrow</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>rightArrow</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provides serialization support.
                *
                * @param stream the input stream.
                *
                * @throws IOException if there is an I/O error.
                * @throws ClassNotFoundException if there is a classpath problem.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>readObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ObjectInputStream</name>
                            </type>
                            <name>stream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>ClassNotFoundException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stream</name>.
                                    <name>defaultReadObject</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>upArrow</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>downArrow</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>leftArrow</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>rightArrow</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

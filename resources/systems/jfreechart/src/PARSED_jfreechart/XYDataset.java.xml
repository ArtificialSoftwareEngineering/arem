<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\data\xy\XYDataset.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * --------------
        * XYDataset.java
        * --------------
        * (C) Copyright 2000-2007, by Object Refinery Limited.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): -;
        *
        * Changes (from 18-Sep-2001)
        * --------------------------
        * 18-Sep-2001 : Added standard header and fixed DOS encoding problem (DG);
        * 15-Oct-2001 : Moved to a new package (com.jrefinery.data.*) (DG);
        * 22-Oct-2001 : Renamed DataSource.java --&gt; Dataset.java etc. (DG);
        * 17-Nov-2001 : Now extends SeriesDataset (DG);
        * 15-Jul-2004 : Switched getX() with getXValue() and getY() with
        * getYValue() (DG);
        * 29-Jul-2004 : Added getDomainOrder() method (DG);
        * 18-Aug-2004 : Moved from org.jfree.data --&gt; org.jfree.data.xy (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>xy</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>DomainOrder</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.
            <name>SeriesDataset</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An interface through which data in the form of (x, y) items can be accessed.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>XYDataset</name>
        <super>
            <extends>extends
                <name>SeriesDataset</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Returns the order of the domain (or X) values returned by the dataset.
                *
                * @return The order (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>DomainOrder</name>
                </type>
                <name>getDomainOrder</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the number of items in a series.
                * &lt;br&gt;&lt;br&gt;
                * It is recommended that classes that implement this method should throw
                * an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the &lt;code&gt;series&lt;/code&gt;
                * argument is outside the specified range.
                *
                * @param series the series index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getSeriesCount() - 1&lt;/code&gt;).
                *
                * @return The item count.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getItemCount</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the x-value for an item within a series. The x-values may or
                * may not be returned in ascending order, that is up to the class
                * implementing the interface.
                *
                * @param series the series index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getSeriesCount() - 1&lt;/code&gt;).
                * @param item the item index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getItemCount(series)&lt;/code&gt;).
                *
                * @return The x-value (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getX</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the x-value for an item within a series.
                *
                * @param series the series index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getSeriesCount() - 1&lt;/code&gt;).
                * @param item the item index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getItemCount(series)&lt;/code&gt;).
                *
                * @return The x-value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getXValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the y-value for an item within a series.
                *
                * @param series the series index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getSeriesCount() - 1&lt;/code&gt;).
                * @param item the item index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getItemCount(series)&lt;/code&gt;).
                *
                * @return The y-value (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getY</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the y-value (as a double primitive) for an item within a series.
                *
                * @param series the series index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getSeriesCount() - 1&lt;/code&gt;).
                * @param item the item index (in the range &lt;code&gt;0&lt;/code&gt; to
                * &lt;code&gt;getItemCount(series)&lt;/code&gt;).
                *
                * @return The y-value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getYValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>

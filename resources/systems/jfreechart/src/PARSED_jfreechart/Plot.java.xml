<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\plot\Plot.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ---------
        * Plot.java
        * ---------
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): Sylvain Vieujot;
        * Jeremy Bowman;
        * Andreas Schneider;
        * Gideon Krause;
        * Nicolas Brodu;
        * Michal Krause;
        *
        * Changes
        * -------
        * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG);
        * 18-Sep-2001 : Updated header info and fixed DOS encoding problem (DG);
        * 19-Oct-2001 : Moved series paint and stroke methods from JFreeChart
        * class (DG);
        * 23-Oct-2001 : Created renderer for LinePlot class (DG);
        * 07-Nov-2001 : Changed type names for ChartChangeEvent (DG);
        * Tidied up some Javadoc comments (DG);
        * 13-Nov-2001 : Changes to allow for null axes on plots such as PiePlot (DG);
        * Added plot/axis compatibility checks (DG);
        * 12-Dec-2001 : Changed constructors to protected, and removed unnecessary
        * 'throws' clauses (DG);
        * 13-Dec-2001 : Added tooltips (DG);
        * 22-Jan-2002 : Added handleClick() method, as part of implementation for
        * crosshairs (DG);
        * Moved tooltips reference into ChartInfo class (DG);
        * 23-Jan-2002 : Added test for null axes in chartChanged() method, thanks
        * to Barry Evans for the bug report (number 506979 on
        * SourceForge) (DG);
        * Added a zoom() method (DG);
        * 05-Feb-2002 : Updated setBackgroundPaint(), setOutlineStroke() and
        * setOutlinePaint() to better handle null values, as suggested
        * by Sylvain Vieujot (DG);
        * 06-Feb-2002 : Added background image, plus alpha transparency for background
        * and foreground (DG);
        * 06-Mar-2002 : Added AxisConstants interface (DG);
        * 26-Mar-2002 : Changed zoom method from empty to abstract (DG);
        * 23-Apr-2002 : Moved dataset from JFreeChart class (DG);
        * 11-May-2002 : Added ShapeFactory interface for getShape() methods,
        * contributed by Jeremy Bowman (DG);
        * 28-May-2002 : Fixed bug in setSeriesPaint(int, Paint) for subplots (AS);
        * 25-Jun-2002 : Removed redundant imports (DG);
        * 30-Jul-2002 : Added 'no data' message for charts with null or empty
        * datasets (DG);
        * 21-Aug-2002 : Added code to extend series array if necessary (refer to
        * SourceForge bug id 594547 for details) (DG);
        * 17-Sep-2002 : Fixed bug in getSeriesOutlineStroke() method, reported by
        * Andreas Schroeder (DG);
        * 23-Sep-2002 : Added getLegendItems() abstract method (DG);
        * 24-Sep-2002 : Removed firstSeriesIndex, subplots now use their own paint
        * settings, there is a new mechanism for the legend to collect
        * the legend items (DG);
        * 27-Sep-2002 : Added dataset group (DG);
        * 14-Oct-2002 : Moved listener storage into EventListenerList. Changed some
        * abstract methods to empty implementations (DG);
        * 28-Oct-2002 : Added a getBackgroundImage() method (DG);
        * 21-Nov-2002 : Added a plot index for identifying subplots in combined and
        * overlaid charts (DG);
        * 22-Nov-2002 : Changed all attributes from 'protected' to 'private'. Added
        * dataAreaRatio attribute from David M O'Donnell's code (DG);
        * 09-Jan-2003 : Integrated fix for plot border contributed by Gideon
        * Krause (DG);
        * 17-Jan-2003 : Moved to com.jrefinery.chart.plot (DG);
        * 23-Jan-2003 : Removed one constructor (DG);
        * 26-Mar-2003 : Implemented Serializable (DG);
        * 14-Jul-2003 : Moved the dataset and secondaryDataset attributes to the
        * CategoryPlot and XYPlot classes (DG);
        * 21-Jul-2003 : Moved DrawingSupplier from CategoryPlot and XYPlot up to this
        * class (DG);
        * 20-Aug-2003 : Implemented Cloneable (DG);
        * 11-Sep-2003 : Listeners and clone (NB);
        * 29-Oct-2003 : Added workaround for font alignment in PDF output (DG);
        * 03-Dec-2003 : Modified draw method to accept anchor (DG);
        * 12-Mar-2004 : Fixed clipping bug in drawNoDataMessage() method (DG);
        * 07-Apr-2004 : Modified string bounds calculation (DG);
        * 04-Nov-2004 : Added default shapes for legend items (DG);
        * 25-Nov-2004 : Some changes to the clone() method implementation (DG);
        * 23-Feb-2005 : Implemented new LegendItemSource interface (and also
        * PublicCloneable) (DG);
        * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG);
        * 05-May-2005 : Removed unused draw() method (DG);
        * 06-Jun-2005 : Fixed bugs in equals() method (DG);
        * 01-Sep-2005 : Moved dataAreaRatio from here to ContourPlot (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 30-Jun-2006 : Added background image alpha - see bug report 1514904 (DG);
        * 05-Sep-2006 : Implemented the MarkerChangeListener interface (DG);
        * 11-Jan-2007 : Added some argument checks, event notifications, and many
        * API doc updates (DG);
        * 03-Apr-2007 : Made drawBackgroundImage() public (DG);
        * 07-Jun-2007 : Added new fillBackground() method to handle GradientPaint
        * taking into account orientation (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>plot</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>AlphaComposite</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>BasicStroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Color</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Composite</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Font</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>GradientPaint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Image</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Paint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Shape</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Stroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Ellipse2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Point2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>swing</name>.<name>event</name>.
            <name>EventListenerList</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItemCollection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItemSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name>.
            <name>AxisLocation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>AxisChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>AxisChangeListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>ChartChangeEventType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>MarkerChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>MarkerChangeListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>PlotChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>PlotChangeListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.
            <name>DatasetChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.
            <name>DatasetChangeListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.
            <name>DatasetGroup</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>io</name>.
            <name>SerialUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>text</name>.
            <name>G2TextMeasurer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>text</name>.
            <name>TextBlock</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>text</name>.
            <name>TextBlockAnchor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>text</name>.
            <name>TextUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>Align</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>RectangleEdge</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>RectangleInsets</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ObjectUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PaintUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PublicCloneable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * The base class for all plots in JFreeChart. The
        * {@link org.jfree.chart.JFreeChart} class delegates the drawing of axes and
        * data to the plot. This base class provides facilities common to most plot
        * types.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>Plot</name>
        <super>
            <implements>implements <name>AxisChangeListener</name>,
                <name>DatasetChangeListener</name>,
                <name>MarkerChangeListener</name>,
                <name>LegendItemSource</name>,
                <name>PublicCloneable</name>,
                <name>Cloneable</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** For serialization. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>-8831571430103671324L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Useful constant representing zero. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Number</name>
                    </type>
                    <name>ZERO</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Integer</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default insets. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>RectangleInsets</name>
                    </type>
                    <name>DEFAULT_INSETS</name>
                    =
                    <init>
                        <expr>new
                            <call>
                                <name>RectangleInsets</name>
                                <argument_list>(
                                    <argument>
                                        <expr>4.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>8.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>4.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>8.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default outline stroke. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Stroke</name>
                    </type>
                    <name>DEFAULT_OUTLINE_STROKE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BasicStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0.5f</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default outline color. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Paint</name>
                    </type>
                    <name>DEFAULT_OUTLINE_PAINT</name> =
                    <init>
                        <expr>
                            <name><name>Color</name>.
                                <name>gray</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default foreground alpha transparency. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>float</name>
                    </type>
                    <name>DEFAULT_FOREGROUND_ALPHA</name> =
                    <init>
                        <expr>1.0f</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default background alpha transparency. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>float</name>
                    </type>
                    <name>DEFAULT_BACKGROUND_ALPHA</name> =
                    <init>
                        <expr>1.0f</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default background color. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Paint</name>
                    </type>
                    <name>DEFAULT_BACKGROUND_PAINT</name> =
                    <init>
                        <expr>
                            <name><name>Color</name>.
                                <name>white</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The minimum width at which the plot should be drawn. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MINIMUM_WIDTH_TO_DRAW</name> =
                    <init>
                        <expr>10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The minimum height at which the plot should be drawn. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>int</name>
                    </type>
                    <name>MINIMUM_HEIGHT_TO_DRAW</name> =
                    <init>
                        <expr>10</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A default box shape for legend items. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Shape</name>
                    </type>
                    <name>DEFAULT_LEGEND_ITEM_BOX</name>
                    =
                    <init>
                        <expr>new
                            <call>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>-4.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-4.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>8.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>8.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A default circle shape for legend items. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Shape</name>
                    </type>
                    <name>DEFAULT_LEGEND_ITEM_CIRCLE</name>
                    =
                    <init>
                        <expr>new
                            <call>
                                <name><name>Ellipse2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>-4.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-4.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>8.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>8.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The parent plot (&lt;code&gt;null&lt;/code&gt; if this is the root plot). */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Plot</name>
                    </type>
                    <name>parent</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The dataset group (to be used for thread synchronisation). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>DatasetGroup</name>
                    </type>
                    <name>datasetGroup</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The message to display if no data is available. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>noDataMessage</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The font used to display the 'no data' message. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Font</name>
                    </type>
                    <name>noDataMessageFont</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The paint used to draw the 'no data' message. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>noDataMessagePaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Amount of blank space around the plot area. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>RectangleInsets</name>
                    </type>
                    <name>insets</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not the plot outline is drawn.
                *
                * @since 1.0.6
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>outlineVisible</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The Stroke used to draw an outline around the plot. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Stroke</name>
                    </type>
                    <name>outlineStroke</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The Paint used to draw an outline around the plot. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>outlinePaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** An optional color used to fill the plot background. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>backgroundPaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** An optional image for the plot background. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Image</name>
                    </type>
                    <name>backgroundImage</name>
                </decl>
                ;
            </decl_stmt>
            <comment type="line">// not currently serialized</comment>

            <comment type="javadoc">/** The alignment for the background image. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>int</name>
                    </type>
                    <name>backgroundImageAlignment</name> =
                    <init>
                        <expr>
                            <name><name>Align</name>.
                                <name>FIT</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The alpha value used to draw the background image. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>float</name>
                    </type>
                    <name>backgroundImageAlpha</name> =
                    <init>
                        <expr>0.5f</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The alpha-transparency for the plot. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>float</name>
                    </type>
                    <name>foregroundAlpha</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The alpha transparency for the background paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>float</name>
                    </type>
                    <name>backgroundAlpha</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The drawing supplier. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>DrawingSupplier</name>
                    </type>
                    <name>drawingSupplier</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Storage for registered change listeners. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>EventListenerList</name>
                    </type>
                    <name>listenerList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new plot.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>Plot</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>parent</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>insets</name>
                            </name>
                            =
                            <name>DEFAULT_INSETS</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundPaint</name>
                            </name>
                            =
                            <name>DEFAULT_BACKGROUND_PAINT</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundAlpha</name>
                            </name>
                            =
                            <name>DEFAULT_BACKGROUND_ALPHA</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundImage</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineVisible</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineStroke</name>
                            </name>
                            =
                            <name>DEFAULT_OUTLINE_STROKE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlinePaint</name>
                            </name>
                            =
                            <name>DEFAULT_OUTLINE_PAINT</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>foregroundAlpha</name>
                            </name>
                            =
                            <name>DEFAULT_FOREGROUND_ALPHA</name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessage</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessageFont</name>
                            </name>
                            = new
                            <call>
                                <name>Font</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"SansSerif"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Font</name>.
                                                <name>PLAIN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>12</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessagePaint</name>
                            </name>
                            =
                            <name><name>Color</name>.
                                <name>black</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>drawingSupplier</name>
                            </name>
                            = new
                            <call>
                                <name>DefaultDrawingSupplier</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>listenerList</name>
                            </name>
                            = new
                            <call>
                                <name>EventListenerList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the dataset group for the plot (not currently used).
                *
                * @return The dataset group.
                *
                * @see #setDatasetGroup(DatasetGroup)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DatasetGroup</name>
                </type>
                <name>getDatasetGroup</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>datasetGroup</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the dataset group (not currently used).
                *
                * @param group the dataset group (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getDatasetGroup()
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>setDatasetGroup</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DatasetGroup</name>
                            </type>
                            <name>group</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>datasetGroup</name>
                            </name>
                            =
                            <name>group</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the string that is displayed when the dataset is empty or
                * &lt;code&gt;null&lt;/code&gt;.
                *
                * @return The 'no data' message (&lt;code&gt;null&lt;/code&gt; possible).
                *
                * @see #setNoDataMessage(String)
                * @see #getNoDataMessageFont()
                * @see #getNoDataMessagePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>getNoDataMessage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessage</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the message that is displayed when the dataset is empty or
                * &lt;code&gt;null&lt;/code&gt;, and sends a {@link PlotChangeEvent} to all registered
                * listeners.
                *
                * @param message the message (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getNoDataMessage()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNoDataMessage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>message</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessage</name>
                            </name>
                            =
                            <name>message</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the font used to display the 'no data' message.
                *
                * @return The font (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setNoDataMessageFont(Font)
                * @see #getNoDataMessage()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getNoDataMessageFont</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessageFont</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the font used to display the 'no data' message and sends a
                * {@link PlotChangeEvent} to all registered listeners.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getNoDataMessageFont()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNoDataMessageFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>font</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'font' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessageFont</name>
                            </name>
                            =
                            <name>font</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to display the 'no data' message.
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setNoDataMessagePaint(Paint)
                * @see #getNoDataMessage()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getNoDataMessagePaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessagePaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used to display the 'no data' message and sends a
                * {@link PlotChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getNoDataMessagePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNoDataMessagePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'paint' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessagePaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a short string describing the plot type.
                * &lt;P&gt;
                * Note: this gets used in the chart property editing user interface,
                * but there needs to be a better mechanism for identifying the plot type.
                *
                * @return A short string describing the plot type (never
                * &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>String</name>
                </type>
                <name>getPlotType</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the parent plot (or &lt;code&gt;null&lt;/code&gt; if this plot is not part
                * of a combined plot).
                *
                * @return The parent plot.
                *
                * @see #setParent(Plot)
                * @see #getRootPlot()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Plot</name>
                </type>
                <name>getParent</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>parent</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the parent plot. This method is intended for internal use, you
                * shouldn't need to call it directly.
                *
                * @param parent the parent plot (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getParent()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setParent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Plot</name>
                            </type>
                            <name>parent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>parent</name>
                            </name>
                            =
                            <name>parent</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the root plot.
                *
                * @return The root plot.
                *
                * @see #getParent()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Plot</name>
                </type>
                <name>getRootPlot</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Plot</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getParent</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>p</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>this</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>p</name>.
                                                <name>getRootPlot</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if this plot is part of a combined plot
                * structure (that is, {@link #getParent()} returns a non-&lt;code&gt;null&lt;/code&gt;
                * value), and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @return &lt;code&gt;true&lt;/code&gt; if this plot is part of a combined plot
                * structure.
                *
                * @see #getParent()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSubplot</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name>getParent</name>
                                <argument_list>()</argument_list>
                            </call>
                            != <name>null</name>)
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the insets for the plot area.
                *
                * @return The insets (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setInsets(RectangleInsets)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>RectangleInsets</name>
                </type>
                <name>getInsets</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>insets</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the insets for the plot and sends a {@link PlotChangeEvent} to
                * all registered listeners.
                *
                * @param insets the new insets (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getInsets()
                * @see #setInsets(RectangleInsets, boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setInsets</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RectangleInsets</name>
                            </type>
                            <name>insets</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setInsets</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>insets</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the insets for the plot and, if requested, and sends a
                * {@link PlotChangeEvent} to all registered listeners.
                *
                * @param insets the new insets (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify a flag that controls whether the registered listeners are
                * notified.
                *
                * @see #getInsets()
                * @see #setInsets(RectangleInsets)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setInsets</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RectangleInsets</name>
                            </type>
                            <name>insets</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>insets</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'insets' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>this</name>.<name>insets</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>insets</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>insets</name>
                                        </name>
                                        =
                                        <name>insets</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>notify</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>notifyListeners</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>PlotChangeEvent</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>this</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the background color of the plot area.
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBackgroundPaint(Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBackgroundPaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundPaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the background color of the plot area and sends a
                * {@link PlotChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBackgroundPaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBackgroundPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>backgroundPaint</name>
                                            </name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>backgroundPaint</name>
                                                    </name>
                                                    =
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>notifyListeners</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>PlotChangeEvent</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>this</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>backgroundPaint</name>
                                            </name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>this</name>.<name>backgroundPaint</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>paint</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return;</return>
                                                        <comment type="line">// nothing to do</comment>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>backgroundPaint</name>
                                        </name>
                                        =
                                        <name>paint</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>PlotChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the alpha transparency of the plot area background.
                *
                * @return The alpha transparency.
                *
                * @see #setBackgroundAlpha(float)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>float</name>
                </type>
                <name>getBackgroundAlpha</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundAlpha</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the alpha transparency of the plot area background, and notifies
                * registered listeners that the plot has been modified.
                *
                * @param alpha the new alpha value (in the range 0.0f to 1.0f).
                *
                * @see #getBackgroundAlpha()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBackgroundAlpha</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>alpha</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundAlpha</name>
                                </name>
                                !=
                                <name>alpha</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>backgroundAlpha</name>
                                        </name>
                                        =
                                        <name>alpha</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>PlotChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the drawing supplier for the plot.
                *
                * @return The drawing supplier (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setDrawingSupplier(DrawingSupplier)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DrawingSupplier</name>
                </type>
                <name>getDrawingSupplier</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DrawingSupplier</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Plot</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getParent</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>p</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>p</name>.
                                                <name>getDrawingSupplier</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name><name>this</name>.
                                            <name>drawingSupplier</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the drawing supplier for the plot. The drawing supplier is
                * responsible for supplying a limitless (possibly repeating) sequence of
                * &lt;code&gt;Paint&lt;/code&gt;, &lt;code&gt;Stroke&lt;/code&gt; and &lt;code&gt;Shape&lt;/code&gt;
                objects
                * that the plot's renderer(s) can use to populate its (their) tables.
                *
                * @param supplier the new supplier.
                *
                * @see #getDrawingSupplier()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDrawingSupplier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DrawingSupplier</name>
                            </type>
                            <name>supplier</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>drawingSupplier</name>
                            </name>
                            =
                            <name>supplier</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the background image that is used to fill the plot's background
                * area.
                *
                * @return The image (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBackgroundImage(Image)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Image</name>
                </type>
                <name>getBackgroundImage</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundImage</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the background image for the plot and sends a
                * {@link PlotChangeEvent} to all registered listeners.
                *
                * @param image the image (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBackgroundImage()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBackgroundImage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Image</name>
                            </type>
                            <name>image</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundImage</name>
                            </name>
                            =
                            <name>image</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the background image alignment. Alignment constants are defined
                * in the &lt;code&gt;org.jfree.ui.Align&lt;/code&gt; class in the JCommon class
                * library.
                *
                * @return The alignment.
                *
                * @see #setBackgroundImageAlignment(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getBackgroundImageAlignment</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundImageAlignment</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the alignment for the background image and sends a
                * {@link PlotChangeEvent} to all registered listeners. Alignment options
                * are defined by the {@link org.jfree.ui.Align} class in the JCommon
                * class library.
                *
                * @param alignment the alignment.
                *
                * @see #getBackgroundImageAlignment()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBackgroundImageAlignment</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>alignment</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundImageAlignment</name>
                                </name>
                                !=
                                <name>alignment</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>backgroundImageAlignment</name>
                                        </name>
                                        =
                                        <name>alignment</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>PlotChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the alpha transparency used to draw the background image. This
                * is a value in the range 0.0f to 1.0f, where 0.0f is fully transparent
                * and 1.0f is fully opaque.
                *
                * @return The alpha transparency.
                *
                * @see #setBackgroundImageAlpha(float)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>float</name>
                </type>
                <name>getBackgroundImageAlpha</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundImageAlpha</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the alpha transparency used when drawing the background image.
                *
                * @param alpha the alpha transparency (in the range 0.0f to 1.0f, where
                * 0.0f is fully transparent, and 1.0f is fully opaque).
                *
                * @throws IllegalArgumentException if &lt;code&gt;alpha&lt;/code&gt; is not within
                * the specified range.
                *
                * @see #getBackgroundImageAlpha()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBackgroundImageAlpha</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>alpha</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>alpha</name>
                                &lt; 0.0f || <name>alpha</name> &gt; 1.0f
                            </expr>
                            )
                        </condition>
                        <then>
                            <throw>throw
                                <expr>new
                                    <call>
                                        <name>IllegalArgumentException</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>"The 'alpha' value must be in the range 0.0f to 1.0f."</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </throw>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundImageAlpha</name>
                                </name>
                                !=
                                <name>alpha</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>backgroundImageAlpha</name>
                                        </name>
                                        =
                                        <name>alpha</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>this</name>.
                                                <name>notifyListeners</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>PlotChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the plot outline is
                * drawn. The default value is &lt;code&gt;true&lt;/code&gt;. Note that for
                * historical reasons, the plot's outline paint and stroke can take on
                * &lt;code&gt;null&lt;/code&gt; values, in which case the outline will not be drawn
                * even if this flag is set to &lt;code&gt;true&lt;/code&gt;.
                *
                * @return The outline visibility flag.
                *
                * @since 1.0.6
                *
                * @see #setOutlineVisible(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isOutlineVisible</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>outlineVisible</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not the plot's outline is
                * drawn, and sends a {@link PlotChangeEvent} to all registered listeners.
                *
                * @param visible the new flag value.
                *
                * @since 1.0.6
                *
                * @see #isOutlineVisible()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlineVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the stroke used to outline the plot area.
                *
                * @return The stroke (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setOutlineStroke(Stroke)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getOutlineStroke</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>outlineStroke</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the stroke used to outline the plot area and sends a
                * {@link PlotChangeEvent} to all registered listeners. If you set this
                * attribute to &lt;code&gt;null&lt;/code&gt;, no outline will be drawn.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getOutlineStroke()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>stroke</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlineStroke</name>
                                            </name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>outlineStroke</name>
                                                    </name>
                                                    =
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>notifyListeners</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>PlotChangeEvent</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>this</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlineStroke</name>
                                            </name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>this</name>.<name>outlineStroke</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>stroke</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return;</return>
                                                        <comment type="line">// nothing to do</comment>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>outlineStroke</name>
                                        </name>
                                        =
                                        <name>stroke</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>PlotChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the color used to draw the outline of the plot area.
                *
                * @return The color (possibly &lt;code&gt;null&lt;code&gt;).
                *
                * @see #setOutlinePaint(Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getOutlinePaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>outlinePaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used to draw the outline of the plot area and sends a
                * {@link PlotChangeEvent} to all registered listeners. If you set this
                * attribute to &lt;code&gt;null&lt;/code&gt;, no outline will be drawn.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getOutlinePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlinePaint</name>
                                            </name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>outlinePaint</name>
                                                    </name>
                                                    =
                                                    <name>null</name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>notifyListeners</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>new
                                                                    <call>
                                                                        <name>PlotChangeEvent</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>this</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlinePaint</name>
                                            </name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>this</name>.<name>outlinePaint</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>paint</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return;</return>
                                                        <comment type="line">// nothing to do</comment>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>outlinePaint</name>
                                        </name>
                                        =
                                        <name>paint</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>PlotChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the alpha-transparency for the plot foreground.
                *
                * @return The alpha-transparency.
                *
                * @see #setForegroundAlpha(float)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>float</name>
                </type>
                <name>getForegroundAlpha</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>foregroundAlpha</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the alpha-transparency for the plot and sends a
                * {@link PlotChangeEvent} to all registered listeners.
                *
                * @param alpha the new alpha transparency.
                *
                * @see #getForegroundAlpha()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setForegroundAlpha</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>float</name>
                            </type>
                            <name>alpha</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>foregroundAlpha</name>
                                </name>
                                !=
                                <name>alpha</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>foregroundAlpha</name>
                                        </name>
                                        =
                                        <name>alpha</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>notifyListeners</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>PlotChangeEvent</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>this</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the legend items for the plot. By default, this method returns
                * &lt;code&gt;null&lt;/code&gt;. Subclasses should override to return a
                * {@link LegendItemCollection}.
                *
                * @return The legend items for the plot (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>LegendItemCollection</name>
                </type>
                <name>getLegendItems</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name>null</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Registers an object for notification of changes to the plot.
                *
                * @param listener the object to be registered.
                *
                * @see #removeChangeListener(PlotChangeListener)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>PlotChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>listenerList</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>PlotChangeListener</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Unregisters an object for notification of changes to the plot.
                *
                * @param listener the object to be unregistered.
                *
                * @see #addChangeListener(PlotChangeListener)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>PlotChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>listenerList</name>.
                                    <name>remove</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>PlotChangeListener</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Notifies all registered listeners that the plot has been modified.
                *
                * @param event information about the change event.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>notifyListeners</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>PlotChangeEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>listeners</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>listenerList</name>.
                                            <name>getListenerList</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>listeners</name>.
                                            <name>length</name>
                                        </name>
                                        - 2
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                -= 2
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>listeners</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name><name>PlotChangeListener</name>.
                                            <name>
                                                <name/>
                                            </name>
                                        </name>
                                        class
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>PlotChangeListener</name>)
                                                <name>
                                                    <name>listeners</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                            + 1
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ).
                                                <call>
                                                    <name>plotChanged</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>event</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws the plot within the specified area. The anchor is a point on the
                * chart that is specified externally (for instance, it may be the last
                * point of the last mouse click performed by the user) - plots can use or
                * ignore this value as they see fit.
                * &lt;br&gt;&lt;br&gt;
                * Subclasses need to provide an implementation of this method, obviously.
                *
                * @param g2 the graphics device.
                * @param area the plot area.
                * @param anchor the anchor point (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param parentState the parent state (if any).
                * @param info carries back plot rendering info.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>draw</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotState</name>
                            </type>
                            <name>parentState</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws the plot background (the background color and/or image).
                * &lt;P&gt;
                * This method will be called during the chart drawing process and is
                * declared public so that it can be accessed by the renderers used by
                * certain subclasses. You shouldn't need to call this method directly.
                *
                * @param g2 the graphics device.
                * @param area the area within which the plot should be drawn.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawBackground</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// some subclasses override this method completely, so don't put</comment>
                    <comment type="line">// anything here that *must* be done</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fillBackground</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>area</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>drawBackgroundImage</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>area</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Fills the specified area with the background paint.
                *
                * @param g2 the graphics device.
                * @param area the area.
                *
                * @see #getBackgroundPaint()
                * @see #getBackgroundAlpha()
                * @see #fillBackground(Graphics2D, Rectangle2D, PlotOrientation)
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fillBackground</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fillBackground</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>area</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>PlotOrientation</name>.
                                                <name>VERTICAL</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Fills the specified area with the background paint. If the background
                * paint is an instance of &lt;code&gt;GradientPaint&lt;/code&gt;, the gradient will
                * run in the direction suggested by the plot's orientation.
                *
                * @param g2 the graphics target.
                * @param area the plot area.
                * @param orientation the plot orientation (&lt;code&gt;null&lt;/code&gt; not
                * permitted).
                *
                * @since 1.0.6
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fillBackground</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>orientation</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'orientation' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundPaint</name>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.
                                        <name>backgroundPaint</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>p</name>
                                <name>instanceof</name>
                                <name>GradientPaint</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>GradientPaint</name>
                                        </type>
                                        <name>gp</name> =
                                        <init>
                                            <expr>(<name>GradientPaint</name>)
                                                <name>p</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>orientation</name>
                                            ==
                                            <name><name>PlotOrientation</name>.
                                                <name>VERTICAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>p</name>
                                                    = new
                                                    <call>
                                                        <name>GradientPaint</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>(<name>float</name>)
                                                                    <call>
                                                                        <name><name>area</name>.
                                                                            <name>getCenterX</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>float</name>)
                                                                    <call>
                                                                        <name><name>area</name>.
                                                                            <name>getMaxY</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>gp</name>.
                                                                            <name>getColor1</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>float</name>)
                                                                    <call>
                                                                        <name><name>area</name>.
                                                                            <name>getCenterX</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>float</name>)
                                                                    <call>
                                                                        <name><name>area</name>.
                                                                            <name>getMinY</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>gp</name>.
                                                                            <name>getColor2</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>HORIZONTAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>p</name>
                                                            = new
                                                            <call>
                                                                <name>GradientPaint</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <call>
                                                                                <name><name>area</name>.
                                                                                    <name>getMinX</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <call>
                                                                                <name><name>area</name>.
                                                                                    <name>getCenterY</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>gp</name>.
                                                                                    <name>getColor1</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <call>
                                                                                <name><name>area</name>.
                                                                                    <name>getMaxX</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <call>
                                                                                <name><name>area</name>.
                                                                                    <name>getCenterY</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>gp</name>.
                                                                                    <name>getColor2</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Composite</name>
                            </type>
                            <name>originalComposite</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>getComposite</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setComposite</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>AlphaComposite</name>.
                                                    <name>getInstance</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>AlphaComposite</name>.
                                                                <name>SRC_OVER</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>backgroundAlpha</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>p</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>fill</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>area</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setComposite</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>originalComposite</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws the background image (if there is one) aligned within the
                * specified area.
                *
                * @param g2 the graphics device.
                * @param area the area.
                *
                * @see #getBackgroundImage()
                * @see #getBackgroundImageAlignment()
                * @see #getBackgroundImageAlpha()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawBackgroundImage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundImage</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Composite</name>
                                        </type>
                                        <name>originalComposite</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>getComposite</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setComposite</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>AlphaComposite</name>.
                                                                <name>getInstance</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>AlphaComposite</name>.
                                                                            <name>SRC_OVER</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>this</name>.
                                                                            <name>backgroundImageAlpha</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Rectangle2D</name>
                                        </type>
                                        <name>dest</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name><name>Rectangle2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0.0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0.0</expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>this</name>.<name>backgroundImage</name>.
                                                                        <name>getWidth</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>this</name>.<name>backgroundImage</name>.
                                                                        <name>getHeight</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>null</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>Align</name>.
                                                <name>align</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>dest</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>area</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>backgroundImageAlignment</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>drawImage</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>backgroundImage</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>int</name>)
                                                        <call>
                                                            <name><name>dest</name>.
                                                                <name>getX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>int</name>)
                                                        <call>
                                                            <name><name>dest</name>.
                                                                <name>getY</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>int</name>)
                                                        <call>
                                                            <name><name>dest</name>.
                                                                <name>getWidth</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        + 1
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>int</name>)
                                                        <call>
                                                            <name><name>dest</name>.
                                                                <name>getHeight</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        + 1
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setComposite</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>originalComposite</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws the plot outline. This method will be called during the chart
                * drawing process and is declared public so that it can be accessed by the
                * renderers used by certain subclasses. You shouldn't need to call this
                * method directly.
                *
                * @param g2 the graphics device.
                * @param area the area within which the plot should be drawn.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawOutline</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>!
                                <name><name>this</name>.
                                    <name>outlineVisible</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>(
                                <name><name>this</name>.
                                    <name>outlineStroke</name>
                                </name>
                                != <name>null</name>) &amp;&amp; (
                                <name><name>this</name>.
                                    <name>outlinePaint</name>
                                </name>
                                != <name>null</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setStroke</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>outlineStroke</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setPaint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>outlinePaint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>draw</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>area</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws a message to state that there is no data to plot.
                *
                * @param g2 the graphics device.
                * @param area the area within which the plot should be drawn.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawNoDataMessage</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>area</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>savedClip</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>getClip</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>clip</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>area</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>message</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.
                                        <name>noDataMessage</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>message</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setFont</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>noDataMessageFont</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setPaint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>noDataMessagePaint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>TextBlock</name>
                                        </type>
                                        <name>block</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>TextUtilities</name>.
                                                        <name>createTextBlock</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>noDataMessage</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>noDataMessageFont</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>noDataMessagePaint</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>0.9f * (<name>float</name>)
                                                                <call>
                                                                    <name><name>area</name>.
                                                                        <name>getWidth</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>new
                                                                <call>
                                                                    <name>G2TextMeasurer</name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>g2</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>block</name>.
                                                <name>draw</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>g2</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <call>
                                                            <name><name>area</name>.
                                                                <name>getCenterX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <call>
                                                            <name><name>area</name>.
                                                                <name>getCenterY</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>TextBlockAnchor</name>.
                                                            <name>CENTER</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setClip</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>savedClip</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Handles a 'click' on the plot. Since the plot does not maintain any
                * information about where it has been drawn, the plot rendering info is
                * supplied as an argument.
                *
                * @param x the x coordinate (in Java2D space).
                * @param y the y coordinate (in Java2D space).
                * @param info an object containing information about the dimensions of
                * the plot.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>handleClick</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// provides a 'no action' default</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Performs a zoom on the plot. Subclasses should override if zooming is
                * appropriate for the type of plot.
                *
                * @param percent the zoom percentage.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>zoom</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>percent</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// do nothing by default.</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Receives notification of a change to one of the plot's axes.
                *
                * @param event information about the event (not used here).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>axisChanged</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AxisChangeEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Receives notification of a change to the plot's dataset.
                * &lt;P&gt;
                * The plot reacts by passing on a plot change event to all registered
                * listeners.
                *
                * @param event information about the event (not used here).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>datasetChanged</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DatasetChangeEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PlotChangeEvent</name>
                            </type>
                            <name>newEvent</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>PlotChangeEvent</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>newEvent</name>.
                                    <name>setType</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ChartChangeEventType</name>.
                                                <name>DATASET_UPDATED</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>newEvent</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Receives notification of a change to a marker that is assigned to the
                * plot.
                *
                * @param event the event.
                *
                * @since 1.0.3
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>markerChanged</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>MarkerChangeEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>PlotChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adjusts the supplied x-value.
                *
                * @param x the x-value.
                * @param w1 width 1.
                * @param w2 width 2.
                * @param edge the edge (left or right).
                *
                * @return The adjusted x-value.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>double</name>
                </type>
                <name>getRectX</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>w1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>w2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>x</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>edge</name>
                                ==
                                <name><name>RectangleEdge</name>.
                                    <name>LEFT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        = <name>result</name> +
                                        <name>w1</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>edge</name>
                                        ==
                                        <name><name>RectangleEdge</name>.
                                            <name>RIGHT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>result</name>
                                                = <name>result</name> +
                                                <name>w2</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adjusts the supplied y-value.
                *
                * @param y the x-value.
                * @param h1 height 1.
                * @param h2 height 2.
                * @param edge the edge (top or bottom).
                *
                * @return The adjusted y-value.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>double</name>
                </type>
                <name>getRectY</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>h1</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>h2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>edge</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>y</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>edge</name>
                                ==
                                <name><name>RectangleEdge</name>.
                                    <name>TOP</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        = <name>result</name> +
                                        <name>h1</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>edge</name>
                                        ==
                                        <name><name>RectangleEdge</name>.
                                            <name>BOTTOM</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>result</name>
                                                = <name>result</name> +
                                                <name>h2</name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests this plot for equality with another object.
                *
                * @param obj the object (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                ==
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!(<name>obj</name>
                                <name>instanceof</name>
                                <name>Plot</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Plot</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>Plot</name>)
                                    <name>obj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>noDataMessage</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>noDataMessage</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>noDataMessageFont</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>noDataMessageFont</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>noDataMessagePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>noDataMessagePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>insets</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>insets</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>outlineVisible</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>outlineVisible</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>outlineStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>outlineStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>outlinePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>outlinePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>backgroundPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>backgroundPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>backgroundImage</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>backgroundImage</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundImageAlignment</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>backgroundImageAlignment</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundImageAlpha</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>backgroundImageAlpha</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>foregroundAlpha</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>foregroundAlpha</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>backgroundAlpha</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>backgroundAlpha</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>this</name>.<name>drawingSupplier</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>drawingSupplier</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates a clone of the plot.
                *
                * @return A clone.
                *
                * @throws CloneNotSupportedException if some component of the plot does not
                * support cloning.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>CloneNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Plot</name>
                            </type>
                            <name>clone</name> =
                            <init>
                                <expr>(<name>Plot</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// private Plot parent &lt;-- don't clone the parent plot, but take care
                    </comment>
                    <comment type="line">// childs in combined plots instead</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>datasetGroup</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>datasetGroup</name>
                                        </name>
                                        = (<name>DatasetGroup</name>)
                                        <call>
                                            <name><name>ObjectUtilities</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>datasetGroup</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>clone</name>.
                                <name>drawingSupplier</name>
                            </name>
                            = (<name>DrawingSupplier</name>)
                            <call>
                                <name><name>ObjectUtilities</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>drawingSupplier</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>clone</name>.
                                <name>listenerList</name>
                            </name>
                            = new
                            <call>
                                <name>EventListenerList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>clone</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provides serialization support.
                *
                * @param stream the output stream.
                *
                * @throws IOException if there is an I/O error.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>writeObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ObjectOutputStream</name>
                            </type>
                            <name>stream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stream</name>.
                                    <name>defaultWriteObject</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>noDataMessagePaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlineStroke</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlinePaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// backgroundImage</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>backgroundPaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provides serialization support.
                *
                * @param stream the input stream.
                *
                * @throws IOException if there is an I/O error.
                * @throws ClassNotFoundException if there is a classpath problem.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>readObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ObjectInputStream</name>
                            </type>
                            <name>stream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>ClassNotFoundException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stream</name>.
                                    <name>defaultReadObject</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>noDataMessagePaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineStroke</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlinePaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// backgroundImage</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>backgroundPaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>listenerList</name>
                            </name>
                            = new
                            <call>
                                <name>EventListenerList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Resolves a domain axis location for a given plot orientation.
                *
                * @param location the location (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param orientation the orientation (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return The edge (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>RectangleEdge</name>
                </type>
                <name>resolveDomainAxisLocation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AxisLocation</name>
                            </type>
                            <name>location</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>location</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'location' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>orientation</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'orientation' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>location</name>
                                ==
                                <name><name>AxisLocation</name>.
                                    <name>TOP_OR_RIGHT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>orientation</name>
                                            ==
                                            <name><name>PlotOrientation</name>.
                                                <name>HORIZONTAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <name><name>RectangleEdge</name>.
                                                        <name>RIGHT</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>VERTICAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>result</name>
                                                            =
                                                            <name><name>RectangleEdge</name>.
                                                                <name>TOP</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>location</name>
                                        ==
                                        <name><name>AxisLocation</name>.
                                            <name>TOP_OR_LEFT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>HORIZONTAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>result</name>
                                                            =
                                                            <name><name>RectangleEdge</name>.
                                                                <name>LEFT</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>orientation</name>
                                                            ==
                                                            <name><name>PlotOrientation</name>.
                                                                <name>VERTICAL</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>result</name>
                                                                    =
                                                                    <name><name>RectangleEdge</name>.
                                                                        <name>TOP</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>location</name>
                                                ==
                                                <name><name>AxisLocation</name>.
                                                    <name>BOTTOM_OR_RIGHT</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>orientation</name>
                                                            ==
                                                            <name><name>PlotOrientation</name>.
                                                                <name>HORIZONTAL</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>result</name>
                                                                    =
                                                                    <name><name>RectangleEdge</name>.
                                                                        <name>RIGHT</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>orientation</name>
                                                                    ==
                                                                    <name><name>PlotOrientation</name>.
                                                                        <name>VERTICAL</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>result</name>
                                                                            =
                                                                            <name><name>RectangleEdge</name>.
                                                                                <name>BOTTOM</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>location</name>
                                                        ==
                                                        <name><name>AxisLocation</name>.
                                                            <name>BOTTOM_OR_LEFT</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>orientation</name>
                                                                    ==
                                                                    <name><name>PlotOrientation</name>.
                                                                        <name>HORIZONTAL</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>result</name>
                                                                            =
                                                                            <name><name>RectangleEdge</name>.
                                                                                <name>LEFT</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>orientation</name>
                                                                            ==
                                                                            <name><name>PlotOrientation</name>.
                                                                                <name>VERTICAL</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>result</name>
                                                                                    =
                                                                                    <name><name>RectangleEdge</name>.
                                                                                        <name>BOTTOM</name>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                            </else>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <comment type="line">// the above should cover all the options...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalStateException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"resolveDomainAxisLocation()"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Resolves a range axis location for a given plot orientation.
                *
                * @param location the location (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param orientation the orientation (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return The edge (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>RectangleEdge</name>
                </type>
                <name>resolveRangeAxisLocation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>AxisLocation</name>
                            </type>
                            <name>location</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>location</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'location' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>orientation</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'orientation' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RectangleEdge</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>location</name>
                                ==
                                <name><name>AxisLocation</name>.
                                    <name>TOP_OR_RIGHT</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>orientation</name>
                                            ==
                                            <name><name>PlotOrientation</name>.
                                                <name>HORIZONTAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <name><name>RectangleEdge</name>.
                                                        <name>TOP</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>VERTICAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>result</name>
                                                            =
                                                            <name><name>RectangleEdge</name>.
                                                                <name>RIGHT</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>location</name>
                                        ==
                                        <name><name>AxisLocation</name>.
                                            <name>TOP_OR_LEFT</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>HORIZONTAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>result</name>
                                                            =
                                                            <name><name>RectangleEdge</name>.
                                                                <name>TOP</name>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>orientation</name>
                                                            ==
                                                            <name><name>PlotOrientation</name>.
                                                                <name>VERTICAL</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>result</name>
                                                                    =
                                                                    <name><name>RectangleEdge</name>.
                                                                        <name>LEFT</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>location</name>
                                                ==
                                                <name><name>AxisLocation</name>.
                                                    <name>BOTTOM_OR_RIGHT</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>orientation</name>
                                                            ==
                                                            <name><name>PlotOrientation</name>.
                                                                <name>HORIZONTAL</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>result</name>
                                                                    =
                                                                    <name><name>RectangleEdge</name>.
                                                                        <name>BOTTOM</name>
                                                                    </name>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>orientation</name>
                                                                    ==
                                                                    <name><name>PlotOrientation</name>.
                                                                        <name>VERTICAL</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>result</name>
                                                                            =
                                                                            <name><name>RectangleEdge</name>.
                                                                                <name>RIGHT</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                        </if>
                                                    </else>
                                                </if>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>location</name>
                                                        ==
                                                        <name><name>AxisLocation</name>.
                                                            <name>BOTTOM_OR_LEFT</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <if>if
                                                            <condition>(
                                                                <expr>
                                                                    <name>orientation</name>
                                                                    ==
                                                                    <name><name>PlotOrientation</name>.
                                                                        <name>HORIZONTAL</name>
                                                                    </name>
                                                                </expr>
                                                                )
                                                            </condition>
                                                            <then>
                                                                <block>{
                                                                    <expr_stmt>
                                                                        <expr>
                                                                            <name>result</name>
                                                                            =
                                                                            <name><name>RectangleEdge</name>.
                                                                                <name>BOTTOM</name>
                                                                            </name>
                                                                        </expr>
                                                                        ;
                                                                    </expr_stmt>
                                                                    }
                                                                </block>
                                                            </then>
                                                            <else>else
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <name>orientation</name>
                                                                            ==
                                                                            <name><name>PlotOrientation</name>.
                                                                                <name>VERTICAL</name>
                                                                            </name>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <name>result</name>
                                                                                    =
                                                                                    <name><name>RectangleEdge</name>.
                                                                                        <name>LEFT</name>
                                                                                    </name>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                            </else>
                                                        </if>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>

                    <comment type="line">// the above should cover all the options...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalStateException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"resolveRangeAxisLocation()"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

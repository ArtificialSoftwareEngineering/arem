<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\renderer\category\AbstractCategoryItemRenderer.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ---------------------------------
        * AbstractCategoryItemRenderer.java
        * ---------------------------------
        * (C) Copyright 2002-2007, by Object Refinery Limited.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): Richard Atkinson;
        *
        * Changes:
        * --------
        * 29-May-2002 : Version 1 (DG);
        * 06-Jun-2002 : Added accessor methods for the tool tip generator (DG);
        * 11-Jun-2002 : Made constructors protected (DG);
        * 26-Jun-2002 : Added axis to initialise method (DG);
        * 05-Aug-2002 : Added urlGenerator member variable plus accessors (RA);
        * 22-Aug-2002 : Added categoriesPaint attribute, based on code submitted by
        * Janet Banks. This can be used when there is only one series,
        * and you want each category item to have a different color (DG);
        * 01-Oct-2002 : Fixed errors reported by Checkstyle (DG);
        * 29-Oct-2002 : Fixed bug where background image for plot was not being
        * drawn (DG);
        * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG);
        * 26-Nov 2002 : Replaced the isStacked() method with getRangeType() (DG);
        * 09-Jan-2003 : Renamed grid-line methods (DG);
        * 17-Jan-2003 : Moved plot classes into separate package (DG);
        * 25-Mar-2003 : Implemented Serializable (DG);
        * 12-May-2003 : Modified to take into account the plot orientation (DG);
        * 12-Aug-2003 : Very minor javadoc corrections (DB)
        * 13-Aug-2003 : Implemented Cloneable (DG);
        * 16-Sep-2003 : Changed ChartRenderingInfo --&gt; PlotRenderingInfo (DG);
        * 05-Nov-2003 : Fixed marker rendering bug (833623) (DG);
        * 21-Jan-2004 : Update for renamed method in ValueAxis (DG);
        * 11-Feb-2004 : Modified labelling for markers (DG);
        * 12-Feb-2004 : Updated clone() method (DG);
        * 15-Apr-2004 : Created a new CategoryToolTipGenerator interface (DG);
        * 05-May-2004 : Fixed bug (948310) where interval markers extend outside axis
        * range (DG);
        * 14-Jun-2004 : Fixed bug in drawRangeMarker() method - now uses 'paint' and
        * 'stroke' rather than 'outlinePaint' and 'outlineStroke' (DG);
        * 15-Jun-2004 : Interval markers can now use GradientPaint (DG);
        * 30-Sep-2004 : Moved drawRotatedString() from RefineryUtilities
        * --&gt; TextUtilities (DG);
        * 01-Oct-2004 : Fixed bug 1029697, problem with label alignment in
        * drawRangeMarker() method (DG);
        * 07-Jan-2005 : Renamed getRangeExtent() --&gt; findRangeBounds() (DG);
        * 21-Jan-2005 : Modified return type of calculateRangeMarkerTextAnchorPoint()
        * method (DG);
        * 08-Mar-2005 : Fixed positioning of marker labels (DG);
        * 20-Apr-2005 : Added legend label, tooltip and URL generators (DG);
        * 01-Jun-2005 : Handle one dimension of the marker label adjustment
        * automatically (DG);
        * 09-Jun-2005 : Added utility method for adding an item entity (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 01-Mar-2006 : Updated getLegendItems() to check seriesVisibleInLegend
        * flags (DG);
        * 20-Jul-2006 : Set dataset and series indices in LegendItem (DG);
        * 23-Oct-2006 : Draw outlines for interval markers (DG);
        * 24-Oct-2006 : Respect alpha setting in markers, as suggested by Sergei
        * Ivanov in patch 1567843 (DG);
        * 30-Nov-2006 : Added a check for series visibility in the getLegendItem()
        * method (DG);
        * 07-Dec-2006 : Fix for equals() method (DG);
        * 22-Feb-2007 : Added createState() method (DG);
        * 01-Mar-2007 : Fixed interval marker drawing (patch 1670686 thanks to
        * Sergei Ivanov) (DG);
        * 20-Apr-2007 : Updated getLegendItem() for renderer change, and deprecated
        * itemLabelGenerator, toolTipGenerator and itemURLGenerator
        * override fields (DG);
        * 18-May-2007 : Set dataset and seriesKey for LegendItem (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.
            <name>category</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>AlphaComposite</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Composite</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Font</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>GradientPaint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Paint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Shape</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Stroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Line2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Point2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItem</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItemCollection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name>.
            <name>CategoryAxis</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name>.
            <name>ValueAxis</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>entity</name>.
            <name>CategoryItemEntity</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>entity</name>.
            <name>EntityCollection</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>RendererChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>CategoryItemLabelGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>CategorySeriesLabelGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>CategoryToolTipGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>ItemLabelPosition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>StandardCategorySeriesLabelGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>CategoryMarker</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>CategoryPlot</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>DrawingSupplier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>IntervalMarker</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>Marker</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>PlotOrientation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>PlotRenderingInfo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>ValueMarker</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.
            <name>AbstractRenderer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>urls</name>.
            <name>CategoryURLGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>Range</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>category</name>.
            <name>CategoryDataset</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.
            <name>DatasetUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>text</name>.
            <name>TextUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>GradientPaintTransformer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>LengthAdjustmentType</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>RectangleAnchor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>RectangleInsets</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ObjectList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ObjectUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PublicCloneable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An abstract base class that you can use to implement a new
        * {@link CategoryItemRenderer}. When you create a new
        * {@link CategoryItemRenderer} you are not required to extend this class,
        * but it makes the job easier.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>AbstractCategoryItemRenderer</name>
        <super>
            <extends>extends
                <name>AbstractRenderer</name>
            </extends>
            <implements>implements <name>CategoryItemRenderer</name>, <name>Cloneable</name>, <name>
                PublicCloneable</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** For serialization. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>1247553218442497391L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The plot that the renderer is assigned to. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategoryPlot</name>
                    </type>
                    <name>plot</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The item label generator for ALL series.
                *
                * @deprecated This field is redundant and deprecated as of version 1.0.6.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategoryItemLabelGenerator</name>
                    </type>
                    <name>itemLabelGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A list of item label generators (one per series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>itemLabelGeneratorList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base item label generator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategoryItemLabelGenerator</name>
                    </type>
                    <name>baseItemLabelGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The tool tip generator for ALL series.
                *
                * @deprecated This field is redundant and deprecated as of version 1.0.6.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategoryToolTipGenerator</name>
                    </type>
                    <name>toolTipGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A list of tool tip generators (one per series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>toolTipGeneratorList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base tool tip generator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategoryToolTipGenerator</name>
                    </type>
                    <name>baseToolTipGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The URL generator.
                *
                * @deprecated This field is redundant and deprecated as of version 1.0.6.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategoryURLGenerator</name>
                    </type>
                    <name>itemURLGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A list of item label generators (one per series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>itemURLGeneratorList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base item label generator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategoryURLGenerator</name>
                    </type>
                    <name>baseItemURLGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The legend item label generator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategorySeriesLabelGenerator</name>
                    </type>
                    <name>legendItemLabelGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The legend item tool tip generator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategorySeriesLabelGenerator</name>
                    </type>
                    <name>legendItemToolTipGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The legend item URL generator. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>CategorySeriesLabelGenerator</name>
                    </type>
                    <name>legendItemURLGenerator</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The number of rows in the dataset (temporary record). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>int</name>
                    </type>
                    <name>rowCount</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The number of columns in the dataset (temporary record). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>int</name>
                    </type>
                    <name>columnCount</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new renderer with no tool tip generator and no URL generator.
                * The defaults (no tool tip or URL generators) have been chosen to
                * minimise the processing required to generate a default chart. If you
                * require tool tips or URLs, then you can easily add the required
                * generators.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>AbstractCategoryItemRenderer</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelGenerator</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelGeneratorList</name>
                            </name>
                            = new
                            <call>
                                <name>ObjectList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>toolTipGenerator</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>toolTipGeneratorList</name>
                            </name>
                            = new
                            <call>
                                <name>ObjectList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemURLGenerator</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemURLGeneratorList</name>
                            </name>
                            = new
                            <call>
                                <name>ObjectList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>legendItemLabelGenerator</name>
                            </name>
                            = new
                            <call>
                                <name>StandardCategorySeriesLabelGenerator</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the number of passes through the dataset required by the
                * renderer. This method returns &lt;code&gt;1&lt;/code&gt;, subclasses should
                * override if they need more passes.
                *
                * @return The pass count.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getPassCount</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the plot that the renderer has been assigned to (where
                * &lt;code&gt;null&lt;/code&gt; indicates that the renderer is not currently assigned
                * to a plot).
                *
                * @return The plot (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setPlot(CategoryPlot)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryPlot</name>
                </type>
                <name>getPlot</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>plot</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the plot that the renderer has been assigned to. This method is
                * usually called by the {@link CategoryPlot}, in normal usage you
                * shouldn't need to call this method directly.
                *
                * @param plot the plot (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getPlot()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPlot</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>plot</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'plot' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>plot</name>
                            </name>
                            =
                            <name>plot</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// ITEM LABEL GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the item label generator for a data item. This implementation
                * simply passes control to the {@link #getSeriesItemLabelGenerator(int)}
                * method. If, for some reason, you want a different generator for
                * individual items, you can override this method.
                *
                * @param row the row index (zero based).
                * @param column the column index (zero based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemLabelGenerator</name>
                </type>
                <name>getItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getSeriesItemLabelGenerator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the item label generator for a series.
                *
                * @param series the series index (zero based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemLabelGenerator</name>
                </type>
                <name>getSeriesItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the generator for ALL series, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>itemLabelGenerator</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the generator table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name> =
                            <init>
                                <expr>(<name>CategoryItemLabelGenerator</name>)
                                    <call>
                                        <name><name>this</name>.<name>itemLabelGeneratorList</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>generator</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>generator</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseItemLabelGenerator</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>generator</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label generator for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelGenerator(int,
                * CategoryItemLabelGenerator)} and
                * {@link #setBaseItemLabelGenerator(CategoryItemLabelGenerator)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label generator for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero based).
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesItemLabelGenerator(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>itemLabelGeneratorList</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>generator</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base item label generator.
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseItemLabelGenerator(CategoryItemLabelGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemLabelGenerator</name>
                </type>
                <name>getBaseItemLabelGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelGenerator</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base item label generator and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBaseItemLabelGenerator()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// TOOL TIP GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the tool tip generator that should be used for the specified
                * item. This method looks up the generator using the "three-layer"
                * approach outlined in the general description of this interface. You
                * can override this method if you want to return a different generator per
                * item.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>toolTipGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name><name>this</name>.
                                            <name>toolTipGenerator</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name>getSeriesToolTipGenerator</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>row</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>result</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <name><name>this</name>.
                                                        <name>baseToolTipGenerator</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the tool tip generator that will be used for ALL items in the
                * dataset (the "layer 0" generator).
                *
                * @return A tool tip generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setToolTipGenerator(CategoryToolTipGenerator)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesToolTipGenerator(int)}
                * and {@link #getBaseToolTipGenerator()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getToolTipGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>toolTipGenerator</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the tool tip generator for ALL series and sends a
                * {@link org.jfree.chart.event.RendererChangeEvent} to all registered
                * listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getToolTipGenerator()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesToolTipGenerator(int,
                * CategoryToolTipGenerator)} and
                * {@link #setBaseToolTipGenerator(CategoryToolTipGenerator)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>toolTipGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the tool tip generator for the specified series (a "layer 1"
                * generator).
                *
                * @param series the series index (zero-based).
                *
                * @return The tool tip generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesToolTipGenerator(int, CategoryToolTipGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getSeriesToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>CategoryToolTipGenerator</name>)
                            <call>
                                <name><name>this</name>.<name>toolTipGeneratorList</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the tool tip generator for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesToolTipGenerator(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>toolTipGeneratorList</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>generator</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base tool tip generator (the "layer 2" generator).
                *
                * @return The tool tip generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseToolTipGenerator(CategoryToolTipGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getBaseToolTipGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseToolTipGenerator</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base tool tip generator and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBaseToolTipGenerator()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseToolTipGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// URL GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the URL generator for a data item. This method just calls the
                * getSeriesItemURLGenerator method, but you can override this behaviour if
                * you want to.
                *
                * @param row the row index (zero based).
                * @param column the column index (zero based).
                *
                * @return The URL generator.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryURLGenerator</name>
                </type>
                <name>getItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getSeriesItemURLGenerator</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the URL generator for a series.
                *
                * @param series the series index (zero based).
                *
                * @return The URL generator for the series.
                *
                * @see #setSeriesItemURLGenerator(int, CategoryURLGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryURLGenerator</name>
                </type>
                <name>getSeriesItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the generator for ALL series, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemURLGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>itemURLGenerator</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the generator table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>generator</name>
                            =
                            <init>
                                <expr>(<name>CategoryURLGenerator</name>)
                                    <call>
                                        <name><name>this</name>.<name>itemURLGeneratorList</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>generator</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>generator</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseItemURLGenerator</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>generator</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item URL generator for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemURLGenerator(int,
                * CategoryURLGenerator)} and
                * {@link #setBaseItemURLGenerator(CategoryURLGenerator)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemURLGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the URL generator for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero based).
                * @param generator the generator.
                *
                * @see #getSeriesItemURLGenerator(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>itemURLGeneratorList</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>generator</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base item URL generator.
                *
                * @return The item URL generator.
                *
                * @see #setBaseItemURLGenerator(CategoryURLGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryURLGenerator</name>
                </type>
                <name>getBaseItemURLGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemURLGenerator</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base item URL generator and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the item URL generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBaseItemURLGenerator()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemURLGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the number of rows in the dataset. This value is updated in the
                * {@link AbstractCategoryItemRenderer#initialise} method.
                *
                * @return The row count.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getRowCount</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>rowCount</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the number of columns in the dataset. This value is updated in
                * the {@link AbstractCategoryItemRenderer#initialise} method.
                *
                * @return The column count.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getColumnCount</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>columnCount</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates a new state instance---this method is called from the
                * {@link #initialise(Graphics2D, Rectangle2D, CategoryPlot, int,
                * PlotRenderingInfo)} method. Subclasses can override this method if
                * they need to use a subclass of {@link CategoryItemRendererState}.
                *
                * @param info collects plot rendering info (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return The new state instance (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @since 1.0.5
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>CategoryItemRendererState</name>
                </type>
                <name>createState</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>CategoryItemRendererState</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>info</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Initialises the renderer and returns a state object that will be used
                * for the remainder of the drawing process for a single chart. The state
                * object allows for the fact that the renderer may be used simultaneously
                * by multiple threads (each thread will work with a separate state object).
                *
                * @param g2 the graphics device.
                * @param dataArea the data area.
                * @param plot the plot.
                * @param rendererIndex the renderer index.
                * @param info an object for returning information about the structure of
                * the plot (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return The renderer state.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemRendererState</name>
                </type>
                <name>initialise</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rendererIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setPlot</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>plot</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>data</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getDataset</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>rendererIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>data</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>rowCount</name>
                                        </name>
                                        =
                                        <call>
                                            <name><name>data</name>.
                                                <name>getRowCount</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>columnCount</name>
                                        </name>
                                        =
                                        <call>
                                            <name><name>data</name>.
                                                <name>getColumnCount</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>rowCount</name>
                                        </name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name><name>this</name>.
                                            <name>columnCount</name>
                                        </name>
                                        = 0
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name>createState</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>info</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the range of values the renderer requires to display all the
                * items from the specified dataset.
                *
                * @param dataset the dataset (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return The range (or &lt;code&gt;null&lt;/code&gt; if the dataset is
                * &lt;code&gt;null&lt;/code&gt; or empty).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>findRangeBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>DatasetUtilities</name>.
                                    <name>findRangeBounds</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>dataset</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws a background for the data area. The default implementation just
                * gets the plot to draw the background, but some renderers will override
                * this behaviour.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param dataArea the data area.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawBackground</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>plot</name>.
                                    <name>drawBackground</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dataArea</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws an outline for the data area. The default implementation just
                * gets the plot to draw the outline, but some renderers will override this
                * behaviour.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param dataArea the data area.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawOutline</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>plot</name>.
                                    <name>drawOutline</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>g2</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>dataArea</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws a grid line against the domain axis.
                * &lt;P&gt;
                * Note that this default implementation assumes that the horizontal axis
                * is the domain axis. If this is not the case, you will need to override
                * this method.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param dataArea the area for plotting data (not yet adjusted for any
                * 3D effect).
                * @param value the Java2D value at which the grid line should be drawn.
                *
                * @see #drawRangeGridline(Graphics2D, CategoryPlot, ValueAxis,
                * Rectangle2D, double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawDomainGridline</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Line2D</name>
                            </type>
                            <name>line</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getOrientation</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name>orientation</name>
                                ==
                                <name><name>PlotOrientation</name>.
                                    <name>HORIZONTAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>line</name>
                                        = new
                                        <call>
                                            <name><name>Line2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>dataArea</name>.
                                                                <name>getMinX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>dataArea</name>.
                                                                <name>getMaxX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>value</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>orientation</name>
                                        ==
                                        <name><name>PlotOrientation</name>.
                                            <name>VERTICAL</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>line</name>
                                                = new
                                                <call>
                                                    <name><name>Line2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataArea</name>.
                                                                        <name>getMinY</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataArea</name>.
                                                                        <name>getMaxY</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getDomainGridlinePaint</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>paint</name>
                                        =
                                        <name><name>CategoryPlot</name>.
                                            <name>DEFAULT_GRIDLINE_PAINT</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getDomainGridlineStroke</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>stroke</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>stroke</name>
                                        =
                                        <name><name>CategoryPlot</name>.
                                            <name>DEFAULT_GRIDLINE_STROKE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>draw</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>line</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws a grid line against the range axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the value axis.
                * @param dataArea the area for plotting data (not yet adjusted for any
                * 3D effect).
                * @param value the value at which the grid line should be drawn.
                *
                * @see #drawDomainGridline(Graphics2D, CategoryPlot, Rectangle2D, double)
                *
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawRangeGridline</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>range</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>axis</name>.
                                            <name>getRange</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>range</name>.
                                        <name>contains</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>value</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getOrientation</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>v</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>axis</name>.
                                            <name>valueToJava2D</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>value</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>dataArea</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>plot</name>.
                                                            <name>getRangeAxisEdge</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Line2D</name>
                            </type>
                            <name>line</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>orientation</name>
                                ==
                                <name><name>PlotOrientation</name>.
                                    <name>HORIZONTAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>line</name>
                                        = new
                                        <call>
                                            <name><name>Line2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>v</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>dataArea</name>.
                                                                <name>getMinY</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>v</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>dataArea</name>.
                                                                <name>getMaxY</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>orientation</name>
                                        ==
                                        <name><name>PlotOrientation</name>.
                                            <name>VERTICAL</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>line</name>
                                                = new
                                                <call>
                                                    <name><name>Line2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataArea</name>.
                                                                        <name>getMinX</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>v</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataArea</name>.
                                                                        <name>getMaxX</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>v</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getRangeGridlinePaint</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>paint</name>
                                        =
                                        <name><name>CategoryPlot</name>.
                                            <name>DEFAULT_GRIDLINE_PAINT</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getRangeGridlineStroke</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>stroke</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>stroke</name>
                                        =
                                        <name><name>CategoryPlot</name>.
                                            <name>DEFAULT_GRIDLINE_STROKE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>draw</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>line</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws a marker for the domain axis.
                *
                * @param g2 the graphics device (not &lt;code&gt;null&lt;/code&gt;).
                * @param plot the plot (not &lt;code&gt;null&lt;/code&gt;).
                * @param axis the range axis (not &lt;code&gt;null&lt;/code&gt;).
                * @param marker the marker to be drawn (not &lt;code&gt;null&lt;/code&gt;).
                * @param dataArea the area inside the axes (not &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #drawRangeMarker(Graphics2D, CategoryPlot, ValueAxis, Marker,
                * Rectangle2D)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawDomainMarker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryMarker</name>
                            </type>
                            <name>marker</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Comparable</name>
                            </type>
                            <name>category</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>marker</name>.
                                            <name>getKey</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getDataset</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>plot</name>.
                                                            <name>getIndexOf</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>this</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>columnIndex</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>dataset</name>.
                                            <name>getColumnIndex</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>category</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>columnIndex</name>
                                &lt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return;</return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>Composite</name>
                            </type>
                            <name>savedComposite</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>getComposite</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setComposite</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>AlphaComposite</name>.
                                                    <name>getInstance</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>AlphaComposite</name>.
                                                                <name>SRC_OVER</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>marker</name>.
                                                                    <name>getAlpha</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getOrientation</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>bounds</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>marker</name>.
                                        <name>getDrawAsLine</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>v</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>axis</name>.
                                                        <name>getCategoryMiddle</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>columnIndex</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataset</name>.
                                                                        <name>getColumnCount</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>dataArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>plot</name>.
                                                                        <name>getDomainAxisEdge</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Line2D</name>
                                        </type>
                                        <name>line</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>orientation</name>
                                            ==
                                            <name><name>PlotOrientation</name>.
                                                <name>HORIZONTAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>line</name>
                                                    = new
                                                    <call>
                                                        <name><name>Line2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>dataArea</name>.
                                                                            <name>getMinX</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>v</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>dataArea</name>.
                                                                            <name>getMaxX</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>v</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>VERTICAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>line</name>
                                                            = new
                                                            <call>
                                                                <name><name>Line2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>v</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMinY</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>v</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMaxY</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setPaint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getPaint</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setStroke</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getStroke</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>draw</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>line</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>bounds</name>
                                        =
                                        <call>
                                            <name><name>line</name>.
                                                <name>getBounds2D</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>v0</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>axis</name>.
                                                        <name>getCategoryStart</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>columnIndex</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataset</name>.
                                                                        <name>getColumnCount</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>dataArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>plot</name>.
                                                                        <name>getDomainAxisEdge</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>v1</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>axis</name>.
                                                        <name>getCategoryEnd</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>columnIndex</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>dataset</name>.
                                                                        <name>getColumnCount</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>dataArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>plot</name>.
                                                                        <name>getDomainAxisEdge</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Rectangle2D</name>
                                        </type>
                                        <name>area</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>orientation</name>
                                            ==
                                            <name><name>PlotOrientation</name>.
                                                <name>HORIZONTAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>area</name>
                                                    = new
                                                    <call>
                                                        <name><name>Rectangle2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>dataArea</name>.
                                                                            <name>getMinX</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>v0</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>dataArea</name>.
                                                                            <name>getWidth</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>v1</name> - <name>v0</name>)
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>VERTICAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>area</name>
                                                            = new
                                                            <call>
                                                                <name><name>Rectangle2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>v0</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMinY</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>v1</name> - <name>v0</name>)
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getHeight</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setPaint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getPaint</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>fill</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>area</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>bounds</name>
                                        =
                                        <name>area</name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>label</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>marker</name>.
                                            <name>getLabel</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RectangleAnchor</name>
                            </type>
                            <name>anchor</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>marker</name>.
                                            <name>getLabelAnchor</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>label</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Font</name>
                                        </type>
                                        <name>labelFont</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>marker</name>.
                                                        <name>getLabelFont</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setFont</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>labelFont</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setPaint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getLabelPaint</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Point2D</name>
                                        </type>
                                        <name>coordinates</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>calculateDomainMarkerTextAnchorPoint</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>g2</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>orientation</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>dataArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>bounds</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>marker</name>.
                                                                        <name>getLabelOffset</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>marker</name>.
                                                                        <name>getLabelOffsetType</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>anchor</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>TextUtilities</name>.
                                                <name>drawAlignedString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>label</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>g2</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <call>
                                                            <name><name>coordinates</name>.
                                                                <name>getX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <call>
                                                            <name><name>coordinates</name>.
                                                                <name>getY</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getLabelTextAnchor</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setComposite</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>savedComposite</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws a marker for the range axis.
                *
                * @param g2 the graphics device (not &lt;code&gt;null&lt;/code&gt;).
                * @param plot the plot (not &lt;code&gt;null&lt;/code&gt;).
                * @param axis the range axis (not &lt;code&gt;null&lt;/code&gt;).
                * @param marker the marker to be drawn (not &lt;code&gt;null&lt;/code&gt;).
                * @param dataArea the area inside the axes (not &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #drawDomainMarker(Graphics2D, CategoryPlot, CategoryAxis,
                * CategoryMarker, Rectangle2D)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawRangeMarker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Marker</name>
                            </type>
                            <name>marker</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>marker</name>
                                <name>instanceof</name>
                                <name>ValueMarker</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>ValueMarker</name>
                                        </type>
                                        <name>vm</name> =
                                        <init>
                                            <expr>(<name>ValueMarker</name>)
                                                <name>marker</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>value</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>vm</name>.
                                                        <name>getValue</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Range</name>
                                        </type>
                                        <name>range</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>axis</name>.
                                                        <name>getRange</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>

                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>range</name>.
                                                    <name>contains</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return;</return>
                                            }
                                        </block>
                                    </then>
                                </if>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <specifier>final</specifier>
                                            <name>Composite</name>
                                        </type>
                                        <name>savedComposite</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>getComposite</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setComposite</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>AlphaComposite</name>.
                                                                <name>getInstance</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>AlphaComposite</name>.
                                                                            <name>SRC_OVER</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>marker</name>.
                                                                                <name>getAlpha</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>PlotOrientation</name>
                                        </type>
                                        <name>orientation</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>plot</name>.
                                                        <name>getOrientation</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>double</name>
                                        </type>
                                        <name>v</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>axis</name>.
                                                        <name>valueToJava2D</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>value</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>dataArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>plot</name>.
                                                                        <name>getRangeAxisEdge</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Line2D</name>
                                        </type>
                                        <name>line</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>orientation</name>
                                            ==
                                            <name><name>PlotOrientation</name>.
                                                <name>HORIZONTAL</name>
                                            </name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>line</name>
                                                    = new
                                                    <call>
                                                        <name><name>Line2D</name>.
                                                            <name>Double</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>v</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>dataArea</name>.
                                                                            <name>getMinY</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>v</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>dataArea</name>.
                                                                            <name>getMaxY</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>VERTICAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>line</name>
                                                            = new
                                                            <call>
                                                                <name><name>Line2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMinX</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>v</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMaxX</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>v</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                    </else>
                                </if>

                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setPaint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getPaint</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setStroke</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getStroke</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>draw</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>line</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>

                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>label</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>marker</name>.
                                                        <name>getLabel</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>RectangleAnchor</name>
                                        </type>
                                        <name>anchor</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>marker</name>.
                                                        <name>getLabelAnchor</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>label</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Font</name>
                                                    </type>
                                                    <name>labelFont</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>marker</name>.
                                                                    <name>getLabelFont</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>g2</name>.
                                                            <name>setFont</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>labelFont</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>g2</name>.
                                                            <name>setPaint</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>marker</name>.
                                                                            <name>getLabelPaint</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Point2D</name>
                                                    </type>
                                                    <name>coordinates</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name>calculateRangeMarkerTextAnchorPoint</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>g2</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>orientation</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>dataArea</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>line</name>.
                                                                                    <name>getBounds2D</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>marker</name>.
                                                                                    <name>getLabelOffset</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>LengthAdjustmentType</name>.
                                                                                <name>EXPAND</name>
                                                                            </name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>anchor</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name><name>TextUtilities</name>.
                                                            <name>drawAlignedString</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>label</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>g2</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>float</name>)
                                                                    <call>
                                                                        <name><name>coordinates</name>.
                                                                            <name>getX</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>(<name>float</name>)
                                                                    <call>
                                                                        <name><name>coordinates</name>.
                                                                            <name>getY</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>marker</name>.
                                                                            <name>getLabelTextAnchor</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setComposite</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>savedComposite</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>marker</name>
                                        <name>instanceof</name>
                                        <name>IntervalMarker</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>IntervalMarker</name>
                                                </type>
                                                <name>im</name> =
                                                <init>
                                                    <expr>(<name>IntervalMarker</name>)
                                                        <name>marker</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>double</name>
                                                </type>
                                                <name>start</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>im</name>.
                                                                <name>getStartValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>double</name>
                                                </type>
                                                <name>end</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>im</name>.
                                                                <name>getEndValue</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Range</name>
                                                </type>
                                                <name>range</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>axis</name>.
                                                                <name>getRange</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>!(
                                                    <call>
                                                        <name><name>range</name>.
                                                            <name>intersects</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>start</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>end</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                    )
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <return>return;</return>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <specifier>final</specifier>
                                                    <name>Composite</name>
                                                </type>
                                                <name>savedComposite</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>g2</name>.
                                                                <name>getComposite</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>setComposite</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>AlphaComposite</name>.
                                                                        <name>getInstance</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>AlphaComposite</name>.
                                                                                    <name>SRC_OVER</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>marker</name>.
                                                                                        <name>getAlpha</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>double</name>
                                                </type>
                                                <name>start2d</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>axis</name>.
                                                                <name>valueToJava2D</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>start</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dataArea</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>plot</name>.
                                                                                <name>getRangeAxisEdge</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>double</name>
                                                </type>
                                                <name>end2d</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>axis</name>.
                                                                <name>valueToJava2D</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>end</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>dataArea</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>plot</name>.
                                                                                <name>getRangeAxisEdge</name>
                                                                            </name>
                                                                            <argument_list>()</argument_list>
                                                                        </call>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>double</name>
                                                </type>
                                                <name>low</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>Math</name>.
                                                                <name>min</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>start2d</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>end2d</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>double</name>
                                                </type>
                                                <name>high</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>Math</name>.
                                                                <name>max</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>start2d</name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>end2d</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>PlotOrientation</name>
                                                </type>
                                                <name>orientation</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>plot</name>.
                                                                <name>getOrientation</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Rectangle2D</name>
                                                </type>
                                                <name>rect</name> =
                                                <init>
                                                    <expr>
                                                        <name>null</name>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>orientation</name>
                                                    ==
                                                    <name><name>PlotOrientation</name>.
                                                        <name>HORIZONTAL</name>
                                                    </name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// clip left and right bounds to data area
                                                    </comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>low</name>
                                                            =
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>max</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>low</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMinX</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>high</name>
                                                            =
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>min</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>high</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMaxX</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>rect</name>
                                                            = new
                                                            <call>
                                                                <name><name>Rectangle2D</name>.
                                                                    <name>Double</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>low</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getMinY</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>high</name>
                                                                            -
                                                                            <name>low</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>dataArea</name>.
                                                                                    <name>getHeight</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>orientation</name>
                                                            ==
                                                            <name><name>PlotOrientation</name>.
                                                                <name>VERTICAL</name>
                                                            </name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <comment type="line">// clip top and bottom bounds to data
                                                                area
                                                            </comment>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>low</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>Math</name>.
                                                                            <name>max</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>low</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>dataArea</name>.
                                                                                            <name>getMinY</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>high</name>
                                                                    =
                                                                    <call>
                                                                        <name><name>Math</name>.
                                                                            <name>min</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>high</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>dataArea</name>.
                                                                                            <name>getMaxY</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>rect</name>
                                                                    = new
                                                                    <call>
                                                                        <name><name>Rectangle2D</name>.
                                                                            <name>Double</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>dataArea</name>.
                                                                                            <name>getMinX</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>low</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>dataArea</name>.
                                                                                            <name>getWidth</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>high</name>
                                                                                    -
                                                                                    <name>low</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </then>
                                                </if>
                                            </else>
                                        </if>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Paint</name>
                                                </type>
                                                <name>p</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getPaint</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>p</name>
                                                    <name>instanceof</name>
                                                    <name>GradientPaint</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>GradientPaint</name>
                                                            </type>
                                                            <name>gp</name> =
                                                            <init>
                                                                <expr>(<name>GradientPaint</name>)
                                                                    <name>p</name>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>GradientPaintTransformer</name>
                                                            </type>
                                                            <name>t</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>im</name>.
                                                                            <name>getGradientPaintTransformer</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>t</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>gp</name>
                                                                        =
                                                                        <call>
                                                                            <name><name>t</name>.
                                                                                <name>transform</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>gp</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>rect</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g2</name>.
                                                                    <name>setPaint</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>gp</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g2</name>.
                                                                    <name>setPaint</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>p</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>fill</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>rect</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>

                                        <comment type="line">// now draw the outlines, if visible...</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name><name>im</name>.
                                                            <name>getOutlinePaint</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    != <name>null</name> &amp;&amp;
                                                    <call>
                                                        <name><name>im</name>.
                                                            <name>getOutlineStroke</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>orientation</name>
                                                                ==
                                                                <name><name>PlotOrientation</name>.
                                                                    <name>VERTICAL</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>Line2D</name>
                                                                        </type>
                                                                        <name>line</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name><name>Line2D</name>.
                                                                                        <name>Double</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>double</name>
                                                                        </type>
                                                                        <name>x0</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>dataArea</name>.
                                                                                        <name>getMinX</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>double</name>
                                                                        </type>
                                                                        <name>x1</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>dataArea</name>.
                                                                                        <name>getMaxX</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>g2</name>.
                                                                                <name>setPaint</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>im</name>.
                                                                                                <name>getOutlinePaint
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>g2</name>.
                                                                                <name>setStroke</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>im</name>.
                                                                                                <name>getOutlineStroke
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>range</name>.
                                                                                    <name>contains</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>start</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>line</name>.
                                                                                            <name>setLine</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>x0</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>start2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>x1</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>start2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>g2</name>.
                                                                                            <name>draw</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>line</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>range</name>.
                                                                                    <name>contains</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>end</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>line</name>.
                                                                                            <name>setLine</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>x0</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>end2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>x1</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>end2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>g2</name>.
                                                                                            <name>draw</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>line</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <block>{
                                                                <comment type="line">// PlotOrientation.HORIZONTAL
                                                                </comment>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>Line2D</name>
                                                                        </type>
                                                                        <name>line</name> =
                                                                        <init>
                                                                            <expr>new
                                                                                <call>
                                                                                    <name><name>Line2D</name>.
                                                                                        <name>Double</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>double</name>
                                                                        </type>
                                                                        <name>y0</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>dataArea</name>.
                                                                                        <name>getMinY</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <decl_stmt>
                                                                    <decl>
                                                                        <type>
                                                                            <name>double</name>
                                                                        </type>
                                                                        <name>y1</name> =
                                                                        <init>
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>dataArea</name>.
                                                                                        <name>getMaxY</name>
                                                                                    </name>
                                                                                    <argument_list>()</argument_list>
                                                                                </call>
                                                                            </expr>
                                                                        </init>
                                                                    </decl>
                                                                    ;
                                                                </decl_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>g2</name>.
                                                                                <name>setPaint</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>im</name>.
                                                                                                <name>getOutlinePaint
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>g2</name>.
                                                                                <name>setStroke</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <call>
                                                                                            <name><name>im</name>.
                                                                                                <name>getOutlineStroke
                                                                                                </name>
                                                                                            </name>
                                                                                            <argument_list>()
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>range</name>.
                                                                                    <name>contains</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>start</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>line</name>.
                                                                                            <name>setLine</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>start2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>y0</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>start2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>y1</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>g2</name>.
                                                                                            <name>draw</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>line</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                <if>if
                                                                    <condition>(
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>range</name>.
                                                                                    <name>contains</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>end</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                        )
                                                                    </condition>
                                                                    <then>
                                                                        <block>{
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>line</name>.
                                                                                            <name>setLine</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>end2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>y0</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>end2d</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            ,
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>y1</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            <expr_stmt>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>g2</name>.
                                                                                            <name>draw</name>
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <name>line</name>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                                ;
                                                                            </expr_stmt>
                                                                            }
                                                                        </block>
                                                                    </then>
                                                                </if>
                                                                }
                                                            </block>
                                                        </else>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>

                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>String</name>
                                                </type>
                                                <name>label</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getLabel</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>RectangleAnchor</name>
                                                </type>
                                                <name>anchor</name> =
                                                <init>
                                                    <expr>
                                                        <call>
                                                            <name><name>marker</name>.
                                                                <name>getLabelAnchor</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </init>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>label</name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Font</name>
                                                            </type>
                                                            <name>labelFont</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>marker</name>.
                                                                            <name>getLabelFont</name>
                                                                        </name>
                                                                        <argument_list>()</argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g2</name>.
                                                                    <name>setFont</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>labelFont</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>g2</name>.
                                                                    <name>setPaint</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>marker</name>.
                                                                                    <name>getLabelPaint</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Point2D</name>
                                                            </type>
                                                            <name>coordinates</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name>calculateRangeMarkerTextAnchorPoint</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>g2</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>orientation</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>dataArea</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>rect</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>marker</name>.
                                                                                            <name>getLabelOffset</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>marker</name>.
                                                                                            <name>getLabelOffsetType
                                                                                            </name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>anchor</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>TextUtilities</name>.
                                                                    <name>drawAlignedString</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>label</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>g2</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <call>
                                                                                <name><name>coordinates</name>.
                                                                                    <name>getX</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>float</name>)
                                                                            <call>
                                                                                <name><name>coordinates</name>.
                                                                                    <name>getY</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name><name>marker</name>.
                                                                                    <name>getLabelTextAnchor</name>
                                                                                </name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>g2</name>.
                                                        <name>setComposite</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>savedComposite</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Calculates the (x, y) coordinates for drawing the label for a marker on
                * the range axis.
                *
                * @param g2 the graphics device.
                * @param orientation the plot orientation.
                * @param dataArea the data area.
                * @param markerArea the rectangle surrounding the marker.
                * @param markerOffset the marker offset.
                * @param labelOffsetType the label offset type.
                * @param anchor the label anchor.
                *
                * @return The coordinates for drawing the marker label.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Point2D</name>
                </type>
                <name>calculateDomainMarkerTextAnchorPoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>markerArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleInsets</name>
                            </type>
                            <name>markerOffset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>LengthAdjustmentType</name>
                            </type>
                            <name>labelOffsetType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleAnchor</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>anchorRect</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>orientation</name>
                                ==
                                <name><name>PlotOrientation</name>.
                                    <name>HORIZONTAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>anchorRect</name>
                                        =
                                        <call>
                                            <name><name>markerOffset</name>.
                                                <name>createAdjustedRectangle</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>markerArea</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>LengthAdjustmentType</name>.
                                                            <name>CONTRACT</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>labelOffsetType</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>orientation</name>
                                        ==
                                        <name><name>PlotOrientation</name>.
                                            <name>VERTICAL</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>anchorRect</name>
                                                =
                                                <call>
                                                    <name><name>markerOffset</name>.
                                                        <name>createAdjustedRectangle</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>markerArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>labelOffsetType</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>LengthAdjustmentType</name>.
                                                                    <name>CONTRACT</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>RectangleAnchor</name>.
                                    <name>coordinates</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>anchorRect</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>anchor</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Calculates the (x, y) coordinates for drawing a marker label.
                *
                * @param g2 the graphics device.
                * @param orientation the plot orientation.
                * @param dataArea the data area.
                * @param markerArea the rectangle surrounding the marker.
                * @param markerOffset the marker offset.
                * @param labelOffsetType the label offset type.
                * @param anchor the label anchor.
                *
                * @return The coordinates for drawing the marker label.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Point2D</name>
                </type>
                <name>calculateRangeMarkerTextAnchorPoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>markerArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleInsets</name>
                            </type>
                            <name>markerOffset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>LengthAdjustmentType</name>
                            </type>
                            <name>labelOffsetType</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>RectangleAnchor</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>anchorRect</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>orientation</name>
                                ==
                                <name><name>PlotOrientation</name>.
                                    <name>HORIZONTAL</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>anchorRect</name>
                                        =
                                        <call>
                                            <name><name>markerOffset</name>.
                                                <name>createAdjustedRectangle</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>markerArea</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>labelOffsetType</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>LengthAdjustmentType</name>.
                                                            <name>CONTRACT</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>orientation</name>
                                        ==
                                        <name><name>PlotOrientation</name>.
                                            <name>VERTICAL</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>anchorRect</name>
                                                =
                                                <call>
                                                    <name><name>markerOffset</name>.
                                                        <name>createAdjustedRectangle</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>markerArea</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>LengthAdjustmentType</name>.
                                                                    <name>CONTRACT</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>labelOffsetType</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>RectangleAnchor</name>.
                                    <name>coordinates</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>anchorRect</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>anchor</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a legend item for a series. This default implementation will
                * return &lt;code&gt;null&lt;/code&gt; if {@link #isSeriesVisible(int)} or
                * {@link #isSeriesVisibleInLegend(int)} returns &lt;code&gt;false&lt;/code&gt;.
                *
                * @param datasetIndex the dataset index (zero-based).
                * @param series the series index (zero-based).
                *
                * @return The legend item (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #getLegendItems()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>LegendItem</name>
                </type>
                <name>getLegendItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>datasetIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>p</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getPlot</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>p</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// check that a legend item needs to be displayed...</comment>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name>isSeriesVisible</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>series</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                || !
                                <call>
                                    <name>isSeriesVisibleInLegend</name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>series</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>null</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>p</name>.
                                            <name>getDataset</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>datasetIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>label</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>legendItemLabelGenerator</name>.
                                            <name>generateLabel</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>dataset</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>description</name> =
                            <init>
                                <expr>
                                    <name>label</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>toolTipText</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>legendItemToolTipGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>toolTipText</name>
                                        =
                                        <call>
                                            <name><name>this</name>.<name>legendItemToolTipGenerator</name>.
                                                <name>generateLabel</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>dataset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>series</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>urlText</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>legendItemURLGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>urlText</name>
                                        =
                                        <call>
                                            <name><name>this</name>.<name>legendItemURLGenerator</name>.
                                                <name>generateLabel</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>dataset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>series</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>lookupSeriesShape</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>lookupSeriesPaint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>outlinePaint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>lookupSeriesOutlinePaint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>outlineStroke</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>lookupSeriesOutlineStroke</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LegendItem</name>
                            </type>
                            <name>item</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>LegendItem</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>label</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>description</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>toolTipText</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>urlText</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>shape</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>paint</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>outlineStroke</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>outlinePaint</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>item</name>.
                                    <name>setSeriesKey</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>dataset</name>.
                                                    <name>getRowKey</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>series</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>item</name>.
                                    <name>setSeriesIndex</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>item</name>.
                                    <name>setDataset</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>dataset</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>item</name>.
                                    <name>setDatasetIndex</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>datasetIndex</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>item</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests this renderer for equality with another object.
                *
                * @param obj the object.
                *
                * @return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                ==
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!(<name>obj</name>
                                <name>instanceof</name>
                                <name>AbstractCategoryItemRenderer</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AbstractCategoryItemRenderer</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>AbstractCategoryItemRenderer</name>)
                                    <name>obj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelGeneratorList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelGeneratorList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseItemLabelGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseItemLabelGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>toolTipGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>toolTipGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>toolTipGeneratorList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>toolTipGeneratorList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseToolTipGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseToolTipGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemURLGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemURLGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemURLGeneratorList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemURLGeneratorList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseItemURLGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseItemURLGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>legendItemLabelGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>legendItemLabelGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>legendItemToolTipGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>legendItemToolTipGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>legendItemURLGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>legendItemURLGenerator</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>obj</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a hash code for the renderer.
                *
                * @return The hash code.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>hashCode</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the drawing supplier from the plot.
                *
                * @return The drawing supplier (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DrawingSupplier</name>
                </type>
                <name>getDrawingSupplier</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DrawingSupplier</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>cp</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getPlot</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>cp</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>cp</name>.
                                                <name>getDrawingSupplier</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws an item label.
                *
                * @param g2 the graphics device.
                * @param orientation the orientation.
                * @param dataset the dataset.
                * @param row the row.
                * @param column the column.
                * @param x the x coordinate (in Java2D space).
                * @param y the y coordinate (in Java2D space).
                * @param negative indicates a negative value (which affects the item
                * label position).
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>drawItemLabel</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>negative</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                            =
                            <init>
                                <expr>
                                    <call>
                                        <name>getItemLabelGenerator</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>row</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>column</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>generator</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Font</name>
                                        </type>
                                        <name>labelFont</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getItemLabelFont</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>row</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>column</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Paint</name>
                                        </type>
                                        <name>paint</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getItemLabelPaint</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>row</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>column</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setFont</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>labelFont</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>g2</name>.
                                                <name>setPaint</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>paint</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>String</name>
                                        </type>
                                        <name>label</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>generator</name>.
                                                        <name>generateLabel</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>dataset</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>row</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>column</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>ItemLabelPosition</name>
                                        </type>
                                        <name>position</name> =
                                        <init>
                                            <expr>
                                                <name>null</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <name>negative</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>position</name>
                                                    =
                                                    <call>
                                                        <name>getPositiveItemLabelPosition</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>row</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>column</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>position</name>
                                                    =
                                                    <call>
                                                        <name>getNegativeItemLabelPosition</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>row</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>column</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </else>
                                </if>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Point2D</name>
                                        </type>
                                        <name>anchorPoint</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>calculateLabelAnchorPoint</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>position</name>.
                                                                        <name>getItemLabelAnchor</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>orientation</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>TextUtilities</name>.
                                                <name>drawRotatedString</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>label</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>g2</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <call>
                                                            <name><name>anchorPoint</name>.
                                                                <name>getX</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>(<name>float</name>)
                                                        <call>
                                                            <name><name>anchorPoint</name>.
                                                                <name>getY</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>position</name>.
                                                                <name>getTextAnchor</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>position</name>.
                                                                <name>getAngle</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>position</name>.
                                                                <name>getRotationAnchor</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns an independent copy of the renderer. The &lt;code&gt;plot&lt;/code&gt;
                * reference is shallow copied.
                *
                * @return A clone.
                *
                * @throws CloneNotSupportedException can be thrown if one of the objects
                * belonging to the renderer does not support cloning (for example,
                * an item label generator).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>CloneNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AbstractCategoryItemRenderer</name>
                            </type>
                            <name>clone</name>
                            =
                            <init>
                                <expr>(<name>AbstractCategoryItemRenderer</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>itemLabelGenerator</name>
                                            </name>
                                            <name>instanceof</name>
                                            <name>PublicCloneable</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>PublicCloneable</name>
                                                    </type>
                                                    <name>pc</name> =
                                                    <init>
                                                        <expr>(<name>PublicCloneable</name>)
                                                            <name><name>this</name>.
                                                                <name>itemLabelGenerator</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>clone</name>.
                                                        <name>itemLabelGenerator</name>
                                                    </name>
                                                    = (<name>CategoryItemLabelGenerator</name>)
                                                    <call>
                                                        <name><name>pc</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>CloneNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"ItemLabelGenerator not cloneable."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelGeneratorList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>itemLabelGeneratorList</name>
                                        </name>
                                        = (<name>ObjectList</name>)
                                        <call>
                                            <name><name>this</name>.<name>itemLabelGeneratorList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>baseItemLabelGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseItemLabelGenerator</name>
                                            </name>
                                            <name>instanceof</name>
                                            <name>PublicCloneable</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>PublicCloneable</name>
                                                    </type>
                                                    <name>pc</name>
                                                    =
                                                    <init>
                                                        <expr>(<name>PublicCloneable</name>)
                                                            <name><name>this</name>.
                                                                <name>baseItemLabelGenerator</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>clone</name>.
                                                        <name>baseItemLabelGenerator</name>
                                                    </name>
                                                    = (<name>CategoryItemLabelGenerator</name>)
                                                    <call>
                                                        <name><name>pc</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>CloneNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"ItemLabelGenerator not cloneable."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>toolTipGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>toolTipGenerator</name>
                                            </name>
                                            <name>instanceof</name>
                                            <name>PublicCloneable</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>PublicCloneable</name>
                                                    </type>
                                                    <name>pc</name> =
                                                    <init>
                                                        <expr>(<name>PublicCloneable</name>)
                                                            <name><name>this</name>.
                                                                <name>toolTipGenerator</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>clone</name>.
                                                        <name>toolTipGenerator</name>
                                                    </name>
                                                    = (<name>CategoryToolTipGenerator</name>)
                                                    <call>
                                                        <name><name>pc</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>CloneNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Tool tip generator not cloneable."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>toolTipGeneratorList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>toolTipGeneratorList</name>
                                        </name>
                                        = (<name>ObjectList</name>)
                                        <call>
                                            <name><name>this</name>.<name>toolTipGeneratorList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>baseToolTipGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseToolTipGenerator</name>
                                            </name>
                                            <name>instanceof</name>
                                            <name>PublicCloneable</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>PublicCloneable</name>
                                                    </type>
                                                    <name>pc</name>
                                                    =
                                                    <init>
                                                        <expr>(<name>PublicCloneable</name>)
                                                            <name><name>this</name>.
                                                                <name>baseToolTipGenerator</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>clone</name>.
                                                        <name>baseToolTipGenerator</name>
                                                    </name>
                                                    = (<name>CategoryToolTipGenerator</name>)
                                                    <call>
                                                        <name><name>pc</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>CloneNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Base tool tip generator not cloneable."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemURLGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>itemURLGenerator</name>
                                            </name>
                                            <name>instanceof</name>
                                            <name>PublicCloneable</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>PublicCloneable</name>
                                                    </type>
                                                    <name>pc</name> =
                                                    <init>
                                                        <expr>(<name>PublicCloneable</name>)
                                                            <name><name>this</name>.
                                                                <name>itemURLGenerator</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>clone</name>.
                                                        <name>itemURLGenerator</name>
                                                    </name>
                                                    = (<name>CategoryURLGenerator</name>)
                                                    <call>
                                                        <name><name>pc</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>CloneNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Item URL generator not cloneable."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemURLGeneratorList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>itemURLGeneratorList</name>
                                        </name>
                                        = (<name>ObjectList</name>)
                                        <call>
                                            <name><name>this</name>.<name>itemURLGeneratorList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>baseItemURLGenerator</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseItemURLGenerator</name>
                                            </name>
                                            <name>instanceof</name>
                                            <name>PublicCloneable</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>PublicCloneable</name>
                                                    </type>
                                                    <name>pc</name>
                                                    =
                                                    <init>
                                                        <expr>(<name>PublicCloneable</name>)
                                                            <name><name>this</name>.
                                                                <name>baseItemURLGenerator</name>
                                                            </name>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <name><name>clone</name>.
                                                        <name>baseItemURLGenerator</name>
                                                    </name>
                                                    = (<name>CategoryURLGenerator</name>)
                                                    <call>
                                                        <name><name>pc</name>.
                                                            <name>clone</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>CloneNotSupportedException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Base item URL generator not cloneable."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>legendItemLabelGenerator</name>
                                </name>
                                <name>instanceof</name>
                                <name>PublicCloneable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>legendItemLabelGenerator</name>
                                        </name>
                                        = (<name>CategorySeriesLabelGenerator</name>)
                                        <call>
                                            <name><name>ObjectUtilities</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>legendItemLabelGenerator</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>legendItemToolTipGenerator</name>
                                </name>
                                <name>instanceof</name>
                                <name>PublicCloneable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>legendItemToolTipGenerator</name>
                                        </name>
                                        = (<name>CategorySeriesLabelGenerator</name>)
                                        <call>
                                            <name><name>ObjectUtilities</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>legendItemToolTipGenerator</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>legendItemURLGenerator</name>
                                </name>
                                <name>instanceof</name>
                                <name>PublicCloneable</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>legendItemURLGenerator</name>
                                        </name>
                                        = (<name>CategorySeriesLabelGenerator</name>)
                                        <call>
                                            <name><name>ObjectUtilities</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>legendItemURLGenerator</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>clone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a domain axis for a plot.
                *
                * @param plot the plot.
                * @param index the axis index.
                *
                * @return A domain axis.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>CategoryAxis</name>
                </type>
                <name>getDomainAxis</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryAxis</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getDomainAxis</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>plot</name>.
                                                <name>getDomainAxis</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a range axis for a plot.
                *
                * @param plot the plot.
                * @param index the axis index.
                *
                * @return A range axis.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>ValueAxis</name>
                </type>
                <name>getRangeAxis</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>plot</name>.
                                            <name>getRangeAxis</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>plot</name>.
                                                <name>getRangeAxis</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a (possibly empty) collection of legend items for the series
                * that this renderer is responsible for drawing.
                *
                * @return The legend item collection (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #getLegendItem(int, int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>LegendItemCollection</name>
                </type>
                <name>getLegendItems</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>plot</name>
                                </name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>new
                                        <call>
                                            <name>LegendItemCollection</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>LegendItemCollection</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>LegendItemCollection</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>plot</name>.
                                            <name>getIndexOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>this</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>plot</name>.
                                            <name>getDataset</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>dataset</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>seriesCount</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>dataset</name>.
                                                        <name>getRowCount</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <for>for (
                                    <init>
                                        <decl>
                                            <type>
                                                <name>int</name>
                                            </type>
                                            <name>i</name> =
                                            <init>
                                                <expr>0</expr>
                                            </init>
                                        </decl>
                                        ;
                                    </init>
                                    <condition>
                                        <expr>
                                            <name>i</name>
                                            &lt;
                                            <name>seriesCount</name>
                                        </expr>
                                        ;
                                    </condition>
                                    <incr>
                                        <expr><name>i</name>++
                                        </expr>
                                    </incr>
                                    )
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <call>
                                                        <name>isSeriesVisibleInLegend</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>i</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>LegendItem</name>
                                                            </type>
                                                            <name>item</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name>getLegendItem</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>index</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>item</name>
                                                                !=
                                                                <name>null</name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>result</name>.
                                                                                <name>add</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>item</name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                    </if>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </for>

                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the legend item label generator.
                *
                * @return The label generator (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setLegendItemLabelGenerator(CategorySeriesLabelGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategorySeriesLabelGenerator</name>
                </type>
                <name>getLegendItemLabelGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>legendItemLabelGenerator</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the legend item label generator and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getLegendItemLabelGenerator()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLegendItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategorySeriesLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>generator</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'generator' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>legendItemLabelGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the legend item tool tip generator.
                *
                * @return The tool tip generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setLegendItemToolTipGenerator(CategorySeriesLabelGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategorySeriesLabelGenerator</name>
                </type>
                <name>getLegendItemToolTipGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>legendItemToolTipGenerator</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the legend item tool tip generator and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #setLegendItemToolTipGenerator(CategorySeriesLabelGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLegendItemToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategorySeriesLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>legendItemToolTipGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the legend item URL generator.
                *
                * @return The URL generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setLegendItemURLGenerator(CategorySeriesLabelGenerator)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategorySeriesLabelGenerator</name>
                </type>
                <name>getLegendItemURLGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>legendItemURLGenerator</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the legend item URL generator and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getLegendItemURLGenerator()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLegendItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategorySeriesLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>legendItemURLGenerator</name>
                            </name>
                            =
                            <name>generator</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds an entity with the specified hotspot.
                *
                * @param entities the entity collection.
                * @param dataset the dataset.
                * @param row the row index.
                * @param column the column index.
                * @param hotspot the hotspot.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>addItemEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>EntityCollection</name>
                            </type>
                            <name>entities</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>hotspot</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>tip</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>tipster</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getToolTipGenerator</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>row</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>column</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>tipster</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>tip</name>
                                        =
                                        <call>
                                            <name><name>tipster</name>.
                                                <name>generateToolTip</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>dataset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>row</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>column</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>url</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>urlster</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getItemURLGenerator</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>row</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>column</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>urlster</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>url</name>
                                        =
                                        <call>
                                            <name><name>urlster</name>.
                                                <name>generateURL</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>dataset</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>row</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>column</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>CategoryItemEntity</name>
                            </type>
                            <name>entity</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>CategoryItemEntity</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>hotspot</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>tip</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>url</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>dataset</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>dataset</name>.
                                                            <name>getRowKey</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>row</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>dataset</name>.
                                                            <name>getColumnKey</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>column</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>entities</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>entity</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>


            }
        </block>
    </class>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\renderer\category\CategoryItemRenderer.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * -------------------------
        * CategoryItemRenderer.java
        * -------------------------
        *
        * (C) Copyright 2001-2007, by Object Refinery Limited and Contributors.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): Mark Watson (www.markwatson.com);
        *
        * Changes
        * -------
        * 23-Oct-2001 : Version 1 (DG);
        * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java
        * --&gt; CategoryItemRenderer.java (DG);
        * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void
        * to Shape, as part of the tooltips implementation (DG)
        *
        * NOTE (30-May-2002) : this has subsequently been changed back
        * to void, tooltips are now collected along with entities in
        * ChartRenderingInfo (DG);
        *
        * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use
        * this renderer (DG);
        * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG);
        * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG);
        * 06-Jun-2002 : Updated Javadoc comments (DG);
        * 26-Jun-2002 : Added range axis to the initialise method (DG);
        * 24-Sep-2002 : Added getLegendItem() method (DG);
        * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG);
        * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG);
        * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method. Renamed
        * drawCategoryItem() --&gt; drawItem() (DG);
        * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of
        * TableDataset (DG);
        * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType()
        * method (DG);
        * 08-Jan-2003 : Changed getSeriesCount() --&gt; getRowCount() and
        * getCategoryCount() --&gt; getColumnCount() (DG);
        * 09-Jan-2003 : Changed name of grid-line methods (DG);
        * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG);
        * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in
        * drawItem() method (DG);
        * 29-Apr-2003 : Eliminated Renderer interface (DG);
        * 02-Sep-2003 : Fix for bug 790407 (DG);
        * 16-Sep-2003 : Changed ChartRenderingInfo --&gt; PlotRenderingInfo (DG);
        * 20-Oct-2003 : Added setOutlinePaint() method (DG);
        * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG);
        * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG);
        * 29-Apr-2004 : Changed Integer --&gt; int in initialise() method (DG);
        * 18-May-2004 : Added methods for item label paint (DG);
        * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem()
        * method (DG);
        * 07-Jan-2005 : Renamed getRangeExtent() --&gt; findRangeBounds (DG);
        * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG);
        * 23-Feb-2005 : Now extends LegendItemSource (DG);
        * 20-Apr-2005 : Renamed CategoryLabelGenerator
        * --&gt; CategoryItemLabelGenerator (DG);
        * 20-May-2005 : Added drawDomainMarker() method (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 20-Feb-2007 : Updated API docs (DG);
        * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG);
        * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke,
        * outlineStroke, shape, itemLabelsVisible, itemLabelFont,
        * itemLabelPaint, positiveItemLabelPosition,
        * negativeItemLabelPosition and createEntities override
        * fields (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.
            <name>category</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Font</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Paint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Shape</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Stroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItem</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItemSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name>.
            <name>CategoryAxis</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name>.
            <name>ValueAxis</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>RendererChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>RendererChangeListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>CategoryItemLabelGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>CategoryToolTipGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>ItemLabelPosition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>CategoryMarker</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>CategoryPlot</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>Marker</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>PlotRenderingInfo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>urls</name>.
            <name>CategoryURLGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>Range</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>category</name>.
            <name>CategoryDataset</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A plug-in object that is used by the {@link CategoryPlot} class to display
        * individual data items from a {@link CategoryDataset}.
        * &lt;p&gt;
        * This interface defines the methods that must be provided by all renderers.
        * If you are implementing a custom renderer, you should consider extending the
        * {@link AbstractCategoryItemRenderer} class.
        * &lt;p&gt;
        * Most renderer attributes are defined using a "three layer" approach. When
        * looking up an attribute (for example, the outline paint) the renderer first
        * checks to see if there is a setting (in layer 0) that applies to ALL items
        * that the renderer draws. If there is, that setting is used, but if it is
        * &lt;code&gt;null&lt;/code&gt; the renderer looks up the next layer, which contains
        * "per series" settings for the attribute (many attributes are defined on a
        * per series basis, so this is the layer that is most commonly used). If the
        * layer 1 setting is &lt;code&gt;null&lt;/code&gt;, the renderer will look up the final
        * layer, which provides a default or "base" setting. Some attributes allow
        * the base setting to be &lt;code&gt;null&lt;/code&gt;, while other attributes enforce
        * non-&lt;code&gt;null&lt;/code&gt; values.
        */
    </comment>

    <class type="interface">
        <specifier>public</specifier>
        interface <name>CategoryItemRenderer</name>
        <super>
            <extends>extends
                <name>LegendItemSource</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Returns the number of passes through the dataset required by the
                * renderer. Usually this will be one, but some renderers may use
                * a second or third pass to overlay items on top of things that were
                * drawn in an earlier pass.
                *
                * @return The pass count.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getPassCount</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the plot that the renderer has been assigned to (where
                * &lt;code&gt;null&lt;/code&gt; indicates that the renderer is not currently assigned
                * to a plot).
                *
                * @return The plot (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setPlot(CategoryPlot)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryPlot</name>
                </type>
                <name>getPlot</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the plot that the renderer has been assigned to. This method is
                * usually called by the {@link CategoryPlot}, in normal usage you
                * shouldn't need to call this method directly.
                *
                * @param plot the plot (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getPlot()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPlot</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds a change listener.
                *
                * @param listener the listener.
                *
                * @see #removeChangeListener(RendererChangeListener)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RendererChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes a change listener.
                *
                * @param listener the listener.
                *
                * @see #addChangeListener(RendererChangeListener)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RendererChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the range of values the renderer requires to display all the
                * items from the specified dataset.
                *
                * @param dataset the dataset (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return The range (or &lt;code&gt;null&lt;/code&gt; if the dataset is
                * &lt;code&gt;null&lt;/code&gt; or empty).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>findRangeBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Initialises the renderer. This method will be called before the first
                * item is rendered, giving the renderer an opportunity to initialise any
                * state information it wants to maintain. The renderer can do nothing if
                * it chooses.
                *
                * @param g2 the graphics device.
                * @param dataArea the area inside the axes.
                * @param plot the plot.
                * @param rendererIndex the renderer index.
                * @param info collects chart rendering information for return to caller.
                *
                * @return A state object (maintains state information relevant to one
                * chart drawing).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemRendererState</name>
                </type>
                <name>initialise</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>rendererIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a boolean that indicates whether or not the specified item
                * should be drawn (this is typically used to hide an entire series).
                *
                * @param series the series index.
                * @param item the item index.
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getItemVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a boolean that indicates whether or not the specified series
                * should be drawn (this is typically used to hide an entire series).
                *
                * @param series the series index.
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls the visibility of ALL series. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisible(Boolean)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesVisible(int)} and
                * {@link #getBaseSeriesVisible()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisible</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisible()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisible(int, Boolean)}
                * and {@link #setBaseSeriesVisible(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisible()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisible(int, Boolean,
                * boolean)} and {@link #setBaseSeriesVisible(boolean, boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls whether a series is visible.
                *
                * @param series the series index (zero-based).
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisible(int, Boolean)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisible(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible and, if
                * requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index.
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisible(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base visibility for all series.
                *
                * @return The base visibility.
                *
                * @see #setBaseSeriesVisible(boolean)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBaseSeriesVisible</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param visible the flag.
                *
                * @see #getBaseSeriesVisible()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility.
                * @param notify notify listeners?
                *
                * @see #getBaseSeriesVisible()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)</comment>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the series should be shown in the legend,
                * and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param series the series index.
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls the visibility of ALL series in the
                * legend. This flag overrides the per series and default settings - you
                * must set it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to
                * apply.
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisibleInLegend(Boolean)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesVisibleInLegend(int)}
                * and {@link #getBaseSeriesVisibleInLegend()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisibleInLegend</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                * This flag overrides the per series and default settings - you must set
                * it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisibleInLegend()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisibleInLegend(int,
                * Boolean)} and {@link #setBaseSeriesVisibleInLegend(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                * This flag overrides the per series and default settings - you must set
                * it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisibleInLegend()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisibleInLegend(int,
                * Boolean, boolean)} and {@link #setBaseSeriesVisibleInLegend(boolean,
                * boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls whether a series is visible in the
                * legend. This method returns only the "per series" settings - to
                * incorporate the override and base settings as well, you need to use the
                * {@link #isSeriesVisibleInLegend(int)} method.
                *
                * @param series the series index (zero-based).
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisibleInLegend(int, Boolean)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisibleInLegend(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible in the legend
                * and, if requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index.
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisibleInLegend(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base visibility in the legend for all series.
                *
                * @return The base visibility.
                *
                * @see #setBaseSeriesVisibleInLegend(boolean)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBaseSeriesVisibleInLegend</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility in the legend and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag.
                *
                * @see #getBaseSeriesVisibleInLegend()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility in the legend and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility.
                * @param notify notify listeners?
                *
                * @see #getBaseSeriesVisibleInLegend()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="line">//// PAINT /////////////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the paint used to fill data items as they are drawn.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the paint to be used for ALL series, and sends a
                * {@link RendererChangeEvent} to all registered listeners. If this is
                * &lt;code&gt;null&lt;/code&gt;, the renderer will use the paint for the series.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesPaint(int, Paint)} and
                * {@link #setBasePaint(Paint)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used to fill an item drawn by the renderer.
                *
                * @param series the series index (zero-based).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesPaint(int, Paint)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the paint used for a series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesPaint(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesPaint(int, Paint, boolean)?</comment>

            <comment type="javadoc">/**
                * Returns the base paint.
                *
                * @return The base paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBasePaint(Paint)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBasePaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base paint and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBasePaint()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBasePaint(int, Paint, boolean)?</comment>

            <comment type="line">//// FILL PAINT /////////////////////////////////////////////////////////</comment>

            <comment type="line">// /**</comment>
            <comment type="line">// * Returns the paint used to fill data items as they are drawn.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param row the row (or series) index (zero-based).</comment>
            <comment type="line">// * @param column the column (or category) index (zero-based).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @return The paint (never &lt;code&gt;null&lt;/code&gt;).</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public Paint getItemFillPaint(int row, int column);</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Returns the paint used to fill an item drawn by the renderer.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param series the series (zero-based index).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @see #setSeriesFillPaint(int, Paint)</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public Paint getSeriesFillPaint(int series);</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Sets the paint used for a series outline and sends a</comment>
            <comment type="line">// * {@link RendererChangeEvent} to all registered listeners.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param series the series index (zero-based).</comment>
            <comment type="line">// * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @see #getSeriesFillPaint(int)</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public void setSeriesFillPaint(int series, Paint paint);</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Returns the base outline paint.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @return The paint (never &lt;code&gt;null&lt;/code&gt;).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @see #setBaseFillPaint(Paint)</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public Paint getBaseFillPaint();</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Sets the base outline paint and sends a {@link RendererChangeEvent} to</comment>
            <comment type="line">// * all registered listeners.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @see #getBaseFillPaint()</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public void setBaseFillPaint(Paint paint);</comment>

            <comment type="line">//// OUTLINE PAINT /////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the paint used to outline data items as they are drawn.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the outline paint for ALL series (optional).
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlinePaint(int,
                * Paint)} and {@link #setBaseOutlinePaint(Paint)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used to outline an item drawn by the renderer.
                *
                * @param series the series (zero-based index).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesOutlinePaint(int, Paint)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the paint used for a series outline and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesOutlinePaint(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?</comment>

            <comment type="javadoc">/**
                * Returns the base outline paint.
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseOutlinePaint(Paint)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBaseOutlinePaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base outline paint and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseOutlinePaint()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseOutlinePaint(Paint, boolean)?</comment>

            <comment type="line">//// STROKE ////////////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the stroke used to draw data items.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getItemStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the stroke for ALL series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesStroke(int, Stroke)}
                * and {@link #setBaseStroke(Stroke)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the stroke used to draw the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesStroke(int, Stroke)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the stroke used for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesStroke(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesStroke(int, Stroke, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base stroke.
                *
                * @return The base stroke (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseStroke(Stroke)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getBaseStroke</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base stroke and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseStroke()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseStroke(Stroke, boolean) ?</comment>

            <comment type="line">//// OUTLINE STROKE ////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the stroke used to outline data items.
                * &lt;p&gt;
                * The default implementation passes control to the
                * lookupSeriesOutlineStroke method. You can override this method if you
                * require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getItemOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the outline stroke for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlineStroke(int,
                * Stroke)} and {@link #setBaseOutlineStroke(Stroke)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the stroke used to outline the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesOutlineStroke(int, Stroke)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the outline stroke used for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesOutlineStroke(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base outline stroke.
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseOutlineStroke(Stroke)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getBaseOutlineStroke</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base outline stroke and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseOutlineStroke()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?</comment>

            <comment type="line">//// SHAPE /////////////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns a shape used to represent a data item.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The shape (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getItemShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the shape for ALL series (optional) and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesShape(int, Shape)} and
                * {@link #setBaseShape(Shape)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a shape used to represent the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The shape (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesShape(int, Shape)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the shape used for a series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesShape(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesShape(int, Shape, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base shape.
                *
                * @return The shape (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseShape(Shape)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getBaseShape</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base shape and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseShape()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseShape(Shape, boolean) ?</comment>

            <comment type="line">// ITEM LABELS VISIBLE</comment>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if an item label is visible, and
                * &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isItemLabelVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls whether or not the item labels for ALL series
                * are visible.
                *
                * @param visible the flag.
                *
                * @see #setItemLabelsVisible(Boolean)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean)} and {@link #setBaseItemLabelsVisible(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls whether or not the item labels for ALL series
                * are visible.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #setItemLabelsVisible(boolean)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean)} and {@link #setBaseItemLabelsVisible(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the visibility of item labels for ALL series and, if requested,
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible a flag that controls whether or not the item labels are
                * visible (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean, boolean)} and {@link #setBaseItemLabelsVisible(Boolean,
                * boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the item labels for a series are visible,
                * and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param series the series index (zero-based).
                *
                * @return A boolean.
                *
                * @see #setSeriesItemLabelsVisible(int, Boolean)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls the visibility of the item labels for a series.
                *
                * @param series the series index (zero-based).
                * @param visible the flag.
                *
                * @see #isSeriesItemLabelsVisible(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls the visibility of the item labels for a series.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #isSeriesItemLabelsVisible(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the visibility of item labels for a series and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the visible flag.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #isSeriesItemLabelsVisible(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base setting for item label visibility. A &lt;code&gt;null&lt;/code&gt;
                * result should be interpreted as equivalent to &lt;code&gt;Boolean.FALSE&lt;/code&gt;
                * (this is an error in the API design, the return value should have been
                * a boolean primitive).
                *
                * @return A flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseItemLabelsVisible(Boolean)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getBaseItemLabelsVisible</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base flag that controls whether or not item labels are visible
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag.
                *
                * @see #getBaseItemLabelsVisible()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base setting for item label visibility and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBaseItemLabelsVisible()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility for item labels and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility flag.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getBaseItemLabelsVisible()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// ITEM LABEL GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the item label generator for the specified data item.
                *
                * @param series the series index (zero-based).
                * @param item the item index (zero-based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemLabelGenerator</name>
                </type>
                <name>getItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label generator for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. This overrides
                * the per-series settings.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelGenerator(int,
                * CategoryItemLabelGenerator)} and
                * {@link #setBaseItemLabelGenerator(CategoryItemLabelGenerator)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label generator for a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The label generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemLabelGenerator</name>
                </type>
                <name>getSeriesItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label generator for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param generator the generator.
                *
                * @see #getSeriesItemLabelGenerator(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator,</comment>
            <comment type="line">// boolean)</comment>

            <comment type="javadoc">/**
                * Returns the base item label generator.
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseItemLabelGenerator(CategoryItemLabelGenerator)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryItemLabelGenerator</name>
                </type>
                <name>getBaseItemLabelGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label generator and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBaseItemLabelGenerator()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator,</comment>
            <comment type="line">// boolean) ?</comment>

            <comment type="line">// TOOL TIP GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the tool tip generator that should be used for the specified
                * item. This method looks up the generator using the "three-layer"
                * approach outlined in the general description of this interface.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the tool tip generator that will be used for ALL items in the
                * dataset (the "layer 0" generator).
                *
                * @return A tool tip generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setToolTipGenerator(CategoryToolTipGenerator)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesToolTipGenerator(int)}
                * and {@link #getBaseToolTipGenerator()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getToolTipGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the tool tip generator for ALL series and sends a
                * {@link org.jfree.chart.event.RendererChangeEvent} to all registered
                * listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getToolTipGenerator()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesToolTipGenerator(int,
                * CategoryToolTipGenerator)} and
                * {@link #setBaseToolTipGenerator(CategoryToolTipGenerator)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the tool tip generator for the specified series (a "layer 1"
                * generator).
                *
                * @param series the series index (zero-based).
                *
                * @return The tool tip generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesToolTipGenerator(int, CategoryToolTipGenerator)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getSeriesToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the tool tip generator for a series and sends a
                * {@link org.jfree.chart.event.RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index (zero-based).
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesToolTipGenerator(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator,</comment>
            <comment type="line">// boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base tool tip generator (the "layer 2" generator).
                *
                * @return The tool tip generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseToolTipGenerator(CategoryToolTipGenerator)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryToolTipGenerator</name>
                </type>
                <name>getBaseToolTipGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base tool tip generator and sends a
                * {@link org.jfree.chart.event.RendererChangeEvent} to all registered
                * listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBaseToolTipGenerator()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?</comment>

            <comment type="line">//// ITEM LABEL FONT //////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the font for an item label.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The font (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the font used for all item labels. This may be
                * &lt;code&gt;null&lt;/code&gt;, in which case the per series font settings will apply.
                *
                * @return The font (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setItemLabelFont(Font)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesItemLabelFont(int)} and
                * {@link #getBaseItemLabelFont()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getItemLabelFont</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label font for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. You can set
                * this to &lt;code&gt;null&lt;/code&gt; if you prefer to set the font on a per series
                * basis.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getItemLabelFont()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelFont(int,
                * Font)} and {@link #setBaseItemLabelFont(Font)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the font for all the item labels in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The font (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesItemLabelFont(int, Font)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getSeriesItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label font for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesItemLabelFont(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base item label font (this is used when no other font
                * setting is available).
                *
                * @return The font (&lt;code&gt;never&lt;/code&gt; null).
                *
                * @see #setBaseItemLabelFont(Font)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getBaseItemLabelFont</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label font and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseItemLabelFont()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseItemLabelFont(Font, boolean) ?</comment>

            <comment type="line">//// ITEM LABEL PAINT /////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the paint used to draw an item label.
                *
                * @param row the row index (zero based).
                * @param column the column index (zero based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used for all item labels. This may be
                * &lt;code&gt;null&lt;/code&gt;, in which case the per series paint settings will
                * apply.
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setItemLabelPaint(Paint)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesItemLabelPaint(int)}
                * and {@link #getBaseItemLabelPaint()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemLabelPaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label paint for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getItemLabelPaint()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelPaint(int,
                * Paint)} and {@link #setBaseItemLabelPaint(Paint)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used to draw the item labels for a series.
                *
                * @param series the series index (zero based).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;code&gt;).
                *
                * @see #setSeriesItemLabelPaint(int, Paint)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label paint for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series (zero based index).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesItemLabelPaint(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base item label paint.
                *
                * @return The paint (never &lt;code&gt;null&lt;code&gt;).
                *
                * @see #setBaseItemLabelPaint(Paint)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBaseItemLabelPaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label paint and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseItemLabelPaint()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?</comment>

            <comment type="line">// POSITIVE ITEM LABEL POSITION...</comment>

            <comment type="javadoc">/**
                * Returns the item label position for positive values.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for positive values in ALL series.
                *
                * @return The item label position (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setPositiveItemLabelPosition(ItemLabelPosition)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #getSeriesPositiveItemLabelPosition(int)}
                * and {@link #getBasePositiveItemLabelPosition()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getPositiveItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for positive values in ALL series, and
                * sends a {@link RendererChangeEvent} to all registered listeners. You
                * need to set this to &lt;code&gt;null&lt;/code&gt; to expose the settings for
                * individual series.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getPositiveItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition)}
                * and {@link #setBasePositiveItemLabelPosition(ItemLabelPosition)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the positive item label position for ALL series and (if requested)
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getPositiveItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition,
                * boolean)} and {@link #setBasePositiveItemLabelPosition(
                * ItemLabelPosition, boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for all positive values in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The item label position.
                *
                * @see #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for all positive values in a series and
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesPositiveItemLabelPosition(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for all positive values in a series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getSeriesPositiveItemLabelPosition(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base positive item label position.
                *
                * @return The position.
                *
                * @see #setBasePositiveItemLabelPosition(ItemLabelPosition)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getBasePositiveItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base positive item label position.
                *
                * @param position the position.
                *
                * @see #getBasePositiveItemLabelPosition()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base positive item label position and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position.
                * @param notify notify registered listeners?
                *
                * @see #getBasePositiveItemLabelPosition()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>


            <comment type="line">// NEGATIVE ITEM LABEL POSITION...</comment>

            <comment type="javadoc">/**
                * Returns the item label position for negative values. This method can be
                * overridden to provide customisation of the item label position for
                * individual data items.
                *
                * @param row the row index (zero-based).
                * @param column the column (zero-based).
                *
                * @return The item label position.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for negative values in ALL series.
                *
                * @return The item label position (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setNegativeItemLabelPosition(ItemLabelPosition)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #getSeriesNegativeItemLabelPosition(int)}
                * and {@link #getBaseNegativeItemLabelPosition()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getNegativeItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in ALL series, and
                * sends a {@link RendererChangeEvent} to all registered listeners. You
                * need to set this to &lt;code&gt;null&lt;/code&gt; to expose the settings for
                * individual series.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getNegativeItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition)}
                * and {@link #setBaseNegativeItemLabelPosition(ItemLabelPosition)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in ALL series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getNegativeItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition,
                * boolean)} and {@link #setBaseNegativeItemLabelPosition(
                * ItemLabelPosition, boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for all negative values in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The item label position.
                *
                * @see #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesNegativeItemLabelPosition(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in a series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getSeriesNegativeItemLabelPosition(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base item label position for negative values.
                *
                * @return The position.
                *
                * @see #setBaseNegativeItemLabelPosition(ItemLabelPosition)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getBaseNegativeItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label position for negative values and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position.
                *
                * @see #getBaseNegativeItemLabelPosition()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base negative item label position and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position.
                * @param notify notify registered listeners?
                *
                * @see #getBaseNegativeItemLabelPosition()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// CREATE ENTITIES</comment>
            <comment type="line">// FIXME: these methods should be defined</comment>

            <comment type="line">// public boolean getItemCreateEntity(int series, int item);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public Boolean getSeriesCreateEntities(int series);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setSeriesCreateEntities(int series, Boolean create);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setSeriesCreateEntities(int series, Boolean create,</comment>
            <comment type="line">// boolean notify);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public boolean getBaseCreateEntities();</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setBaseCreateEntities(boolean create);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setBaseCreateEntities(boolean create, boolean notify);</comment>


            <comment type="line">// ITEM URL GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the URL generator for an item.
                *
                * @param series the series index (zero-based).
                * @param item the item index (zero-based).
                *
                * @return The item URL generator.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryURLGenerator</name>
                </type>
                <name>getItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item URL generator for ALL series.
                *
                * @param generator the generator.
                *
                * @see #getSeriesItemURLGenerator(int)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemURLGenerator(int,
                * CategoryURLGenerator)} and
                * {@link #setBaseItemURLGenerator(CategoryURLGenerator)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item URL generator for a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The URL generator.
                *
                * @see #setSeriesItemURLGenerator(int, CategoryURLGenerator)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryURLGenerator</name>
                </type>
                <name>getSeriesItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item URL generator for a series.
                *
                * @param series the series index (zero-based).
                * @param generator the generator.
                *
                * @see #getSeriesItemURLGenerator(int)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesItemURLGenerator(int, CategoryURLGenerator, boolean)?</comment>

            <comment type="javadoc">/**
                * Returns the base item URL generator.
                *
                * @return The item URL generator (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseItemURLGenerator(CategoryURLGenerator)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryURLGenerator</name>
                </type>
                <name>getBaseItemURLGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item URL generator and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param generator the item URL generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getBaseItemURLGenerator()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>CategoryURLGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseItemURLGenerator(CategoryURLGenerator, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns a legend item for a series. This method can return
                * &lt;code&gt;null&lt;/code&gt;, in which case the series will have no entry in the
                * legend.
                *
                * @param datasetIndex the dataset index (zero-based).
                * @param series the series (zero-based index).
                *
                * @return The legend item (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>LegendItem</name>
                </type>
                <name>getLegendItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>datasetIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a background for the data area.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param dataArea the data area.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawBackground</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws an outline for the data area.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param dataArea the data area.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawOutline</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a single data item.
                *
                * @param g2 the graphics device.
                * @param state state information for one chart.
                * @param dataArea the data plot area.
                * @param plot the plot.
                * @param domainAxis the domain axis.
                * @param rangeAxis the range axis.
                * @param dataset the data.
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                * @param pass the pass index.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryItemRendererState</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryAxis</name>
                            </type>
                            <name>domainAxis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>rangeAxis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>pass</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a grid line against the domain axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param dataArea the area for plotting data (not yet adjusted for any
                * 3D effect).
                * @param value the value.
                *
                * @see #drawRangeGridline(Graphics2D, CategoryPlot, ValueAxis,
                * Rectangle2D, double)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawDomainGridline</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a grid line against the range axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the value axis.
                * @param dataArea the area for plotting data (not yet adjusted for any
                * 3D effect).
                * @param value the value.
                *
                * @see #drawDomainGridline(Graphics2D, CategoryPlot, Rectangle2D, double)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawRangeGridline</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a line (or some other marker) to indicate a particular category on
                * the domain axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the category axis.
                * @param marker the marker.
                * @param dataArea the area for plotting data (not including 3D effect).
                *
                * @see #drawRangeMarker(Graphics2D, CategoryPlot, ValueAxis, Marker,
                * Rectangle2D)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawDomainMarker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryMarker</name>
                            </type>
                            <name>marker</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a line (or some other marker) to indicate a particular value on
                * the range axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the value axis.
                * @param marker the marker.
                * @param dataArea the area for plotting data (not including 3D effect).
                *
                * @see #drawDomainMarker(Graphics2D, CategoryPlot, CategoryAxis,
                * CategoryMarker, Rectangle2D)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawRangeMarker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CategoryPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Marker</name>
                            </type>
                            <name>marker</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>

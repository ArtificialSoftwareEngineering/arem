<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\data\contour\DefaultContourDataset.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * --------------------------
        * DefaultContourDataset.java
        * --------------------------
        * (C) Copyright 2002-2007, by David M. O'Donnell and Contributors.
        *
        * Original Author: David M. O'Donnell;
        * Contributor(s): David Gilbert (for Object Refinery Limited);
        *
        * Changes (from 23-Jan-2003)
        * --------------------------
        * 23-Jan-2003 : Added standard header (DG);
        * 20-May-2003 : removed member vars numX and numY, which were never used (TM);
        * 06-May-2004 : Now extends AbstractXYZDataset (DG);
        * 15-Jul-2004 : Switched getX() with getXValue(), getY() with getYValue() and
        * getZ() with getZValue() methods (DG);
        * ------------- JFREECHART 1.0.x --------------------------------------------
        * 31-Jan-2007 : Deprecated (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>contour</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Arrays</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Vector</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>XYPlot</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.<name>xy</name>.
            <name>XYBlockRenderer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>Range</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>xy</name>.
            <name>AbstractXYZDataset</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>xy</name>.
            <name>XYDataset</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A convenience class that provides a default implementation of the
        * {@link ContourDataset} interface.
        *
        * @deprecated This class is no longer supported (as of version 1.0.4). If
        * you are creating contour plots, please try to use {@link XYPlot} and
        * {@link XYBlockRenderer}.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>DefaultContourDataset</name>
        <super>
            <extends>extends
                <name>AbstractXYZDataset</name>
            </extends>
            <implements>implements
                <name>ContourDataset</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** The series name (this dataset supports only one series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Comparable</name>
                    </type>
                    <name>seriesKey</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Storage for the x values. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Number</name>
                        <index>[]</index>
                    </type>
                    <name>xValues</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Storage for the y values. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Number</name>
                        <index>[]</index>
                    </type>
                    <name>yValues</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Storage for the z values. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>Number</name>
                        <index>[]</index>
                    </type>
                    <name>zValues</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The index for the start of each column in the data. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>protected</specifier>
                        <name>int</name>
                        <index>[]</index>
                    </type>
                    <name>xIndex</name> =
                    <init>
                        <expr>
                            <name>null</name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Flags that track whether x, y and z are dates. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>boolean</name>
                        <index>[]</index>
                    </type>
                    <name>dateAxis</name> =
                    <init>
                        <expr>new
                            <name>
                                <name>boolean</name>
                                <index>[<expr>3</expr>]
                                </index>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new dataset, initially empty.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DefaultContourDataset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Constructs a new dataset with the given data.
                *
                * @param seriesKey the series key.
                * @param xData the x values.
                * @param yData the y values.
                * @param zData the z values.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>DefaultContourDataset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Comparable</name>
                            </type>
                            <name>seriesKey</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>xData</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>yData</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>zData</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesKey</name>
                            </name>
                            =
                            <name>seriesKey</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>initialize</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>xData</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>yData</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>zData</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Initialises the dataset.
                *
                * @param xData the x values.
                * @param yData the y values.
                * @param zData the z values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>initialize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>xData</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>yData</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Object</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>zData</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>xValues</name>
                            </name>
                            = new
                            <name>
                                <name>Double</name>
                                <index>[
                                    <expr>
                                        <name><name>xData</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>yValues</name>
                            </name>
                            = new
                            <name>
                                <name>Double</name>
                                <index>[
                                    <expr>
                                        <name><name>yData</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>zValues</name>
                            </name>
                            = new
                            <name>
                                <name>Double</name>
                                <index>[
                                    <expr>
                                        <name><name>zData</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// We organise the data with the following assumption:</comment>
                    <comment type="line">// 1) the data are sorted by x then y</comment>
                    <comment type="line">// 2) that the data will be represented by a rectangle formed by</comment>
                    <comment type="line">// using x[i+1], x, y[j+1], and y.</comment>
                    <comment type="line">// 3) we march along the y-axis at the same value of x until a new</comment>
                    <comment type="line">// value x is found at which point we will flag the index</comment>
                    <comment type="line">// where x[i+1]&lt;&gt;x[i]</comment>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Vector</name>
                            </type>
                            <name>tmpVector</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>Vector</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">//create a temporary vector</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name> =
                            <init>
                                <expr>1.123452e31</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <comment type="line">// set x to some arbitary value (used below)</comment>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>k</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>k</name>
                                &lt;
                                <name><name>this</name>.<name>xValues</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>k</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>xData</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <decl_stmt>
                                            <decl>
                                                <type>
                                                    <name>Number</name>
                                                </type>
                                                <name>xNumber</name>
                                            </decl>
                                            ;
                                        </decl_stmt>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>
                                                        <name>xData</name>
                                                        <index>[
                                                            <expr>
                                                                <name>k</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    <name>instanceof</name>
                                                    <name>Number</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>xNumber</name>
                                                            = (<name>Number</name>)
                                                            <name>
                                                                <name>xData</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>k</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <if>if
                                                    <condition>(
                                                        <expr>
                                                            <name>
                                                                <name>xData</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>k</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            <name>instanceof</name>
                                                            <name>Date</name>
                                                        </expr>
                                                        )
                                                    </condition>
                                                    <then>
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name><name>this</name>.
                                                                        <name>dateAxis</name>
                                                                        <index>[<expr>0</expr>]
                                                                        </index>
                                                                    </name>
                                                                    = true
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <decl_stmt>
                                                                <decl>
                                                                    <type>
                                                                        <name>Date</name>
                                                                    </type>
                                                                    <name>xDate</name> =
                                                                    <init>
                                                                        <expr>(<name>Date</name>)
                                                                            <name>
                                                                                <name>xData</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>k</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                        </expr>
                                                                    </init>
                                                                </decl>
                                                                ;
                                                            </decl_stmt>
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>xNumber</name>
                                                                    = new
                                                                    <call>
                                                                        <name>Long</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>xDate</name>.
                                                                                            <name>getTime</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            <comment type="line">//store data as Long</comment>
                                                            }
                                                        </block>
                                                    </then>
                                                    <else>else
                                                        <block>{
                                                            <expr_stmt>
                                                                <expr>
                                                                    <name>xNumber</name>
                                                                    = new
                                                                    <call>
                                                                        <name>Integer</name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>0</expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                                ;
                                                            </expr_stmt>
                                                            }
                                                        </block>
                                                    </else>
                                                </if>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>xValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name>k</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = new
                                                <call>
                                                    <name>Double</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <call>
                                                                    <name><name>xNumber</name>.
                                                                        <name>doubleValue</name>
                                                                    </name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <comment type="line">// store Number as Double</comment>

                                        <comment type="line">// check if starting new column</comment>
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>x</name>
                                                    !=
                                                    <name><name>this</name>.
                                                        <name>xValues</name>
                                                        <index>[
                                                            <expr>
                                                                <name>k</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    .
                                                    <call>
                                                        <name>doubleValue</name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>tmpVector</name>.
                                                                    <name>add</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>new
                                                                            <call>
                                                                                <name>Integer</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>k</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <comment type="line">//store index where new</comment>
                                                    <comment type="line">//column starts</comment>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>x</name>
                                                            =
                                                            <name><name>this</name>.
                                                                <name>xValues</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>k</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                            .
                                                            <call>
                                                                <name>doubleValue</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <comment type="line">// set x to most recent value</comment>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>inttmp</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>tmpVector</name>.
                                            <name>toArray</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>xIndex</name>
                            </name>
                            = new
                            <name>
                                <name>int</name>
                                <index>[
                                    <expr>
                                        <name><name>inttmp</name>.
                                            <name>length</name>
                                        </name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// create array xIndex to hold</comment>
                    <comment type="line">// new column indices</comment>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>inttmp</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>xIndex</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = ((<name>Integer</name>)
                                    <name>
                                        <name>inttmp</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    ).
                                    <call>
                                        <name>intValue</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>k</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>k</name>
                                &lt;
                                <name><name>this</name>.<name>yValues</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>k</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <comment type="line">// store y and z axes</comment>
                            <comment type="line">// as Doubles</comment>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>yValues</name>
                                        <index>[
                                            <expr>
                                                <name>k</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = (<name>Double</name>)
                                    <name>
                                        <name>yData</name>
                                        <index>[
                                            <expr>
                                                <name>k</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>zData</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>zValues</name>
                                                    <index>[
                                                        <expr>
                                                            <name>k</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                = (<name>Double</name>)
                                                <name>
                                                    <name>zData</name>
                                                    <index>[
                                                        <expr>
                                                            <name>k</name>
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an object array from an array of doubles.
                *
                * @param data the data.
                *
                * @return An array of &lt;code&gt;Double&lt;/code&gt; objects.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Object</name>
                    <index>[]</index>
                    <index>[]</index>
                </type>
                <name>formObjectArray</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>double</name>
                                    <index>[]</index>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                                <index>[]</index>
                            </type>
                            <name>object</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>Double</name>
                                        <index>[
                                            <expr>
                                                <name><name>data</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                        <index>[
                                            <expr>
                                                <name>
                                                    <name>data</name>
                                                    <index>[<expr>0</expr>]
                                                    </index>
                                                </name>
                                                .
                                                <name>length</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>object</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <for>for (
                                <init>
                                    <decl>
                                        <type>
                                            <name>int</name>
                                        </type>
                                        <name>j</name> =
                                        <init>
                                            <expr>0</expr>
                                        </init>
                                    </decl>
                                    ;
                                </init>
                                <condition>
                                    <expr>
                                        <name>j</name>
                                        &lt;
                                        <name>
                                            <name>object</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <name>length</name>
                                    </expr>
                                    ;
                                </condition>
                                <incr>
                                    <expr><name>j</name>++
                                    </expr>
                                </incr>
                                )
                                <block>{
                                    <expr_stmt>
                                        <expr>
                                            <name>
                                                <name>object</name>
                                                <index>[
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                    ]
                                                </index>
                                                <index>[
                                                    <expr>
                                                        <name>j</name>
                                                    </expr>
                                                    ]
                                                </index>
                                            </name>
                                            = new
                                            <call>
                                                <name>Double</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>
                                                                <name>data</name>
                                                                <index>[
                                                                    <expr>
                                                                        <name>i</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                                <index>[
                                                                    <expr>
                                                                        <name>j</name>
                                                                    </expr>
                                                                    ]
                                                                </index>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        ;
                                    </expr_stmt>
                                    }
                                </block>
                            </for>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>object</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Creates an object array from an array of doubles.
                *
                * @param data the data.
                *
                * @return An array of &lt;code&gt;Double&lt;/code&gt; objects.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Object</name>
                    <index>[]</index>
                </type>
                <name>formObjectArray</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>double</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>object</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>Double</name>
                                        <index>[
                                            <expr>
                                                <name><name>data</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <name><name>object</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>object</name>
                                        <index>[
                                            <expr>
                                                <name>i</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    = new
                                    <call>
                                        <name>Double</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>
                                                        <name>data</name>
                                                        <index>[
                                                            <expr>
                                                                <name>i</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>object</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the number of items in the specified series. This method
                * is provided to satisfy the {@link XYDataset} interface implementation.
                *
                * @param series must be zero, as this dataset only supports one series.
                *
                * @return The item count.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getItemCount</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>series</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Only one series for contour"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name><name>this</name>.<name>zValues</name>.
                                <name>length</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the maximum z-value.
                *
                * @return The maximum z-value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getMaxZValue</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>zMax</name> =
                            <init>
                                <expr>-1.e20</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>k</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>k</name>
                                &lt;
                                <name><name>this</name>.<name>zValues</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>k</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>this</name>.
                                            <name>zValues</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>zMax</name>
                                                =
                                                <call>
                                                    <name><name>Math</name>.
                                                        <name>max</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>zMax</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>zValues</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>k</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>doubleValue</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>zMax</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the minimum z-value.
                *
                * @return The minimum z-value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getMinZValue</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>zMin</name> =
                            <init>
                                <expr>1.e20</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>k</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>k</name>
                                &lt;
                                <name><name>this</name>.<name>zValues</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>k</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>this</name>.
                                            <name>zValues</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>zMin</name>
                                                =
                                                <call>
                                                    <name><name>Math</name>.
                                                        <name>min</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>zMin</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>zValues</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>k</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>doubleValue</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>zMin</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the maximum z-value within visible region of plot.
                *
                * @param x the x range.
                * @param y the y range.
                *
                * @return The z range.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>getZValueRange</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Range</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>minX</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>x</name>.
                                            <name>getLowerBound</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>minY</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>y</name>.
                                            <name>getLowerBound</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxX</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>x</name>.
                                            <name>getUpperBound</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxY</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>y</name>.
                                            <name>getUpperBound</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>zMin</name> =
                            <init>
                                <expr>1.e20</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>zMax</name> =
                            <init>
                                <expr>-1.e20</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>k</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>k</name>
                                &lt;
                                <name><name>this</name>.<name>zValues</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>k</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>this</name>.
                                            <name>xValues</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>doubleValue</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &gt;=
                                        <name>minX</name>
                                        &amp;&amp;
                                        <name><name>this</name>.
                                            <name>xValues</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>doubleValue</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &lt;=
                                        <name>maxX</name>
                                        &amp;&amp;
                                        <name><name>this</name>.
                                            <name>yValues</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>doubleValue</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &gt;=
                                        <name>minY</name>
                                        &amp;&amp;
                                        <name><name>this</name>.
                                            <name>yValues</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        .
                                        <call>
                                            <name>doubleValue</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                        &lt;=
                                        <name>maxY</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>zValues</name>
                                                        <index>[
                                                            <expr>
                                                                <name>k</name>
                                                            </expr>
                                                            ]
                                                        </index>
                                                    </name>
                                                    !=
                                                    <name>null</name>
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>zMin</name>
                                                            =
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>min</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>zMin</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>this</name>.
                                                                                <name>zValues</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>k</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <call>
                                                                                <name>doubleValue</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>zMax</name>
                                                            =
                                                            <call>
                                                                <name><name>Math</name>.
                                                                    <name>max</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>zMax</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name><name>this</name>.
                                                                                <name>zValues</name>
                                                                                <index>[
                                                                                    <expr>
                                                                                        <name>k</name>
                                                                                    </expr>
                                                                                    ]
                                                                                </index>
                                                                            </name>
                                                                            .
                                                                            <call>
                                                                                <name>doubleValue</name>
                                                                                <argument_list>()</argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>

                    <return>return
                        <expr>new
                            <call>
                                <name>Range</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>zMin</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>zMax</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the minimum z-value.
                *
                * @param minX the minimum x value.
                * @param minY the minimum y value.
                * @param maxX the maximum x value.
                * @param maxY the maximum y value.
                *
                * @return The minimum z-value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getMinZValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>minX</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>minY</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxX</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>maxY</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>zMin</name> =
                            <init>
                                <expr>1.e20</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>k</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>k</name>
                                &lt;
                                <name><name>this</name>.<name>zValues</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>k</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>this</name>.
                                            <name>zValues</name>
                                            <index>[
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        !=
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>zMin</name>
                                                =
                                                <call>
                                                    <name><name>Math</name>.
                                                        <name>min</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>zMin</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name><name>this</name>.
                                                                    <name>zValues</name>
                                                                    <index>[
                                                                        <expr>
                                                                            <name>k</name>
                                                                        </expr>
                                                                        ]
                                                                    </index>
                                                                </name>
                                                                .
                                                                <call>
                                                                    <name>doubleValue</name>
                                                                    <argument_list>()</argument_list>
                                                                </call>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>zMin</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the number of series.
                * &lt;P&gt;
                * Required by XYDataset interface (this will always return 1)
                *
                * @return 1.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getSeriesCount</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>1</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the name of the specified series.
                *
                * Method provided to satisfy the XYDataset interface implementation
                *
                * @param series must be zero.
                *
                * @return The series name.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Comparable</name>
                </type>
                <name>getSeriesKey</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>series</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Only one series for contour"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>seriesKey</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the index of the xvalues.
                *
                * @return The x values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                    <index>[]</index>
                </type>
                <name>getXIndices</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>xIndex</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the x values.
                *
                * @return The x values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                    <index>[]</index>
                </type>
                <name>getXValues</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>xValues</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the x value for the specified series and index (zero-based
                * indices). Required by the {@link XYDataset}.
                *
                * @param series must be zero;
                * @param item the item index (zero-based).
                *
                * @return The x value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getX</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>series</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Only one series for contour"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>xValues</name>
                                <index>[
                                    <expr>
                                        <name>item</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns an x value.
                *
                * @param item the item index (zero-based).
                *
                * @return The X value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getXValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>xValues</name>
                                <index>[
                                    <expr>
                                        <name>item</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a Number array containing all y values.
                *
                * @return The Y values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                    <index>[]</index>
                </type>
                <name>getYValues</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>yValues</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the y value for the specified series and index (zero-based
                * indices). Required by the {@link XYDataset}.
                *
                * @param series the series index (must be zero for this dataset).
                * @param item the item index (zero-based).
                *
                * @return The Y value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getY</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>series</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Only one series for contour"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>yValues</name>
                                <index>[
                                    <expr>
                                        <name>item</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a Number array containing all z values.
                *
                * @return The Z values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                    <index>[]</index>
                </type>
                <name>getZValues</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>zValues</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the z value for the specified series and index (zero-based
                * indices). Required by the {@link XYDataset}
                *
                * @param series the series index (must be zero for this dataset).
                * @param item the item index (zero-based).
                *
                * @return The Z value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getZ</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>series</name>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Only one series for contour"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>zValues</name>
                                <index>[
                                    <expr>
                                        <name>item</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns an int array contain the index into the x values.
                *
                * @return The X values.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                    <index>[]</index>
                </type>
                <name>indexX</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                                <index>[]</index>
                            </type>
                            <name>index</name> =
                            <init>
                                <expr>new
                                    <name>
                                        <name>int</name>
                                        <index>[
                                            <expr>
                                                <name><name>this</name>.<name>xValues</name>.
                                                    <name>length</name>
                                                </name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>k</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>k</name>
                                &lt;
                                <name><name>index</name>.
                                    <name>length</name>
                                </name>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>k</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name>
                                        <name>index</name>
                                        <index>[
                                            <expr>
                                                <name>k</name>
                                            </expr>
                                            ]
                                        </index>
                                    </name>
                                    =
                                    <call>
                                        <name>indexX</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </for>
                    <return>return
                        <expr>
                            <name>index</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Given index k, returns the column index containing k.
                *
                * @param k index of interest.
                *
                * @return The column index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>indexX</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>k</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Arrays</name>.
                                            <name>binarySearch</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>xIndex</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>k</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name>i</name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>-1 * <name>i</name> - 2
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>


            <comment type="javadoc">/**
                * Given index k, return the row index containing k.
                *
                * @param k index of interest.
                *
                * @return The row index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>indexY</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>k</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// this may be obsolete (not used anywhere)</comment>
                    <return>return
                        <expr>(<name>k</name> /
                            <name><name>this</name>.<name>xValues</name>.
                                <name>length</name>
                            </name>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Given column and row indices, returns the k index.
                *
                * @param i index of along x-axis.
                * @param j index of along y-axis.
                *
                * @return The Z index.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>indexZ</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>i</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>j</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.<name>xValues</name>.
                                <name>length</name>
                            </name>
                            * <name>j</name> +
                            <name>i</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns true if axis are dates.
                *
                * @param axisNumber The axis where 0-x, 1-y, and 2-z.
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isDateAxis</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>axisNumber</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>axisNumber</name>
                                &lt; 0 || <name>axisNumber</name> &gt; 2
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                <comment type="line">// bad axisNumber</comment>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>dateAxis</name>
                                <index>[
                                    <expr>
                                        <name>axisNumber</name>
                                    </expr>
                                    ]
                                </index>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the names of the series in the data source.
                *
                * @param seriesKeys the keys of the series in the data source.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesKeys</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>Comparable</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>seriesKeys</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>seriesKeys</name>.
                                    <name>length</name>
                                </name>
                                &gt; 1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Contours only support one series"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesKey</name>
                            </name>
                            =
                            <name>
                                <name>seriesKeys</name>
                                <index>[<expr>0</expr>]
                                </index>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireDatasetChanged</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\data\statistics\BoxAndWhiskerXYDataset.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ---------------------------
        * BoxAndWhiskerXYDataset.java
        * ---------------------------
        * (C) Copyright 2003, 2007, by David Browning and Contributors.
        *
        * Original Author: David Browning (for Australian Institute of Marine
        * Science);
        * Contributor(s): David Gilbert (for Object Refinery Limited);
        *
        * Changes
        * -------
        * 05-Aug-2003 : Version 1, contributed by David Browning (DG);
        * 12-Aug-2003 : Added new methods: getMaxNonOutlierValue
        * getMaxNonFaroutValue
        * getOutlierCoefficient
        * setOutlierCoefficient
        * getFaroutCoefficient
        * setFaroutCoefficient
        * getInterquartileRange (DB)
        * 27-Aug-2003 : Renamed BoxAndWhiskerDataset --&gt; BoxAndWhiskerXYDataset, and
        * cut down methods (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 02-Feb-2007 : Removed author tags from all over JFreeChart sources (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>statistics</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>xy</name>.
            <name>XYDataset</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An interface that defines data in the form of (x, max, min, average, median)
        * tuples.
        * &lt;P&gt;
        * Example: JFreeChart uses this interface to obtain data for AIMS
        * max-min-average-median plots.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>BoxAndWhiskerXYDataset</name>
        <super>
            <extends>extends
                <name>XYDataset</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Returns the mean for the specified series and item.
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return The mean for the specified series and item.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getMeanValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the median-value for the specified series and item.
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return The median-value for the specified series and item.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getMedianValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the Q1 median-value for the specified series and item.
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return The Q1 median-value for the specified series and item.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getQ1Value</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the Q3 median-value for the specified series and item.
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return The Q3 median-value for the specified series and item.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getQ3Value</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the min-value for the specified series and item.
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return The min-value for the specified series and item.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getMinRegularValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the max-value for the specified series and item.
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return The max-value for the specified series and item.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getMaxRegularValue</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the minimum value which is not a farout.
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return A &lt;code&gt;Number&lt;/code&gt; representing the maximum non-farout value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getMinOutlier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the maximum value which is not a farout, ie Q3 + (interquartile
                * range * farout coefficient).
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return A &lt;code&gt;Number&lt;/code&gt; representing the maximum non-farout value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Number</name>
                </type>
                <name>getMaxOutlier</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns an array of outliers for the specified series and item.
                *
                * @param series the series (zero-based index).
                * @param item the item (zero-based index).
                *
                * @return The array of outliers for the specified series and item.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>List</name>
                </type>
                <name>getOutliers</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value used as the outlier coefficient. The outlier
                * coefficient gives an indication of the degree of certainty in an
                * unskewed distribution. Increasing the coefficient increases the number
                * of values included. Currently only used to ensure farout coefficient
                * is greater than the outlier coefficient
                *
                * @return A &lt;code&gt;double&lt;/code&gt; representing the value used to calculate
                * outliers
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getOutlierCoefficient</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the value used as the farout coefficient. The farout coefficient
                * allows the calculation of which values will be off the graph.
                *
                * @return A &lt;code&gt;double&lt;/code&gt; representing the value used to calculate
                * farouts
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getFaroutCoefficient</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            }
        </block>
    </class>
</unit>

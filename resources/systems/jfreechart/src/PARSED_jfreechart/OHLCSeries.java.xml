<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\data\time\ohlc\OHLCSeries.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ---------------
        * OHLCSeries.java
        * ---------------
        * (C) Copyright 2006, 2007, by Object Refinery Limited.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): -;
        *
        * Changes
        * -------
        * 04-Dec-2006 : Version 1 (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>time</name>.
            <name>ohlc</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>ComparableObjectItem</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>ComparableObjectSeries</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>time</name>.
            <name>RegularTimePeriod</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A list of (RegularTimePeriod, open, high, low, close) data items.
        *
        * @since 1.0.4
        *
        * @see OHLCSeriesCollection
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>OHLCSeries</name>
        <super>
            <extends>extends
                <name>ComparableObjectSeries</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Creates a new empty series. By default, items added to the series will
                * be sorted into ascending order by period, and duplicate periods will
                * not be allowed.
                *
                * @param key the series key (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>OHLCSeries</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Comparable</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>key</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>false</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the time period for the specified item.
                *
                * @param index the item index.
                *
                * @return The time period.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>RegularTimePeriod</name>
                </type>
                <name>getPeriod</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>final</specifier>
                                <name>OHLCItem</name>
                            </type>
                            <name>item</name> =
                            <init>
                                <expr>(<name>OHLCItem</name>)
                                    <call>
                                        <name>getDataItem</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>index</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>item</name>.
                                    <name>getPeriod</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the data item at the specified index.
                *
                * @param index the item index.
                *
                * @return The data item.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ComparableObjectItem</name>
                </type>
                <name>getDataItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>getDataItem</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>index</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Adds a data item to the series.
                *
                * @param period the period.
                * @param open the open-value.
                * @param high the high-value.
                * @param low the low-value.
                * @param close the close-value.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>add</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RegularTimePeriod</name>
                            </type>
                            <name>period</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>open</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>high</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>low</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>close</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name>getItemCount</name>
                                    <argument_list>()</argument_list>
                                </call>
                                &gt; 0
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>OHLCItem</name>
                                        </type>
                                        <name>item0</name> =
                                        <init>
                                            <expr>(<name>OHLCItem</name>)
                                                <call>
                                                    <name><name>this</name>.
                                                        <name>getDataItem</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>0</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>!
                                            <call>
                                                <name><name>period</name>.
                                                    <name>getClass</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            .
                                            <call>
                                                <name>equals</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>item0</name>.
                                                                    <name>getPeriod</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                            .
                                                            <call>
                                                                <name>getClass</name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <throw>throw
                                                <expr>new
                                                    <call>
                                                        <name>IllegalArgumentException</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>"Can't mix RegularTimePeriod class types."</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </throw>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>OHLCItem</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>period</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>open</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>high</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>low</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>close</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

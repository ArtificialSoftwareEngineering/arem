<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\renderer\AbstractRenderer.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ---------------------
        * AbstractRenderer.java
        * ---------------------
        * (C) Copyright 2002-2007, by Object Refinery Limited.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): Nicolas Brodu;
        *
        * Changes:
        * --------
        * 22-Aug-2002 : Version 1, draws code out of AbstractXYItemRenderer to share
        * with AbstractCategoryItemRenderer (DG);
        * 01-Oct-2002 : Fixed errors reported by Checkstyle (DG);
        * 06-Nov-2002 : Moved to the com.jrefinery.chart.renderer package (DG);
        * 21-Nov-2002 : Added a paint table for the renderer to use (DG);
        * 17-Jan-2003 : Moved plot classes into a separate package (DG);
        * 25-Mar-2003 : Implemented Serializable (DG);
        * 29-Apr-2003 : Added valueLabelFont and valueLabelPaint attributes, based on
        * code from Arnaud Lelievre (DG);
        * 29-Jul-2003 : Amended code that doesn't compile with JDK 1.2.2 (DG);
        * 13-Aug-2003 : Implemented Cloneable (DG);
        * 15-Sep-2003 : Fixed serialization (NB);
        * 17-Sep-2003 : Changed ChartRenderingInfo --&gt; PlotRenderingInfo (DG);
        * 07-Oct-2003 : Moved PlotRenderingInfo into RendererState to allow for
        * multiple threads using a single renderer (DG);
        * 20-Oct-2003 : Added missing setOutlinePaint() method (DG);
        * 23-Oct-2003 : Split item label attributes into 'positive' and 'negative'
        * values (DG);
        * 26-Nov-2003 : Added methods to get the positive and negative item label
        * positions (DG);
        * 01-Mar-2004 : Modified readObject() method to prevent null pointer exceptions
        * after deserialization (DG);
        * 19-Jul-2004 : Fixed bug in getItemLabelFont(int, int) method (DG);
        * 04-Oct-2004 : Updated equals() method, eliminated use of NumberUtils,
        * renamed BooleanUtils --&gt; BooleanUtilities, ShapeUtils --&gt;
        * ShapeUtilities (DG);
        * 15-Mar-2005 : Fixed serialization of baseFillPaint (DG);
        * 16-May-2005 : Base outline stroke should never be null (DG);
        * 01-Jun-2005 : Added hasListener() method for unit testing (DG);
        * 08-Jun-2005 : Fixed equals() method to handle GradientPaint (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 02-Feb-2007 : Minor API doc update (DG);
        * 19-Feb-2007 : Fixes for clone() method (DG);
        * 28-Feb-2007 : Use cached event to signal changes (DG);
        * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG);
        * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke,
        * outlineStroke, shape, itemLabelsVisible, itemLabelFont,
        * itemLabelPaint, positiveItemLabelPosition,
        * negativeItemLabelPosition and createEntities override
        * fields (DG);
        * 13-Jun-2007 : Added new autoPopulate flags for core series attributes (DG);
        * 23-Oct-2007 : Updated lookup methods to better handle overridden
        * methods (DG);
        * 04-Dec-2007 : Modified hashCode() implementation (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>renderer</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>BasicStroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Color</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Font</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Paint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Shape</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Stroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Point2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Arrays</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>EventListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>swing</name>.<name>event</name>.
            <name>EventListenerList</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>HashUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>RendererChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>RendererChangeListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>ItemLabelAnchor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>ItemLabelPosition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>DrawingSupplier</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>PlotOrientation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>io</name>.
            <name>SerialUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>TextAnchor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>BooleanList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>BooleanUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ObjectList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ObjectUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PaintList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PaintUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ShapeList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ShapeUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>StrokeList</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Base class providing common services for renderers. Most methods that update
        * attributes of the renderer will fire a {@link RendererChangeEvent}, which
        * normally means the plot that owns the renderer will receive notification that
        * the renderer has been changed (the plot will, in turn, notify the chart).
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>AbstractRenderer</name>
        <super>
            <implements>implements <name>Cloneable</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** For serialization. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>-828267569428206075L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Zero represented as a &lt;code&gt;Double&lt;/code&gt;. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Double</name>
                    </type>
                    <name>ZERO</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>Double</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Paint</name>
                    </type>
                    <name>DEFAULT_PAINT</name> =
                    <init>
                        <expr>
                            <name><name>Color</name>.
                                <name>blue</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default outline paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Paint</name>
                    </type>
                    <name>DEFAULT_OUTLINE_PAINT</name> =
                    <init>
                        <expr>
                            <name><name>Color</name>.
                                <name>gray</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default stroke. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Stroke</name>
                    </type>
                    <name>DEFAULT_STROKE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BasicStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1.0f</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default outline stroke. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Stroke</name>
                    </type>
                    <name>DEFAULT_OUTLINE_STROKE</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>BasicStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>1.0f</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default shape. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Shape</name>
                    </type>
                    <name>DEFAULT_SHAPE</name>
                    =
                    <init>
                        <expr>new
                            <call>
                                <name><name>Rectangle2D</name>.
                                    <name>Double</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>-3.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>-3.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>6.0</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>6.0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default value label font. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Font</name>
                    </type>
                    <name>DEFAULT_VALUE_LABEL_FONT</name>
                    =
                    <init>
                        <expr>new
                            <call>
                                <name>Font</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"SansSerif"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Font</name>.
                                                <name>PLAIN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>10</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default value label paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Paint</name>
                    </type>
                    <name>DEFAULT_VALUE_LABEL_PAINT</name> =
                    <init>
                        <expr>
                            <name><name>Color</name>.
                                <name>black</name>
                            </name>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls the visibility of ALL series.
                *
                * @deprecated This field is redundant, you can rely on seriesVisibleList
                * and baseSeriesVisible. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Boolean</name>
                    </type>
                    <name>seriesVisible</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A list of flags that controls whether or not each series is visible. */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BooleanList</name>
                    </type>
                    <name>seriesVisibleList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default visibility for each series. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>baseSeriesVisible</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls the visibility of ALL series in the legend.
                *
                * @deprecated This field is redundant, you can rely on
                * seriesVisibleInLegendList and baseSeriesVisibleInLegend.
                * Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Boolean</name>
                    </type>
                    <name>seriesVisibleInLegend</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A list of flags that controls whether or not each series is visible in
                * the legend.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BooleanList</name>
                    </type>
                    <name>seriesVisibleInLegendList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The default visibility for each series in the legend. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>baseSeriesVisibleInLegend</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The paint for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on paintList and
                * basePaint. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>paint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The paint list. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>PaintList</name>
                    </type>
                    <name>paintList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not the paintList is auto-populated
                * in the {@link #lookupSeriesPaint(int)} method.
                *
                * @since 1.0.6
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoPopulateSeriesPaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>basePaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The fill paint for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on fillPaintList and
                * baseFillPaint. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>fillPaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The fill paint list. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>PaintList</name>
                    </type>
                    <name>fillPaintList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not the fillPaintList is auto-populated
                * in the {@link #lookupSeriesFillPaint(int)} method.
                *
                * @since 1.0.6
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoPopulateSeriesFillPaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base fill paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>baseFillPaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The outline paint for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on outlinePaintList
                * and baseOutlinePaint. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>outlinePaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The outline paint list. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>PaintList</name>
                    </type>
                    <name>outlinePaintList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not the outlinePaintList is
                * auto-populated in the {@link #lookupSeriesOutlinePaint(int)} method.
                *
                * @since 1.0.6
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoPopulateSeriesOutlinePaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base outline paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>baseOutlinePaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The stroke for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on strokeList and
                * baseStroke. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Stroke</name>
                    </type>
                    <name>stroke</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The stroke list. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>StrokeList</name>
                    </type>
                    <name>strokeList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not the strokeList is auto-populated
                * in the {@link #lookupSeriesStroke(int)} method.
                *
                * @since 1.0.6
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoPopulateSeriesStroke</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base stroke. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Stroke</name>
                    </type>
                    <name>baseStroke</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The outline stroke for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on strokeList and
                * baseStroke. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Stroke</name>
                    </type>
                    <name>outlineStroke</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The outline stroke list. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>StrokeList</name>
                    </type>
                    <name>outlineStrokeList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base outline stroke. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Stroke</name>
                    </type>
                    <name>baseOutlineStroke</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not the outlineStrokeList is
                * auto-populated in the {@link #lookupSeriesOutlineStroke(int)} method.
                *
                * @since 1.0.6
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoPopulateSeriesOutlineStroke</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The shape for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on shapeList and
                * baseShape. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Shape</name>
                    </type>
                    <name>shape</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** A shape list. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ShapeList</name>
                    </type>
                    <name>shapeList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not the shapeList is auto-populated
                * in the {@link #lookupSeriesShape(int)} method.
                *
                * @since 1.0.6
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>autoPopulateSeriesShape</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base shape. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Shape</name>
                    </type>
                    <name>baseShape</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Visibility of the item labels for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on
                * itemLabelsVisibleList and baseItemLabelsVisible. Deprecated from
                * version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Boolean</name>
                    </type>
                    <name>itemLabelsVisible</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Visibility of the item labels PER series. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BooleanList</name>
                    </type>
                    <name>itemLabelsVisibleList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base item labels visible. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Boolean</name>
                    </type>
                    <name>baseItemLabelsVisible</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The item label font for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on itemLabelFontList
                * and baseItemLabelFont. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Font</name>
                    </type>
                    <name>itemLabelFont</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The item label font list (one font per series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>itemLabelFontList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base item label font. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Font</name>
                    </type>
                    <name>baseItemLabelFont</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The item label paint for ALL series.
                *
                * @deprecated This field is redundant, you can rely on itemLabelPaintList
                * and baseItemLabelPaint. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>itemLabelPaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The item label paint list (one paint per series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>PaintList</name>
                    </type>
                    <name>itemLabelPaintList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The base item label paint. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>Paint</name>
                    </type>
                    <name>baseItemLabelPaint</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The positive item label position for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on the
                * positiveItemLabelPositionList and basePositiveItemLabelPosition
                * fields. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ItemLabelPosition</name>
                    </type>
                    <name>positiveItemLabelPosition</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The positive item label position (per series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>positiveItemLabelPositionList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The fallback positive item label position. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ItemLabelPosition</name>
                    </type>
                    <name>basePositiveItemLabelPosition</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The negative item label position for ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on the
                * negativeItemLabelPositionList and baseNegativeItemLabelPosition
                * fields. Deprecated from version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ItemLabelPosition</name>
                    </type>
                    <name>negativeItemLabelPosition</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The negative item label position (per series). */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ObjectList</name>
                    </type>
                    <name>negativeItemLabelPositionList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The fallback negative item label position. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ItemLabelPosition</name>
                    </type>
                    <name>baseNegativeItemLabelPosition</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The item label anchor offset. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>double</name>
                    </type>
                    <name>itemLabelAnchorOffset</name> =
                    <init>
                        <expr>2.0</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A flag that controls whether or not entities are generated for
                * ALL series (optional).
                *
                * @deprecated This field is redundant, you can rely on the
                * createEntitiesList and baseCreateEntities fields. Deprecated from
                * version 1.0.6 onwards.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Boolean</name>
                    </type>
                    <name>createEntities</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Flags that control whether or not entities are generated for each
                * series. This will be overridden by 'createEntities'.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>BooleanList</name>
                    </type>
                    <name>createEntitiesList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The default flag that controls whether or not entities are generated.
                * This flag is used when both the above flags return null.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>boolean</name>
                    </type>
                    <name>baseCreateEntities</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** Storage for registered change listeners. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>EventListenerList</name>
                    </type>
                    <name>listenerList</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** An event for re-use. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>transient</name>
                        <name>RendererChangeEvent</name>
                    </type>
                    <name>event</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Default constructor.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>AbstractRenderer</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisible</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisibleList</name>
                            </name>
                            = new
                            <call>
                                <name>BooleanList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseSeriesVisible</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisibleInLegend</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisibleInLegendList</name>
                            </name>
                            = new
                            <call>
                                <name>BooleanList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseSeriesVisibleInLegend</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>paint</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>paintList</name>
                            </name>
                            = new
                            <call>
                                <name>PaintList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>basePaint</name>
                            </name>
                            =
                            <name>DEFAULT_PAINT</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesPaint</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fillPaint</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fillPaintList</name>
                            </name>
                            = new
                            <call>
                                <name>PaintList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseFillPaint</name>
                            </name>
                            =
                            <name><name>Color</name>.
                                <name>white</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesFillPaint</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlinePaint</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlinePaintList</name>
                            </name>
                            = new
                            <call>
                                <name>PaintList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlinePaint</name>
                            </name>
                            =
                            <name>DEFAULT_OUTLINE_PAINT</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesOutlinePaint</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>stroke</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>strokeList</name>
                            </name>
                            = new
                            <call>
                                <name>StrokeList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseStroke</name>
                            </name>
                            =
                            <name>DEFAULT_STROKE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesStroke</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineStroke</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineStrokeList</name>
                            </name>
                            = new
                            <call>
                                <name>StrokeList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlineStroke</name>
                            </name>
                            =
                            <name>DEFAULT_OUTLINE_STROKE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesOutlineStroke</name>
                            </name>
                            = false
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>shape</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>shapeList</name>
                            </name>
                            = new
                            <call>
                                <name>ShapeList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseShape</name>
                            </name>
                            =
                            <name>DEFAULT_SHAPE</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesShape</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelsVisible</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelsVisibleList</name>
                            </name>
                            = new
                            <call>
                                <name>BooleanList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelsVisible</name>
                            </name>
                            =
                            <name><name>Boolean</name>.
                                <name>FALSE</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelFont</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelFontList</name>
                            </name>
                            = new
                            <call>
                                <name>ObjectList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelFont</name>
                            </name>
                            = new
                            <call>
                                <name>Font</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"SansSerif"</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>Font</name>.
                                                <name>PLAIN</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>10</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelPaint</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelPaintList</name>
                            </name>
                            = new
                            <call>
                                <name>PaintList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelPaint</name>
                            </name>
                            =
                            <name><name>Color</name>.
                                <name>black</name>
                            </name>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>positiveItemLabelPosition</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>positiveItemLabelPositionList</name>
                            </name>
                            = new
                            <call>
                                <name>ObjectList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>basePositiveItemLabelPosition</name>
                            </name>
                            = new
                            <call>
                                <name>ItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ItemLabelAnchor</name>.
                                                <name>OUTSIDE12</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>TextAnchor</name>.
                                                <name>BOTTOM_CENTER</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>negativeItemLabelPosition</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>negativeItemLabelPositionList</name>
                            </name>
                            = new
                            <call>
                                <name>ObjectList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseNegativeItemLabelPosition</name>
                            </name>
                            = new
                            <call>
                                <name>ItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>ItemLabelAnchor</name>.
                                                <name>OUTSIDE6</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>TextAnchor</name>.
                                                <name>TOP_CENTER</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>createEntities</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>createEntitiesList</name>
                            </name>
                            = new
                            <call>
                                <name>BooleanList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseCreateEntities</name>
                            </name>
                            = true
                        </expr>
                        ;
                    </expr_stmt>

                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>listenerList</name>
                            </name>
                            = new
                            <call>
                                <name>EventListenerList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the drawing supplier from the plot.
                *
                * @return The drawing supplier.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>DrawingSupplier</name>
                </type>
                <name>getDrawingSupplier</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="line">// SERIES VISIBLE (not yet respected by all renderers)</comment>

            <comment type="javadoc">/**
                * Returns a boolean that indicates whether or not the specified item
                * should be drawn (this is typically used to hide an entire series).
                *
                * @param series the series index.
                * @param item the item index.
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getItemVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>isSeriesVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a boolean that indicates whether or not the specified series
                * should be drawn.
                *
                * @param series the series index.
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.
                                        <name>baseSeriesVisible</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>seriesVisible</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>this</name>.<name>seriesVisible</name>.
                                                <name>booleanValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Boolean</name>
                                        </type>
                                        <name>b</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>this</name>.<name>seriesVisibleList</name>.
                                                        <name>getBoolean</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>series</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>b</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <call>
                                                        <name><name>b</name>.
                                                            <name>booleanValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls the visibility of ALL series. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisible(Boolean)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesVisible(int)} and
                * {@link #getBaseSeriesVisible()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisible</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisible</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisible()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisible(int, Boolean)}
                * and {@link #setBaseSeriesVisible(boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisible()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisible(int, Boolean)}
                * and {@link #setBaseSeriesVisible(boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether a series is visible.
                *
                * @param series the series index (zero-based).
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisible(int, Boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>seriesVisibleList</name>.
                                    <name>getBoolean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisible(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible and, if
                * requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index.
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisible(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>seriesVisibleList</name>.
                                    <name>setBoolean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base visibility for all series.
                *
                * @return The base visibility.
                *
                * @see #setBaseSeriesVisible(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBaseSeriesVisible</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseSeriesVisible</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base visibility and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param visible the flag.
                *
                * @see #getBaseSeriesVisible()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseSeriesVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base visibility and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility.
                * @param notify notify listeners?
                *
                * @see #getBaseSeriesVisible()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseSeriesVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)</comment>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the series should be shown in the legend,
                * and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param series the series index.
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.
                                        <name>baseSeriesVisibleInLegend</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>seriesVisibleInLegend</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name><name>this</name>.<name>seriesVisibleInLegend</name>.
                                                <name>booleanValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Boolean</name>
                                        </type>
                                        <name>b</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name><name>this</name>.<name>seriesVisibleInLegendList</name>.
                                                        <name>getBoolean</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>series</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>b</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <call>
                                                        <name><name>b</name>.
                                                            <name>booleanValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls the visibility of ALL series in the
                * legend. This flag overrides the per series and default settings - you
                * must set it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to
                * apply.
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisibleInLegend(Boolean)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesVisibleInLegend(int)}
                * and {@link #getBaseSeriesVisibleInLegend()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisibleInLegend</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisibleInLegend</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                * This flag overrides the per series and default settings - you must set
                * it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisibleInLegend()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisibleInLegend(int,
                * Boolean)} and {@link #setBaseSeriesVisibleInLegend(boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesVisibleInLegend</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                * This flag overrides the per series and default settings - you must set
                * it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisibleInLegend()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisibleInLegend(int,
                * Boolean, boolean)} and {@link #setBaseSeriesVisibleInLegend(boolean,
                * boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>seriesVisibleInLegend</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether a series is visible in the
                * legend. This method returns only the "per series" settings - to
                * incorporate the override and base settings as well, you need to use the
                * {@link #isSeriesVisibleInLegend(int)} method.
                *
                * @param series the series index (zero-based).
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesVisibleInLegend(int, Boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>seriesVisibleInLegendList</name>.
                                    <name>getBoolean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesVisibleInLegend(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesVisibleInLegend</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible in the legend
                * and, if requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index.
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesVisibleInLegend(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>seriesVisibleInLegendList</name>.
                                    <name>setBoolean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base visibility in the legend for all series.
                *
                * @return The base visibility.
                *
                * @see #setBaseSeriesVisibleInLegend(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBaseSeriesVisibleInLegend</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseSeriesVisibleInLegend</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base visibility in the legend and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag.
                *
                * @see #getBaseSeriesVisibleInLegend()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseSeriesVisibleInLegend</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base visibility in the legend and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility.
                * @param notify notify listeners?
                *
                * @see #getBaseSeriesVisibleInLegend()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseSeriesVisibleInLegend</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">// PAINT</comment>

            <comment type="javadoc">/**
                * Returns the paint used to fill data items as they are drawn.
                * &lt;p&gt;
                * The default implementation passes control to the
                * &lt;code&gt;getSeriesPaint&lt;/code&gt; method. You can override this method if you
                * require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>lookupSeriesPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to fill an item drawn by the renderer.
                *
                * @param series the series index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @since 1.0.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>lookupSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>paint</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>paint</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the paint list</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>seriesPaint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getSeriesPaint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>seriesPaint</name>
                                == <name>null</name> &amp;&amp;
                                <name><name>this</name>.
                                    <name>autoPopulateSeriesPaint</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DrawingSupplier</name>
                                        </type>
                                        <name>supplier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getDrawingSupplier</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>supplier</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>seriesPaint</name>
                                                    =
                                                    <call>
                                                        <name><name>supplier</name>.
                                                            <name>getNextPaint</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSeriesPaint</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>series</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>seriesPaint</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>seriesPaint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>seriesPaint</name>
                                        =
                                        <name><name>this</name>.
                                            <name>basePaint</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>seriesPaint</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint to be used for ALL series, and sends a
                * {@link RendererChangeEvent} to all registered listeners. If this is
                * &lt;code&gt;null&lt;/code&gt;, the renderer will use the paint for the series.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesPaint(int, Paint)} and
                * {@link #setBasePaint(Paint)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint to be used for all series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesPaint(int, Paint,
                * boolean)} and {@link #setBasePaint(Paint, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>paint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to fill an item drawn by the renderer.
                *
                * @param series the series index (zero-based).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesPaint(int, Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>paintList</name>.
                                    <name>getPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used for a series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesPaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used for a series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index.
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesPaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>paintList</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base paint.
                *
                * @return The base paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBasePaint(Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBasePaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>basePaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base paint and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBasePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBasePaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base paint and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify listeners?
                *
                * @see #getBasePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>basePaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the series paint list is
                * automatically populated when {@link #lookupSeriesPaint(int)} is called.
                *
                * @return A boolean.
                *
                * @since 1.0.6
                *
                * @see #setAutoPopulateSeriesPaint(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAutoPopulateSeriesPaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesPaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not the series paint list is
                * automatically populated when {@link #lookupSeriesPaint(int)} is called.
                *
                * @param auto the new flag value.
                *
                * @since 1.0.6
                *
                * @see #getAutoPopulateSeriesPaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoPopulateSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesPaint</name>
                            </name>
                            =
                            <name>auto</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">//// FILL PAINT //////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the paint used to fill data items as they are drawn. The
                * default implementation passes control to the
                * {@link #lookupSeriesFillPaint(int)} method - you can override this
                * method if you require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>lookupSeriesFillPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to fill an item drawn by the renderer.
                *
                * @param series the series (zero-based index).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @since 1.0.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>lookupSeriesFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>fillPaint</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>fillPaint</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the paint table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>seriesFillPaint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getSeriesFillPaint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>seriesFillPaint</name>
                                == <name>null</name> &amp;&amp;
                                <name><name>this</name>.
                                    <name>autoPopulateSeriesFillPaint</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DrawingSupplier</name>
                                        </type>
                                        <name>supplier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getDrawingSupplier</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>supplier</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>seriesFillPaint</name>
                                                    =
                                                    <call>
                                                        <name><name>supplier</name>.
                                                            <name>getNextFillPaint</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSeriesFillPaint</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>series</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>seriesFillPaint</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>seriesFillPaint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>seriesFillPaint</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseFillPaint</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>seriesFillPaint</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to fill an item drawn by the renderer.
                *
                * @param series the series (zero-based index).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesFillPaint(int, Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>fillPaintList</name>.
                                    <name>getPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used for a series fill and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesFillPaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesFillPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used to fill a series and, if requested,
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesFillPaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>fillPaintList</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the fill paint for ALL series (optional).
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesFillPaint(int, Paint)}
                * and {@link #setBaseFillPaint(Paint)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setFillPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the fill paint for ALL series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesFillPaint(int, Paint,
                * boolean)} and {@link #setBaseFillPaint(Paint, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fillPaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base fill paint.
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseFillPaint(Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBaseFillPaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseFillPaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base fill paint and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseFillPaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseFillPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base fill paint and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify listeners?
                *
                * @see #getBaseFillPaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'paint' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseFillPaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the series fill paint list
                * is automatically populated when {@link #lookupSeriesFillPaint(int)} is
                * called.
                *
                * @return A boolean.
                *
                * @since 1.0.6
                *
                * @see #setAutoPopulateSeriesFillPaint(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAutoPopulateSeriesFillPaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesFillPaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not the series fill paint list is
                * automatically populated when {@link #lookupSeriesFillPaint(int)} is
                * called.
                *
                * @param auto the new flag value.
                *
                * @since 1.0.6
                *
                * @see #getAutoPopulateSeriesFillPaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoPopulateSeriesFillPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesFillPaint</name>
                            </name>
                            =
                            <name>auto</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// OUTLINE PAINT //////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the paint used to outline data items as they are drawn.
                * &lt;p&gt;
                * The default implementation passes control to the
                * {@link #lookupSeriesOutlinePaint} method. You can override this method
                * if you require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>lookupSeriesOutlinePaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to outline an item drawn by the renderer.
                *
                * @param series the series (zero-based index).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @since 1.0.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>lookupSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>outlinePaint</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>outlinePaint</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the paint table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>seriesOutlinePaint</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getSeriesOutlinePaint</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>seriesOutlinePaint</name>
                                == <name>null</name> &amp;&amp;
                                <name><name>this</name>.
                                    <name>autoPopulateSeriesOutlinePaint</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DrawingSupplier</name>
                                        </type>
                                        <name>supplier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getDrawingSupplier</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>supplier</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>seriesOutlinePaint</name>
                                                    =
                                                    <call>
                                                        <name><name>supplier</name>.
                                                            <name>getNextOutlinePaint</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSeriesOutlinePaint</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>series</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>seriesOutlinePaint</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>seriesOutlinePaint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>seriesOutlinePaint</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseOutlinePaint</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>seriesOutlinePaint</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to outline an item drawn by the renderer.
                *
                * @param series the series (zero-based index).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesOutlinePaint(int, Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>outlinePaintList</name>.
                                    <name>getPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used for a series outline and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesOutlinePaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesOutlinePaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the paint used to draw the outline for a series and, if requested,
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesOutlinePaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>outlinePaintList</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the outline paint for ALL series (optional) and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlinePaint(int,
                * Paint)} and {@link #setBaseOutlinePaint(Paint)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setOutlinePaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the outline paint for ALL series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlinePaint(int,
                * Paint, boolean)} and {@link #setBaseOutlinePaint(Paint, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlinePaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base outline paint.
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseOutlinePaint(Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBaseOutlinePaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlinePaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base outline paint and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseOutlinePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseOutlinePaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base outline paint and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify listeners?
                *
                * @see #getBaseOutlinePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'paint' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlinePaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the series outline paint
                * list is automatically populated when
                * {@link #lookupSeriesOutlinePaint(int)} is called.
                *
                * @return A boolean.
                *
                * @since 1.0.6
                *
                * @see #setAutoPopulateSeriesOutlinePaint(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAutoPopulateSeriesOutlinePaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesOutlinePaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not the series outline paint list
                * is automatically populated when {@link #lookupSeriesOutlinePaint(int)}
                * is called.
                *
                * @param auto the new flag value.
                *
                * @since 1.0.6
                *
                * @see #getAutoPopulateSeriesOutlinePaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoPopulateSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesOutlinePaint</name>
                            </name>
                            =
                            <name>auto</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// STROKE</comment>

            <comment type="javadoc">/**
                * Returns the stroke used to draw data items.
                * &lt;p&gt;
                * The default implementation passes control to the getSeriesStroke method.
                * You can override this method if you require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getItemStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>lookupSeriesStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the stroke used to draw the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @since 1.0.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>lookupSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>stroke</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>stroke</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the paint table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getSeriesStroke</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                == <name>null</name> &amp;&amp;
                                <name><name>this</name>.
                                    <name>autoPopulateSeriesStroke</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DrawingSupplier</name>
                                        </type>
                                        <name>supplier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getDrawingSupplier</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>supplier</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <call>
                                                        <name><name>supplier</name>.
                                                            <name>getNextStroke</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSeriesStroke</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>series</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>result</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseStroke</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the stroke for ALL series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesStroke(int, Stroke)}
                * and {@link #setBaseStroke(Stroke)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the stroke for ALL series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesStroke(int, Stroke,
                * boolean)} and {@link #setBaseStroke(Stroke, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>stroke</name>
                            </name>
                            =
                            <name>stroke</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the stroke used to draw the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesStroke(int, Stroke)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>strokeList</name>.
                                    <name>getStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the stroke used for a series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesStroke(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the stroke for a series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesStroke(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>strokeList</name>.
                                    <name>setStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base stroke.
                *
                * @return The base stroke (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseStroke(Stroke)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getBaseStroke</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseStroke</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base stroke and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseStroke()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base stroke and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify listeners?
                *
                * @see #getBaseStroke()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>stroke</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'stroke' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseStroke</name>
                            </name>
                            =
                            <name>stroke</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the series stroke list is
                * automatically populated when {@link #lookupSeriesStroke(int)} is called.
                *
                * @return A boolean.
                *
                * @since 1.0.6
                *
                * @see #setAutoPopulateSeriesStroke(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAutoPopulateSeriesStroke</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesStroke</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not the series stroke list is
                * automatically populated when {@link #lookupSeriesStroke(int)} is called.
                *
                * @param auto the new flag value.
                *
                * @since 1.0.6
                *
                * @see #getAutoPopulateSeriesStroke()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoPopulateSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesStroke</name>
                            </name>
                            =
                            <name>auto</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// OUTLINE STROKE</comment>

            <comment type="javadoc">/**
                * Returns the stroke used to outline data items. The default
                * implementation passes control to the
                * {@link #lookupSeriesOutlineStroke(int)} method. You can override this
                * method if you require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getItemOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>lookupSeriesOutlineStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the stroke used to outline the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @since 1.0.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>lookupSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>outlineStroke</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>outlineStroke</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the stroke table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getSeriesOutlineStroke</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                == <name>null</name> &amp;&amp;
                                <name><name>this</name>.
                                    <name>autoPopulateSeriesOutlineStroke</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DrawingSupplier</name>
                                        </type>
                                        <name>supplier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getDrawingSupplier</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>supplier</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <call>
                                                        <name><name>supplier</name>.
                                                            <name>getNextOutlineStroke</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSeriesOutlineStroke</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>series</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>result</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseOutlineStroke</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the outline stroke for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlineStroke(int,
                * Stroke)} and {@link #setBaseOutlineStroke(Stroke)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setOutlineStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the outline stroke for ALL series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlineStroke(int,
                * Stroke, boolean)} and {@link #setBaseOutlineStroke(Stroke, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineStroke</name>
                            </name>
                            =
                            <name>stroke</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the stroke used to outline the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesOutlineStroke(int, Stroke)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>outlineStrokeList</name>.
                                    <name>getStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the outline stroke used for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesOutlineStroke(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesOutlineStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the outline stroke for a series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index.
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesOutlineStroke(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>outlineStrokeList</name>.
                                    <name>setStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base outline stroke.
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseOutlineStroke(Stroke)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getBaseOutlineStroke</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlineStroke</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base outline stroke and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseOutlineStroke()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseOutlineStroke</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stroke</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base outline stroke and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getBaseOutlineStroke()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>stroke</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'stroke' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlineStroke</name>
                            </name>
                            =
                            <name>stroke</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the series outline stroke
                * list is automatically populated when
                * {@link #lookupSeriesOutlineStroke(int)} is called.
                *
                * @return A boolean.
                *
                * @since 1.0.6
                *
                * @see #setAutoPopulateSeriesOutlineStroke(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAutoPopulateSeriesOutlineStroke</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesOutlineStroke</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not the series outline stroke list
                * is automatically populated when {@link #lookupSeriesOutlineStroke(int)}
                * is called.
                *
                * @param auto the new flag value.
                *
                * @since 1.0.6
                *
                * @see #getAutoPopulateSeriesOutlineStroke()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoPopulateSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesOutlineStroke</name>
                            </name>
                            =
                            <name>auto</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// SHAPE</comment>

            <comment type="javadoc">/**
                * Returns a shape used to represent a data item.
                * &lt;p&gt;
                * The default implementation passes control to the getSeriesShape method.
                * You can override this method if you require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The shape (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getItemShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>lookupSeriesShape</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a shape used to represent the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The shape (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @since 1.0.6
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>lookupSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>shape</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>shape</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the shape list</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getSeriesShape</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                == <name>null</name> &amp;&amp;
                                <name><name>this</name>.
                                    <name>autoPopulateSeriesShape</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>DrawingSupplier</name>
                                        </type>
                                        <name>supplier</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getDrawingSupplier</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>supplier</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <call>
                                                        <name><name>supplier</name>.
                                                            <name>getNextShape</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            <expr_stmt>
                                                <expr>
                                                    <call>
                                                        <name>setSeriesShape</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>series</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>
                                                                    <name>result</name>
                                                                </expr>
                                                            </argument>
                                                            ,
                                                            <argument>
                                                                <expr>false</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseShape</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape for ALL series (optional) and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesShape(int, Shape)}
                * and {@link #setBaseShape(Shape)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setShape</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>shape</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape for ALL series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesShape(int, Shape,
                * boolean)} and {@link #setBaseShape(Shape, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>shape</name>
                            </name>
                            =
                            <name>shape</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a shape used to represent the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The shape (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesShape(int, Shape)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>shapeList</name>.
                                    <name>getShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape used for a series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesShape(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesShape</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shape</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the shape for a series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero based).
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesShape(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>shapeList</name>.
                                    <name>setShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>shape</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base shape.
                *
                * @return The shape (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseShape(Shape)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getBaseShape</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseShape</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base shape and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseShape()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseShape</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>shape</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base shape and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify listeners?
                *
                * @see #getBaseShape()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>shape</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'shape' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseShape</name>
                            </name>
                            =
                            <name>shape</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not the series shape list is
                * automatically populated when {@link #lookupSeriesShape(int)} is called.
                *
                * @return A boolean.
                *
                * @since 1.0.6
                *
                * @see #setAutoPopulateSeriesShape(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getAutoPopulateSeriesShape</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesShape</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not the series shape list is
                * automatically populated when {@link #lookupSeriesShape(int)} is called.
                *
                * @param auto the new flag value.
                *
                * @since 1.0.6
                *
                * @see #getAutoPopulateSeriesShape()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setAutoPopulateSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>auto</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>autoPopulateSeriesShape</name>
                            </name>
                            =
                            <name>auto</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="line">// ITEM LABEL VISIBILITY...</comment>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if an item label is visible, and
                * &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isItemLabelVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>isSeriesItemLabelsVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the item labels for a series are visible,
                * and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param series the series index (zero-based).
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelsVisible</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>this</name>.<name>itemLabelsVisible</name>.
                                                <name>booleanValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the boolean table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>b</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>itemLabelsVisibleList</name>.
                                            <name>getBoolean</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>b</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseItemLabelsVisible</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>b</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>b</name>
                                        =
                                        <name><name>Boolean</name>.
                                            <name>FALSE</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>b</name>.
                                    <name>booleanValue</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the visibility of the item labels for ALL series.
                *
                * @param visible the flag.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean)} and {@link #setBaseItemLabelsVisible(boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setItemLabelsVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>BooleanUtilities</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>visible</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// The following alternative is only supported in JDK 1.4 - we support
                    </comment>
                    <comment type="line">// JDK 1.3.1 onwards</comment>
                    <comment type="line">// setItemLabelsVisible(Boolean.valueOf(visible));</comment>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the visibility of the item labels for ALL series (optional).
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean)} and {@link #setBaseItemLabelsVisible(boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setItemLabelsVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the visibility of item labels for ALL series and, if requested,
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible a flag that controls whether or not the item labels are
                * visible (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean, boolean)} and {@link #setBaseItemLabelsVisible(Boolean,
                * boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelsVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets a flag that controls the visibility of the item labels for a series,
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesItemLabelsVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>BooleanUtilities</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>visible</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the visibility of the item labels for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesItemLabelsVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the visibility of item labels for a series and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the visible flag.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>itemLabelsVisibleList</name>.
                                    <name>setBoolean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base setting for item label visibility. A &lt;code&gt;null&lt;/code&gt;
                * result should be interpreted as equivalent to &lt;code&gt;Boolean.FALSE&lt;/code&gt;.
                *
                * @return A flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseItemLabelsVisible(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getBaseItemLabelsVisible</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <comment type="line">// this should have been defined as a boolean primitive, because</comment>
                    <comment type="line">// allowing null values is a nuisance...but it is part of the final</comment>
                    <comment type="line">// API now, so we'll have to support it.</comment>
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelsVisible</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base flag that controls whether or not item labels are visible,
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag.
                *
                * @see #getBaseItemLabelsVisible()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseItemLabelsVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name><name>BooleanUtilities</name>.
                                                    <name>valueOf</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>visible</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base setting for item label visibility and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; is permitted, and viewed
                * as equivalent to &lt;code&gt;Boolean.FALSE&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseItemLabelsVisible</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>visible</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base visibility for item labels and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; is permitted, and viewed
                * as equivalent to &lt;code&gt;Boolean.FALSE&lt;/code&gt;).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getBaseItemLabelsVisible()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelsVisible</name>
                            </name>
                            =
                            <name>visible</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">//// ITEM LABEL FONT //////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the font for an item label.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The font (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.
                                        <name>itemLabelFont</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name>getSeriesItemLabelFont</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>row</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>result</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <name><name>this</name>.
                                                        <name>baseItemLabelFont</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the font used for all item labels. This may be
                * &lt;code&gt;null&lt;/code&gt;, in which case the per series font settings will apply.
                *
                * @return The font (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesItemLabelFont(int)} and
                * {@link #getBaseItemLabelFont()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getItemLabelFont</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelFont</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label font for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. You can set
                * this to &lt;code&gt;null&lt;/code&gt; if you prefer to set the font on a per series
                * basis.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelFont(int,
                * Font)} and {@link #setBaseItemLabelFont(Font)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setItemLabelFont</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>font</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label font for ALL series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelFont(int,
                * Font, boolean)} and {@link #setBaseItemLabelFont(Font, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelFont</name>
                            </name>
                            =
                            <name>font</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the font for all the item labels in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The font (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesItemLabelFont(int, Font)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getSeriesItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>Font</name>)
                            <call>
                                <name><name>this</name>.<name>itemLabelFontList</name>.
                                    <name>get</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label font for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesItemLabelFont(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesItemLabelFont</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>font</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label font for a series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero based).
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getSeriesItemLabelFont(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>itemLabelFontList</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>font</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base item label font (this is used when no other font
                * setting is available).
                *
                * @return The font (&lt;code&gt;never&lt;/code&gt; null).
                *
                * @see #setBaseItemLabelFont(Font)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getBaseItemLabelFont</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelFont</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base item label font and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseItemLabelFont()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>font</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'font' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseItemLabelFont</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>font</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base item label font and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getBaseItemLabelFont()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelFont</name>
                            </name>
                            =
                            <name>font</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">//// ITEM LABEL PAINT ////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the paint used to draw an item label.
                *
                * @param row the row index (zero based).
                * @param column the column index (zero based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.
                                        <name>itemLabelPaint</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>result</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        =
                                        <call>
                                            <name>getSeriesItemLabelPaint</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>row</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>result</name>
                                            ==
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <expr_stmt>
                                                <expr>
                                                    <name>result</name>
                                                    =
                                                    <name><name>this</name>.
                                                        <name>baseItemLabelPaint</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </expr_stmt>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used for all item labels. This may be
                * &lt;code&gt;null&lt;/code&gt;, in which case the per series paint settings will
                * apply.
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesItemLabelPaint(int)}
                * and {@link #getBaseItemLabelPaint()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemLabelPaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelPaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label paint for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelPaint(int,
                * Paint)} and {@link #setBaseItemLabelPaint(Paint)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setItemLabelPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label paint for ALL series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelPaint(int,
                * Paint, boolean)} and {@link #setBaseItemLabelPaint(Paint, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelPaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the paint used to draw the item labels for a series.
                *
                * @param series the series index (zero based).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;code&gt;).
                *
                * @see #setSeriesItemLabelPaint(int, Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>itemLabelPaintList</name>.
                                    <name>getPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label paint for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series (zero based index).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesItemLabelPaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesItemLabelPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label paint for a series and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getSeriesItemLabelPaint(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>itemLabelPaintList</name>.
                                    <name>setPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base item label paint.
                *
                * @return The paint (never &lt;code&gt;null&lt;code&gt;).
                *
                * @see #setBaseItemLabelPaint(Paint)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBaseItemLabelPaint</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelPaint</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base item label paint and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseItemLabelPaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseItemLabelPaint</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>paint</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base item label paint and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners..
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @see #getBaseItemLabelPaint()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>paint</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'paint' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelPaint</name>
                            </name>
                            =
                            <name>paint</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">// POSITIVE ITEM LABEL POSITION...</comment>

            <comment type="javadoc">/**
                * Returns the item label position for positive values.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #getNegativeItemLabelPosition(int, int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getSeriesPositiveItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the item label position for positive values in ALL series.
                *
                * @return The item label position (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setPositiveItemLabelPosition(ItemLabelPosition)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #getSeriesPositiveItemLabelPosition(int)}
                * and {@link #getBasePositiveItemLabelPosition()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getPositiveItemLabelPosition</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>positiveItemLabelPosition</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label position for positive values in ALL series, and
                * sends a {@link RendererChangeEvent} to all registered listeners. You
                * need to set this to &lt;code&gt;null&lt;/code&gt; to expose the settings for
                * individual series.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getPositiveItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition)}
                * and {@link #setBasePositiveItemLabelPosition(ItemLabelPosition)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setPositiveItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the positive item label position for ALL series and (if requested)
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getPositiveItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition,
                * boolean)} and {@link #setBasePositiveItemLabelPosition(
                * ItemLabelPosition, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>positiveItemLabelPosition</name>
                            </name>
                            =
                            <name>position</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the item label position for all positive values in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>positiveItemLabelPosition</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>positiveItemLabelPosition</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the position table</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name> =
                            <init>
                                <expr>(<name>ItemLabelPosition</name>)
                                    <call>
                                        <name><name>this</name>.<name>positiveItemLabelPositionList</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>position</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>position</name>
                                        =
                                        <name><name>this</name>.
                                            <name>basePositiveItemLabelPosition</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>position</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label position for all positive values in a series and
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesPositiveItemLabelPosition(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesPositiveItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label position for all positive values in a series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getSeriesPositiveItemLabelPosition(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>positiveItemLabelPositionList</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base positive item label position.
                *
                * @return The position (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBasePositiveItemLabelPosition(ItemLabelPosition)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getBasePositiveItemLabelPosition</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>basePositiveItemLabelPosition</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base positive item label position.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBasePositiveItemLabelPosition()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBasePositiveItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base positive item label position and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify registered listeners?
                *
                * @see #getBasePositiveItemLabelPosition()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>position</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'position' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>basePositiveItemLabelPosition</name>
                            </name>
                            =
                            <name>position</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="line">// NEGATIVE ITEM LABEL POSITION...</comment>

            <comment type="javadoc">/**
                * Returns the item label position for negative values. This method can be
                * overridden to provide customisation of the item label position for
                * individual data items.
                *
                * @param row the row index (zero-based).
                * @param column the column (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #getPositiveItemLabelPosition(int, int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name>getSeriesNegativeItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>row</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the item label position for negative values in ALL series.
                *
                * @return The item label position (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setNegativeItemLabelPosition(ItemLabelPosition)
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #getSeriesNegativeItemLabelPosition(int)}
                * and {@link #getBaseNegativeItemLabelPosition()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getNegativeItemLabelPosition</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>negativeItemLabelPosition</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in ALL series, and
                * sends a {@link RendererChangeEvent} to all registered listeners. You
                * need to set this to &lt;code&gt;null&lt;/code&gt; to expose the settings for
                * individual series.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getNegativeItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition)}
                * and {@link #setBaseNegativeItemLabelPosition(ItemLabelPosition)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setNegativeItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in ALL series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getNegativeItemLabelPosition()
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition,
                * boolean)} and {@link #setBaseNegativeItemLabelPosition(
                * ItemLabelPosition, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>negativeItemLabelPosition</name>
                            </name>
                            =
                            <name>position</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the item label position for all negative values in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <comment type="line">// return the override, if there is one...</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>negativeItemLabelPosition</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>this</name>.
                                            <name>negativeItemLabelPosition</name>
                                        </name>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// otherwise look up the position list</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name> =
                            <init>
                                <expr>(<name>ItemLabelPosition</name>)
                                    <call>
                                        <name><name>this</name>.<name>negativeItemLabelPositionList</name>.
                                            <name>get</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>series</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>position</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>position</name>
                                        =
                                        <name><name>this</name>.
                                            <name>baseNegativeItemLabelPosition</name>
                                        </name>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>position</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesNegativeItemLabelPosition(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesNegativeItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in a series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @see #getSeriesNegativeItemLabelPosition(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>negativeItemLabelPositionList</name>.
                                    <name>set</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base item label position for negative values.
                *
                * @return The position (never &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setBaseNegativeItemLabelPosition(ItemLabelPosition)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getBaseNegativeItemLabelPosition</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseNegativeItemLabelPosition</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base item label position for negative values and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #getBaseNegativeItemLabelPosition()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseNegativeItemLabelPosition</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>position</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base negative item label position and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify registered listeners?
                *
                * @see #getBaseNegativeItemLabelPosition()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>position</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'position' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseNegativeItemLabelPosition</name>
                            </name>
                            =
                            <name>position</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the item label anchor offset.
                *
                * @return The offset.
                *
                * @see #setItemLabelAnchorOffset(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getItemLabelAnchorOffset</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelAnchorOffset</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the item label anchor offset.
                *
                * @param offset the offset.
                *
                * @see #getItemLabelAnchorOffset()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelAnchorOffset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>offset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelAnchorOffset</name>
                            </name>
                            =
                            <name>offset</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>fireChangeEvent</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a boolean that indicates whether or not the specified item
                * should have a chart entity created for it.
                *
                * @param series the series index.
                * @param item the item index.
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getItemCreateEntity</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>createEntities</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>this</name>.<name>createEntities</name>.
                                                <name>booleanValue</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>Boolean</name>
                                        </type>
                                        <name>b</name> =
                                        <init>
                                            <expr>
                                                <call>
                                                    <name>getSeriesCreateEntities</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>series</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <if>if
                                    <condition>(
                                        <expr>
                                            <name>b</name>
                                            !=
                                            <name>null</name>
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <call>
                                                        <name><name>b</name>.
                                                            <name>booleanValue</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </then>
                                    <else>else
                                        <block>{
                                            <return>return
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>baseCreateEntities</name>
                                                    </name>
                                                </expr>
                                                ;
                                            </return>
                                            }
                                        </block>
                                    </else>
                                </if>
                                }
                            </block>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether or not chart entities are created
                * for the items in ALL series. This flag overrides the per series and
                * default settings - you must set it to &lt;code&gt;null&lt;/code&gt; if you want the
                * other settings to apply.
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesCreateEntities(int)}
                * and {@link #getBaseCreateEntities()}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getCreateEntities</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>createEntities</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not chart entities are created
                * for the items in ALL series, and sends a {@link RendererChangeEvent} to
                * all registered listeners. This flag overrides the per series and
                * default settings - you must set it to &lt;code&gt;null&lt;/code&gt; if you want the
                * other settings to apply.
                *
                * @param create the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesCreateEntities(int,
                * Boolean)} and {@link #setBaseCreateEntities(boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setCreateEntities</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>create</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setCreateEntities</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>create</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether or not chart entities are created
                * for the items in ALL series, and sends a {@link RendererChangeEvent} to
                * all registered listeners. This flag overrides the per series and
                * default settings - you must set it to &lt;code&gt;null&lt;/code&gt; if you want the
                * other settings to apply.
                *
                * @param create the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelFont(int,
                * Font, boolean)} and {@link #setBaseItemLabelFont(Font, boolean)}.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setCreateEntities</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>create</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>createEntities</name>
                            </name>
                            =
                            <name>create</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the flag that controls whether entities are created for a
                * series.
                *
                * @param series the series index (zero-based).
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @see #setSeriesCreateEntities(int, Boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesCreateEntities</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>this</name>.<name>createEntitiesList</name>.
                                    <name>getBoolean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether entities are created for a series,
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param create the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @see #getSeriesCreateEntities(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesCreateEntities</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>create</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setSeriesCreateEntities</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>create</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the flag that controls whether entities are created for a series
                * and, if requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index.
                * @param create the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @see #getSeriesCreateEntities(int)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesCreateEntities</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>create</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>createEntitiesList</name>.
                                    <name>setBoolean</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>series</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>create</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the base visibility for all series.
                *
                * @return The base visibility.
                *
                * @see #setBaseCreateEntities(boolean)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBaseCreateEntities</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>baseCreateEntities</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base flag that controls whether entities are created
                * for a series, and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param create the flag.
                *
                * @see #getBaseCreateEntities()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseCreateEntities</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>create</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <comment type="line">// defer argument checking...</comment>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>setBaseCreateEntities</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>create</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>true</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the base flag that controls whether entities are created and,
                * if requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param create the visibility.
                * @param notify notify listeners?
                *
                * @see #getBaseCreateEntities()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseCreateEntities</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>create</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseCreateEntities</name>
                            </name>
                            =
                            <name>create</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>notify</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>fireChangeEvent</name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/** The adjacent offset. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>double</name>
                    </type>
                    <name>ADJ</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>Math</name>.
                                    <name>cos</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Math</name>.
                                                <name>PI</name>
                                            </name>
                                            / 6.0
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The opposite offset. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>double</name>
                    </type>
                    <name>OPP</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>Math</name>.
                                    <name>sin</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>Math</name>.
                                                <name>PI</name>
                                            </name>
                                            / 6.0
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Calculates the item label anchor point.
                *
                * @param anchor the anchor.
                * @param x the x coordinate.
                * @param y the y coordinate.
                * @param orientation the plot orientation.
                *
                * @return The anchor point (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Point2D</name>
                </type>
                <name>calculateLabelAnchorPoint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelAnchor</name>
                            </type>
                            <name>anchor</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotOrientation</name>
                            </type>
                            <name>orientation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Point2D</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>anchor</name>
                                ==
                                <name><name>ItemLabelAnchor</name>.
                                    <name>CENTER</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>result</name>
                                        = new
                                        <call>
                                            <name><name>Point2D</name>.
                                                <name>Double</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>anchor</name>
                                        ==
                                        <name><name>ItemLabelAnchor</name>.
                                            <name>INSIDE1</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <name>result</name>
                                                = new
                                                <call>
                                                    <name><name>Point2D</name>.
                                                        <name>Double</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>x</name>
                                                                + <name>OPP</name> *
                                                                <name><name>this</name>.
                                                                    <name>itemLabelAnchorOffset</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>y</name>
                                                                - <name>ADJ</name> *
                                                                <name><name>this</name>.
                                                                    <name>itemLabelAnchorOffset</name>
                                                                </name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <name>anchor</name>
                                                ==
                                                <name><name>ItemLabelAnchor</name>.
                                                    <name>INSIDE2</name>
                                                </name>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <expr_stmt>
                                                    <expr>
                                                        <name>result</name>
                                                        = new
                                                        <call>
                                                            <name><name>Point2D</name>.
                                                                <name>Double</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name>x</name>
                                                                        + <name>ADJ</name> *
                                                                        <name><name>this</name>.
                                                                            <name>itemLabelAnchorOffset</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                ,
                                                                <argument>
                                                                    <expr>
                                                                        <name>y</name>
                                                                        - <name>OPP</name> *
                                                                        <name><name>this</name>.
                                                                            <name>itemLabelAnchorOffset</name>
                                                                        </name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    ;
                                                </expr_stmt>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>anchor</name>
                                                        ==
                                                        <name><name>ItemLabelAnchor</name>.
                                                            <name>INSIDE3</name>
                                                        </name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>result</name>
                                                                = new
                                                                <call>
                                                                    <name><name>Point2D</name>.
                                                                        <name>Double</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name>x</name>
                                                                                +
                                                                                <name><name>this</name>.
                                                                                    <name>itemLabelAnchorOffset</name>
                                                                                </name>
                                                                            </expr>
                                                                        </argument>
                                                                        ,
                                                                        <argument>
                                                                            <expr>
                                                                                <name>y</name>
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <name>anchor</name>
                                                                ==
                                                                <name><name>ItemLabelAnchor</name>.
                                                                    <name>INSIDE4</name>
                                                                </name>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <expr_stmt>
                                                                    <expr>
                                                                        <name>result</name>
                                                                        = new
                                                                        <call>
                                                                            <name><name>Point2D</name>.
                                                                                <name>Double</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>x</name>
                                                                                        + <name>ADJ</name> *
                                                                                        <name><name>this</name>.
                                                                                            <name>
                                                                                                itemLabelAnchorOffset
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                ,
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name>y</name>
                                                                                        + <name>OPP</name> *
                                                                                        <name><name>this</name>.
                                                                                            <name>
                                                                                                itemLabelAnchorOffset
                                                                                            </name>
                                                                                        </name>
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    ;
                                                                </expr_stmt>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <name>anchor</name>
                                                                        ==
                                                                        <name><name>ItemLabelAnchor</name>.
                                                                            <name>INSIDE5</name>
                                                                        </name>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <expr_stmt>
                                                                            <expr>
                                                                                <name>result</name>
                                                                                = new
                                                                                <call>
                                                                                    <name><name>Point2D</name>.
                                                                                        <name>Double</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>x</name>
                                                                                                + <name>OPP</name> *
                                                                                                <name><name>this</name>.
                                                                                                    <name>
                                                                                                        itemLabelAnchorOffset
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        ,
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name>y</name>
                                                                                                + <name>ADJ</name> *
                                                                                                <name><name>this</name>.
                                                                                                    <name>
                                                                                                        itemLabelAnchorOffset
                                                                                                    </name>
                                                                                                </name>
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            ;
                                                                        </expr_stmt>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <name>anchor</name>
                                                                                ==
                                                                                <name><name>ItemLabelAnchor</name>.
                                                                                    <name>INSIDE6</name>
                                                                                </name>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <expr_stmt>
                                                                                    <expr>
                                                                                        <name>result</name>
                                                                                        = new
                                                                                        <call>
                                                                                            <name><name>Point2D</name>.
                                                                                                <name>Double</name>
                                                                                            </name>
                                                                                            <argument_list>(
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>x</name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                ,
                                                                                                <argument>
                                                                                                    <expr>
                                                                                                        <name>y</name>
                                                                                                        +
                                                                                                        <name><name>
                                                                                                            this</name>.
                                                                                                            <name>
                                                                                                                itemLabelAnchorOffset
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                </argument>
                                                                                                )
                                                                                            </argument_list>
                                                                                        </call>
                                                                                    </expr>
                                                                                    ;
                                                                                </expr_stmt>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <if>if
                                                                                <condition>(
                                                                                    <expr>
                                                                                        <name>anchor</name>
                                                                                        ==
                                                                                        <name><name>
                                                                                            ItemLabelAnchor</name>.
                                                                                            <name>INSIDE7</name>
                                                                                        </name>
                                                                                    </expr>
                                                                                    )
                                                                                </condition>
                                                                                <then>
                                                                                    <block>{
                                                                                        <expr_stmt>
                                                                                            <expr>
                                                                                                <name>result</name>
                                                                                                = new
                                                                                                <call>
                                                                                                    <name><name>
                                                                                                        Point2D</name>.
                                                                                                        <name>Double
                                                                                                        </name>
                                                                                                    </name>
                                                                                                    <argument_list>(
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    x
                                                                                                                </name>
                                                                                                                - <name>
                                                                                                                OPP
                                                                                                            </name> *
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        this</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        itemLabelAnchorOffset
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        ,
                                                                                                        <argument>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    y
                                                                                                                </name>
                                                                                                                + <name>
                                                                                                                ADJ
                                                                                                            </name> *
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        this</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        itemLabelAnchorOffset
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                        </argument>
                                                                                                        )
                                                                                                    </argument_list>
                                                                                                </call>
                                                                                            </expr>
                                                                                            ;
                                                                                        </expr_stmt>
                                                                                        }
                                                                                    </block>
                                                                                </then>
                                                                                <else>else
                                                                                    <if>if
                                                                                        <condition>(
                                                                                            <expr>
                                                                                                <name>anchor</name>
                                                                                                ==
                                                                                                <name><name>
                                                                                                    ItemLabelAnchor</name>
                                                                                                    .
                                                                                                    <name>INSIDE8</name>
                                                                                                </name>
                                                                                            </expr>
                                                                                            )
                                                                                        </condition>
                                                                                        <then>
                                                                                            <block>{
                                                                                                <expr_stmt>
                                                                                                    <expr>
                                                                                                        <name>result
                                                                                                        </name>
                                                                                                        = new
                                                                                                        <call>
                                                                                                            <name><name>
                                                                                                                Point2D</name>
                                                                                                                .
                                                                                                                <name>
                                                                                                                    Double
                                                                                                                </name>
                                                                                                            </name>
                                                                                                            <argument_list>
                                                                                                                (
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            x
                                                                                                                        </name>
                                                                                                                        - <name>
                                                                                                                        ADJ
                                                                                                                    </name> *
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                this</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                itemLabelAnchorOffset
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                ,
                                                                                                                <argument>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            y
                                                                                                                        </name>
                                                                                                                        + <name>
                                                                                                                        OPP
                                                                                                                    </name> *
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                this</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                itemLabelAnchorOffset
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                </argument>
                                                                                                                )
                                                                                                            </argument_list>
                                                                                                        </call>
                                                                                                    </expr>
                                                                                                    ;
                                                                                                </expr_stmt>
                                                                                                }
                                                                                            </block>
                                                                                        </then>
                                                                                        <else>else
                                                                                            <if>if
                                                                                                <condition>(
                                                                                                    <expr>
                                                                                                        <name>anchor
                                                                                                        </name>
                                                                                                        ==
                                                                                                        <name><name>
                                                                                                            ItemLabelAnchor</name>
                                                                                                            .
                                                                                                            <name>
                                                                                                                INSIDE9
                                                                                                            </name>
                                                                                                        </name>
                                                                                                    </expr>
                                                                                                    )
                                                                                                </condition>
                                                                                                <then>
                                                                                                    <block>{
                                                                                                        <expr_stmt>
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    result
                                                                                                                </name>
                                                                                                                = new
                                                                                                                <call>
                                                                                                                    <name>
                                                                                                                        <name>
                                                                                                                            Point2D</name>
                                                                                                                        .
                                                                                                                        <name>
                                                                                                                            Double
                                                                                                                        </name>
                                                                                                                    </name>
                                                                                                                    <argument_list>
                                                                                                                        (
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    x
                                                                                                                                </name>
                                                                                                                                -
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        this</name>
                                                                                                                                    .
                                                                                                                                    <name>
                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        ,
                                                                                                                        <argument>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    y
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                        </argument>
                                                                                                                        )
                                                                                                                    </argument_list>
                                                                                                                </call>
                                                                                                            </expr>
                                                                                                            ;
                                                                                                        </expr_stmt>
                                                                                                        }
                                                                                                    </block>
                                                                                                </then>
                                                                                                <else>else
                                                                                                    <if>if
                                                                                                        <condition>(
                                                                                                            <expr>
                                                                                                                <name>
                                                                                                                    anchor
                                                                                                                </name>
                                                                                                                ==
                                                                                                                <name>
                                                                                                                    <name>
                                                                                                                        ItemLabelAnchor</name>
                                                                                                                    .
                                                                                                                    <name>
                                                                                                                        INSIDE10
                                                                                                                    </name>
                                                                                                                </name>
                                                                                                            </expr>
                                                                                                            )
                                                                                                        </condition>
                                                                                                        <then>
                                                                                                            <block>{
                                                                                                                <expr_stmt>
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            result
                                                                                                                        </name>
                                                                                                                        =
                                                                                                                        new
                                                                                                                        <call>
                                                                                                                            <name>
                                                                                                                                <name>
                                                                                                                                    Point2D</name>
                                                                                                                                .
                                                                                                                                <name>
                                                                                                                                    Double
                                                                                                                                </name>
                                                                                                                            </name>
                                                                                                                            <argument_list>
                                                                                                                                (
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            x
                                                                                                                                        </name>
                                                                                                                                        - <name>
                                                                                                                                        ADJ
                                                                                                                                    </name> *
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                this</name>
                                                                                                                                            .
                                                                                                                                            <name>
                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                ,
                                                                                                                                <argument>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            y
                                                                                                                                        </name>
                                                                                                                                        - <name>
                                                                                                                                        OPP
                                                                                                                                    </name> *
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                this</name>
                                                                                                                                            .
                                                                                                                                            <name>
                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                </argument>
                                                                                                                                )
                                                                                                                            </argument_list>
                                                                                                                        </call>
                                                                                                                    </expr>
                                                                                                                    ;
                                                                                                                </expr_stmt>
                                                                                                                }
                                                                                                            </block>
                                                                                                        </then>
                                                                                                        <else>else
                                                                                                            <if>if
                                                                                                                <condition>
                                                                                                                    (
                                                                                                                    <expr>
                                                                                                                        <name>
                                                                                                                            anchor
                                                                                                                        </name>
                                                                                                                        ==
                                                                                                                        <name>
                                                                                                                            <name>
                                                                                                                                ItemLabelAnchor</name>
                                                                                                                            .
                                                                                                                            <name>
                                                                                                                                INSIDE11
                                                                                                                            </name>
                                                                                                                        </name>
                                                                                                                    </expr>
                                                                                                                    )
                                                                                                                </condition>
                                                                                                                <then>
                                                                                                                    <block>
                                                                                                                        {
                                                                                                                        <expr_stmt>
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    result
                                                                                                                                </name>
                                                                                                                                =
                                                                                                                                new
                                                                                                                                <call>
                                                                                                                                    <name>
                                                                                                                                        <name>
                                                                                                                                            Point2D</name>
                                                                                                                                        .
                                                                                                                                        <name>
                                                                                                                                            Double
                                                                                                                                        </name>
                                                                                                                                    </name>
                                                                                                                                    <argument_list>
                                                                                                                                        (
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    x
                                                                                                                                                </name>
                                                                                                                                                - <name>
                                                                                                                                                OPP
                                                                                                                                            </name> *
                                                                                                                                                <name>
                                                                                                                                                    <name>
                                                                                                                                                        this</name>
                                                                                                                                                    .
                                                                                                                                                    <name>
                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                    </name>
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        ,
                                                                                                                                        <argument>
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    y
                                                                                                                                                </name>
                                                                                                                                                - <name>
                                                                                                                                                ADJ
                                                                                                                                            </name> *
                                                                                                                                                <name>
                                                                                                                                                    <name>
                                                                                                                                                        this</name>
                                                                                                                                                    .
                                                                                                                                                    <name>
                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                    </name>
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                        </argument>
                                                                                                                                        )
                                                                                                                                    </argument_list>
                                                                                                                                </call>
                                                                                                                            </expr>
                                                                                                                            ;
                                                                                                                        </expr_stmt>
                                                                                                                        }
                                                                                                                    </block>
                                                                                                                </then>
                                                                                                                <else>
                                                                                                                    else
                                                                                                                    <if>
                                                                                                                        if
                                                                                                                        <condition>
                                                                                                                            (
                                                                                                                            <expr>
                                                                                                                                <name>
                                                                                                                                    anchor
                                                                                                                                </name>
                                                                                                                                ==
                                                                                                                                <name>
                                                                                                                                    <name>
                                                                                                                                        ItemLabelAnchor</name>
                                                                                                                                    .
                                                                                                                                    <name>
                                                                                                                                        INSIDE12
                                                                                                                                    </name>
                                                                                                                                </name>
                                                                                                                            </expr>
                                                                                                                            )
                                                                                                                        </condition>
                                                                                                                        <then>
                                                                                                                            <block>
                                                                                                                                {
                                                                                                                                <expr_stmt>
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            result
                                                                                                                                        </name>
                                                                                                                                        =
                                                                                                                                        new
                                                                                                                                        <call>
                                                                                                                                            <name>
                                                                                                                                                <name>
                                                                                                                                                    Point2D</name>
                                                                                                                                                .
                                                                                                                                                <name>
                                                                                                                                                    Double
                                                                                                                                                </name>
                                                                                                                                            </name>
                                                                                                                                            <argument_list>
                                                                                                                                                (
                                                                                                                                                <argument>
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            x
                                                                                                                                                        </name>
                                                                                                                                                    </expr>
                                                                                                                                                </argument>
                                                                                                                                                ,
                                                                                                                                                <argument>
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            y
                                                                                                                                                        </name>
                                                                                                                                                        -
                                                                                                                                                        <name>
                                                                                                                                                            <name>
                                                                                                                                                                this</name>
                                                                                                                                                            .
                                                                                                                                                            <name>
                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                            </name>
                                                                                                                                                        </name>
                                                                                                                                                    </expr>
                                                                                                                                                </argument>
                                                                                                                                                )
                                                                                                                                            </argument_list>
                                                                                                                                        </call>
                                                                                                                                    </expr>
                                                                                                                                    ;
                                                                                                                                </expr_stmt>
                                                                                                                                }
                                                                                                                            </block>
                                                                                                                        </then>
                                                                                                                        <else>
                                                                                                                            else
                                                                                                                            <if>
                                                                                                                                if
                                                                                                                                <condition>
                                                                                                                                    (
                                                                                                                                    <expr>
                                                                                                                                        <name>
                                                                                                                                            anchor
                                                                                                                                        </name>
                                                                                                                                        ==
                                                                                                                                        <name>
                                                                                                                                            <name>
                                                                                                                                                ItemLabelAnchor</name>
                                                                                                                                            .
                                                                                                                                            <name>
                                                                                                                                                OUTSIDE1
                                                                                                                                            </name>
                                                                                                                                        </name>
                                                                                                                                    </expr>
                                                                                                                                    )
                                                                                                                                </condition>
                                                                                                                                <then>
                                                                                                                                    <block>
                                                                                                                                        {
                                                                                                                                        <expr_stmt>
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    result
                                                                                                                                                </name>
                                                                                                                                                =
                                                                                                                                                new
                                                                                                                                                <call>
                                                                                                                                                    <name>
                                                                                                                                                        <name>
                                                                                                                                                            Point2D</name>
                                                                                                                                                        .
                                                                                                                                                        <name>
                                                                                                                                                            Double
                                                                                                                                                        </name>
                                                                                                                                                    </name>
                                                                                                                                                    <argument_list>
                                                                                                                                                        (
                                                                                                                                                        <argument>
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    x
                                                                                                                                                                </name>
                                                                                                                                                                +
                                                                                                                                                                2.0
                                                                                                                                                                * <name>
                                                                                                                                                                OPP
                                                                                                                                                            </name> *
                                                                                                                                                                <name>
                                                                                                                                                                    <name>
                                                                                                                                                                        this</name>
                                                                                                                                                                    .
                                                                                                                                                                    <name>
                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                    </name>
                                                                                                                                                                </name>
                                                                                                                                                            </expr>
                                                                                                                                                        </argument>
                                                                                                                                                        ,
                                                                                                                                                        <argument>
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    y
                                                                                                                                                                </name>
                                                                                                                                                                -
                                                                                                                                                                2.0
                                                                                                                                                                * <name>
                                                                                                                                                                ADJ
                                                                                                                                                            </name> *
                                                                                                                                                                <name>
                                                                                                                                                                    <name>
                                                                                                                                                                        this</name>
                                                                                                                                                                    .
                                                                                                                                                                    <name>
                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                    </name>
                                                                                                                                                                </name>
                                                                                                                                                            </expr>
                                                                                                                                                        </argument>
                                                                                                                                                        )
                                                                                                                                                    </argument_list>
                                                                                                                                                </call>
                                                                                                                                            </expr>
                                                                                                                                            ;
                                                                                                                                        </expr_stmt>
                                                                                                                                        }
                                                                                                                                    </block>
                                                                                                                                </then>
                                                                                                                                <else>
                                                                                                                                    else
                                                                                                                                    <if>
                                                                                                                                        if
                                                                                                                                        <condition>
                                                                                                                                            (
                                                                                                                                            <expr>
                                                                                                                                                <name>
                                                                                                                                                    anchor
                                                                                                                                                </name>
                                                                                                                                                ==
                                                                                                                                                <name>
                                                                                                                                                    <name>
                                                                                                                                                        ItemLabelAnchor</name>
                                                                                                                                                    .
                                                                                                                                                    <name>
                                                                                                                                                        OUTSIDE2
                                                                                                                                                    </name>
                                                                                                                                                </name>
                                                                                                                                            </expr>
                                                                                                                                            )
                                                                                                                                        </condition>
                                                                                                                                        <then>
                                                                                                                                            <block>
                                                                                                                                                {
                                                                                                                                                <expr_stmt>
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            result
                                                                                                                                                        </name>
                                                                                                                                                        =
                                                                                                                                                        new
                                                                                                                                                        <call>
                                                                                                                                                            <name>
                                                                                                                                                                <name>
                                                                                                                                                                    Point2D</name>
                                                                                                                                                                .
                                                                                                                                                                <name>
                                                                                                                                                                    Double
                                                                                                                                                                </name>
                                                                                                                                                            </name>
                                                                                                                                                            <argument_list>
                                                                                                                                                                (
                                                                                                                                                                <argument>
                                                                                                                                                                    <expr>
                                                                                                                                                                        <name>
                                                                                                                                                                            x
                                                                                                                                                                        </name>
                                                                                                                                                                        +
                                                                                                                                                                        2.0
                                                                                                                                                                        * <name>
                                                                                                                                                                        ADJ
                                                                                                                                                                    </name> *
                                                                                                                                                                        <name>
                                                                                                                                                                            <name>
                                                                                                                                                                                this</name>
                                                                                                                                                                            .
                                                                                                                                                                            <name>
                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                            </name>
                                                                                                                                                                        </name>
                                                                                                                                                                    </expr>
                                                                                                                                                                </argument>
                                                                                                                                                                ,
                                                                                                                                                                <argument>
                                                                                                                                                                    <expr>
                                                                                                                                                                        <name>
                                                                                                                                                                            y
                                                                                                                                                                        </name>
                                                                                                                                                                        -
                                                                                                                                                                        2.0
                                                                                                                                                                        * <name>
                                                                                                                                                                        OPP
                                                                                                                                                                    </name> *
                                                                                                                                                                        <name>
                                                                                                                                                                            <name>
                                                                                                                                                                                this</name>
                                                                                                                                                                            .
                                                                                                                                                                            <name>
                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                            </name>
                                                                                                                                                                        </name>
                                                                                                                                                                    </expr>
                                                                                                                                                                </argument>
                                                                                                                                                                )
                                                                                                                                                            </argument_list>
                                                                                                                                                        </call>
                                                                                                                                                    </expr>
                                                                                                                                                    ;
                                                                                                                                                </expr_stmt>
                                                                                                                                                }
                                                                                                                                            </block>
                                                                                                                                        </then>
                                                                                                                                        <else>
                                                                                                                                            else
                                                                                                                                            <if>
                                                                                                                                                if
                                                                                                                                                <condition>
                                                                                                                                                    (
                                                                                                                                                    <expr>
                                                                                                                                                        <name>
                                                                                                                                                            anchor
                                                                                                                                                        </name>
                                                                                                                                                        ==
                                                                                                                                                        <name>
                                                                                                                                                            <name>
                                                                                                                                                                ItemLabelAnchor</name>
                                                                                                                                                            .
                                                                                                                                                            <name>
                                                                                                                                                                OUTSIDE3
                                                                                                                                                            </name>
                                                                                                                                                        </name>
                                                                                                                                                    </expr>
                                                                                                                                                    )
                                                                                                                                                </condition>
                                                                                                                                                <then>
                                                                                                                                                    <block>
                                                                                                                                                        {
                                                                                                                                                        <expr_stmt>
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    result
                                                                                                                                                                </name>
                                                                                                                                                                =
                                                                                                                                                                new
                                                                                                                                                                <call>
                                                                                                                                                                    <name>
                                                                                                                                                                        <name>
                                                                                                                                                                            Point2D</name>
                                                                                                                                                                        .
                                                                                                                                                                        <name>
                                                                                                                                                                            Double
                                                                                                                                                                        </name>
                                                                                                                                                                    </name>
                                                                                                                                                                    <argument_list>
                                                                                                                                                                        (
                                                                                                                                                                        <argument>
                                                                                                                                                                            <expr>
                                                                                                                                                                                <name>
                                                                                                                                                                                    x
                                                                                                                                                                                </name>
                                                                                                                                                                                +
                                                                                                                                                                                2.0
                                                                                                                                                                                *
                                                                                                                                                                                <name>
                                                                                                                                                                                    <name>
                                                                                                                                                                                        this</name>
                                                                                                                                                                                    .
                                                                                                                                                                                    <name>
                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                    </name>
                                                                                                                                                                                </name>
                                                                                                                                                                            </expr>
                                                                                                                                                                        </argument>
                                                                                                                                                                        ,
                                                                                                                                                                        <argument>
                                                                                                                                                                            <expr>
                                                                                                                                                                                <name>
                                                                                                                                                                                    y
                                                                                                                                                                                </name>
                                                                                                                                                                            </expr>
                                                                                                                                                                        </argument>
                                                                                                                                                                        )
                                                                                                                                                                    </argument_list>
                                                                                                                                                                </call>
                                                                                                                                                            </expr>
                                                                                                                                                            ;
                                                                                                                                                        </expr_stmt>
                                                                                                                                                        }
                                                                                                                                                    </block>
                                                                                                                                                </then>
                                                                                                                                                <else>
                                                                                                                                                    else
                                                                                                                                                    <if>
                                                                                                                                                        if
                                                                                                                                                        <condition>
                                                                                                                                                            (
                                                                                                                                                            <expr>
                                                                                                                                                                <name>
                                                                                                                                                                    anchor
                                                                                                                                                                </name>
                                                                                                                                                                ==
                                                                                                                                                                <name>
                                                                                                                                                                    <name>
                                                                                                                                                                        ItemLabelAnchor</name>
                                                                                                                                                                    .
                                                                                                                                                                    <name>
                                                                                                                                                                        OUTSIDE4
                                                                                                                                                                    </name>
                                                                                                                                                                </name>
                                                                                                                                                            </expr>
                                                                                                                                                            )
                                                                                                                                                        </condition>
                                                                                                                                                        <then>
                                                                                                                                                            <block>
                                                                                                                                                                {
                                                                                                                                                                <expr_stmt>
                                                                                                                                                                    <expr>
                                                                                                                                                                        <name>
                                                                                                                                                                            result
                                                                                                                                                                        </name>
                                                                                                                                                                        =
                                                                                                                                                                        new
                                                                                                                                                                        <call>
                                                                                                                                                                            <name>
                                                                                                                                                                                <name>
                                                                                                                                                                                    Point2D</name>
                                                                                                                                                                                .
                                                                                                                                                                                <name>
                                                                                                                                                                                    Double
                                                                                                                                                                                </name>
                                                                                                                                                                            </name>
                                                                                                                                                                            <argument_list>
                                                                                                                                                                                (
                                                                                                                                                                                <argument>
                                                                                                                                                                                    <expr>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            x
                                                                                                                                                                                        </name>
                                                                                                                                                                                        +
                                                                                                                                                                                        2.0
                                                                                                                                                                                        * <name>
                                                                                                                                                                                        ADJ
                                                                                                                                                                                    </name> *
                                                                                                                                                                                        <name>
                                                                                                                                                                                            <name>
                                                                                                                                                                                                this</name>
                                                                                                                                                                                            .
                                                                                                                                                                                            <name>
                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                            </name>
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </expr>
                                                                                                                                                                                </argument>
                                                                                                                                                                                ,
                                                                                                                                                                                <argument>
                                                                                                                                                                                    <expr>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            y
                                                                                                                                                                                        </name>
                                                                                                                                                                                        +
                                                                                                                                                                                        2.0
                                                                                                                                                                                        * <name>
                                                                                                                                                                                        OPP
                                                                                                                                                                                    </name> *
                                                                                                                                                                                        <name>
                                                                                                                                                                                            <name>
                                                                                                                                                                                                this</name>
                                                                                                                                                                                            .
                                                                                                                                                                                            <name>
                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                            </name>
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </expr>
                                                                                                                                                                                </argument>
                                                                                                                                                                                )
                                                                                                                                                                            </argument_list>
                                                                                                                                                                        </call>
                                                                                                                                                                    </expr>
                                                                                                                                                                    ;
                                                                                                                                                                </expr_stmt>
                                                                                                                                                                }
                                                                                                                                                            </block>
                                                                                                                                                        </then>
                                                                                                                                                        <else>
                                                                                                                                                            else
                                                                                                                                                            <if>
                                                                                                                                                                if
                                                                                                                                                                <condition>
                                                                                                                                                                    (
                                                                                                                                                                    <expr>
                                                                                                                                                                        <name>
                                                                                                                                                                            anchor
                                                                                                                                                                        </name>
                                                                                                                                                                        ==
                                                                                                                                                                        <name>
                                                                                                                                                                            <name>
                                                                                                                                                                                ItemLabelAnchor</name>
                                                                                                                                                                            .
                                                                                                                                                                            <name>
                                                                                                                                                                                OUTSIDE5
                                                                                                                                                                            </name>
                                                                                                                                                                        </name>
                                                                                                                                                                    </expr>
                                                                                                                                                                    )
                                                                                                                                                                </condition>
                                                                                                                                                                <then>
                                                                                                                                                                    <block>
                                                                                                                                                                        {
                                                                                                                                                                        <expr_stmt>
                                                                                                                                                                            <expr>
                                                                                                                                                                                <name>
                                                                                                                                                                                    result
                                                                                                                                                                                </name>
                                                                                                                                                                                =
                                                                                                                                                                                new
                                                                                                                                                                                <call>
                                                                                                                                                                                    <name>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            Point2D</name>
                                                                                                                                                                                        .
                                                                                                                                                                                        <name>
                                                                                                                                                                                            Double
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </name>
                                                                                                                                                                                    <argument_list>
                                                                                                                                                                                        (
                                                                                                                                                                                        <argument>
                                                                                                                                                                                            <expr>
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    x
                                                                                                                                                                                                </name>
                                                                                                                                                                                                +
                                                                                                                                                                                                2.0
                                                                                                                                                                                                * <name>
                                                                                                                                                                                                OPP
                                                                                                                                                                                            </name> *
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        this</name>
                                                                                                                                                                                                    .
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                                    </name>
                                                                                                                                                                                                </name>
                                                                                                                                                                                            </expr>
                                                                                                                                                                                        </argument>
                                                                                                                                                                                        ,
                                                                                                                                                                                        <argument>
                                                                                                                                                                                            <expr>
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    y
                                                                                                                                                                                                </name>
                                                                                                                                                                                                +
                                                                                                                                                                                                2.0
                                                                                                                                                                                                * <name>
                                                                                                                                                                                                ADJ
                                                                                                                                                                                            </name> *
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        this</name>
                                                                                                                                                                                                    .
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                                    </name>
                                                                                                                                                                                                </name>
                                                                                                                                                                                            </expr>
                                                                                                                                                                                        </argument>
                                                                                                                                                                                        )
                                                                                                                                                                                    </argument_list>
                                                                                                                                                                                </call>
                                                                                                                                                                            </expr>
                                                                                                                                                                            ;
                                                                                                                                                                        </expr_stmt>
                                                                                                                                                                        }
                                                                                                                                                                    </block>
                                                                                                                                                                </then>
                                                                                                                                                                <else>
                                                                                                                                                                    else
                                                                                                                                                                    <if>
                                                                                                                                                                        if
                                                                                                                                                                        <condition>
                                                                                                                                                                            (
                                                                                                                                                                            <expr>
                                                                                                                                                                                <name>
                                                                                                                                                                                    anchor
                                                                                                                                                                                </name>
                                                                                                                                                                                ==
                                                                                                                                                                                <name>
                                                                                                                                                                                    <name>
                                                                                                                                                                                        ItemLabelAnchor</name>
                                                                                                                                                                                    .
                                                                                                                                                                                    <name>
                                                                                                                                                                                        OUTSIDE6
                                                                                                                                                                                    </name>
                                                                                                                                                                                </name>
                                                                                                                                                                            </expr>
                                                                                                                                                                            )
                                                                                                                                                                        </condition>
                                                                                                                                                                        <then>
                                                                                                                                                                            <block>
                                                                                                                                                                                {
                                                                                                                                                                                <expr_stmt>
                                                                                                                                                                                    <expr>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            result
                                                                                                                                                                                        </name>
                                                                                                                                                                                        =
                                                                                                                                                                                        new
                                                                                                                                                                                        <call>
                                                                                                                                                                                            <name>
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    Point2D</name>
                                                                                                                                                                                                .
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    Double
                                                                                                                                                                                                </name>
                                                                                                                                                                                            </name>
                                                                                                                                                                                            <argument_list>
                                                                                                                                                                                                (
                                                                                                                                                                                                <argument>
                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            x
                                                                                                                                                                                                        </name>
                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                </argument>
                                                                                                                                                                                                ,
                                                                                                                                                                                                <argument>
                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            y
                                                                                                                                                                                                        </name>
                                                                                                                                                                                                        +
                                                                                                                                                                                                        2.0
                                                                                                                                                                                                        *
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                this</name>
                                                                                                                                                                                                            .
                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                                            </name>
                                                                                                                                                                                                        </name>
                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                </argument>
                                                                                                                                                                                                )
                                                                                                                                                                                            </argument_list>
                                                                                                                                                                                        </call>
                                                                                                                                                                                    </expr>
                                                                                                                                                                                    ;
                                                                                                                                                                                </expr_stmt>
                                                                                                                                                                                }
                                                                                                                                                                            </block>
                                                                                                                                                                        </then>
                                                                                                                                                                        <else>
                                                                                                                                                                            else
                                                                                                                                                                            <if>
                                                                                                                                                                                if
                                                                                                                                                                                <condition>
                                                                                                                                                                                    (
                                                                                                                                                                                    <expr>
                                                                                                                                                                                        <name>
                                                                                                                                                                                            anchor
                                                                                                                                                                                        </name>
                                                                                                                                                                                        ==
                                                                                                                                                                                        <name>
                                                                                                                                                                                            <name>
                                                                                                                                                                                                ItemLabelAnchor</name>
                                                                                                                                                                                            .
                                                                                                                                                                                            <name>
                                                                                                                                                                                                OUTSIDE7
                                                                                                                                                                                            </name>
                                                                                                                                                                                        </name>
                                                                                                                                                                                    </expr>
                                                                                                                                                                                    )
                                                                                                                                                                                </condition>
                                                                                                                                                                                <then>
                                                                                                                                                                                    <block>
                                                                                                                                                                                        {
                                                                                                                                                                                        <expr_stmt>
                                                                                                                                                                                            <expr>
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    result
                                                                                                                                                                                                </name>
                                                                                                                                                                                                =
                                                                                                                                                                                                new
                                                                                                                                                                                                <call>
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            Point2D</name>
                                                                                                                                                                                                        .
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            Double
                                                                                                                                                                                                        </name>
                                                                                                                                                                                                    </name>
                                                                                                                                                                                                    <argument_list>
                                                                                                                                                                                                        (
                                                                                                                                                                                                        <argument>
                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    x
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                -
                                                                                                                                                                                                                2.0
                                                                                                                                                                                                                * <name>
                                                                                                                                                                                                                OPP
                                                                                                                                                                                                            </name> *
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                        this</name>
                                                                                                                                                                                                                    .
                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                        </argument>
                                                                                                                                                                                                        ,
                                                                                                                                                                                                        <argument>
                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    y
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                +
                                                                                                                                                                                                                2.0
                                                                                                                                                                                                                * <name>
                                                                                                                                                                                                                ADJ
                                                                                                                                                                                                            </name> *
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                        this</name>
                                                                                                                                                                                                                    .
                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                        </argument>
                                                                                                                                                                                                        )
                                                                                                                                                                                                    </argument_list>
                                                                                                                                                                                                </call>
                                                                                                                                                                                            </expr>
                                                                                                                                                                                            ;
                                                                                                                                                                                        </expr_stmt>
                                                                                                                                                                                        }
                                                                                                                                                                                    </block>
                                                                                                                                                                                </then>
                                                                                                                                                                                <else>
                                                                                                                                                                                    else
                                                                                                                                                                                    <if>
                                                                                                                                                                                        if
                                                                                                                                                                                        <condition>
                                                                                                                                                                                            (
                                                                                                                                                                                            <expr>
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    anchor
                                                                                                                                                                                                </name>
                                                                                                                                                                                                ==
                                                                                                                                                                                                <name>
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        ItemLabelAnchor</name>
                                                                                                                                                                                                    .
                                                                                                                                                                                                    <name>
                                                                                                                                                                                                        OUTSIDE8
                                                                                                                                                                                                    </name>
                                                                                                                                                                                                </name>
                                                                                                                                                                                            </expr>
                                                                                                                                                                                            )
                                                                                                                                                                                        </condition>
                                                                                                                                                                                        <then>
                                                                                                                                                                                            <block>
                                                                                                                                                                                                {
                                                                                                                                                                                                <expr_stmt>
                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            result
                                                                                                                                                                                                        </name>
                                                                                                                                                                                                        =
                                                                                                                                                                                                        new
                                                                                                                                                                                                        <call>
                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    Point2D</name>
                                                                                                                                                                                                                .
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    Double
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                            </name>
                                                                                                                                                                                                            <argument_list>
                                                                                                                                                                                                                (
                                                                                                                                                                                                                <argument>
                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            x
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                        -
                                                                                                                                                                                                                        2.0
                                                                                                                                                                                                                        * <name>
                                                                                                                                                                                                                        ADJ
                                                                                                                                                                                                                    </name> *
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                this</name>
                                                                                                                                                                                                                            .
                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                </argument>
                                                                                                                                                                                                                ,
                                                                                                                                                                                                                <argument>
                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            y
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                        +
                                                                                                                                                                                                                        2.0
                                                                                                                                                                                                                        * <name>
                                                                                                                                                                                                                        OPP
                                                                                                                                                                                                                    </name> *
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                this</name>
                                                                                                                                                                                                                            .
                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                </argument>
                                                                                                                                                                                                                )
                                                                                                                                                                                                            </argument_list>
                                                                                                                                                                                                        </call>
                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                    ;
                                                                                                                                                                                                </expr_stmt>
                                                                                                                                                                                                }
                                                                                                                                                                                            </block>
                                                                                                                                                                                        </then>
                                                                                                                                                                                        <else>
                                                                                                                                                                                            else
                                                                                                                                                                                            <if>
                                                                                                                                                                                                if
                                                                                                                                                                                                <condition>
                                                                                                                                                                                                    (
                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            anchor
                                                                                                                                                                                                        </name>
                                                                                                                                                                                                        ==
                                                                                                                                                                                                        <name>
                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                ItemLabelAnchor</name>
                                                                                                                                                                                                            .
                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                OUTSIDE9
                                                                                                                                                                                                            </name>
                                                                                                                                                                                                        </name>
                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                    )
                                                                                                                                                                                                </condition>
                                                                                                                                                                                                <then>
                                                                                                                                                                                                    <block>
                                                                                                                                                                                                        {
                                                                                                                                                                                                        <expr_stmt>
                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    result
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                =
                                                                                                                                                                                                                new
                                                                                                                                                                                                                <call>
                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            Point2D</name>
                                                                                                                                                                                                                        .
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            Double
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                    <argument_list>
                                                                                                                                                                                                                        (
                                                                                                                                                                                                                        <argument>
                                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    x
                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                -
                                                                                                                                                                                                                                2.0
                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                        this</name>
                                                                                                                                                                                                                                    .
                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                                        </argument>
                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                        <argument>
                                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    y
                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                                        </argument>
                                                                                                                                                                                                                        )
                                                                                                                                                                                                                    </argument_list>
                                                                                                                                                                                                                </call>
                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                            ;
                                                                                                                                                                                                        </expr_stmt>
                                                                                                                                                                                                        }
                                                                                                                                                                                                    </block>
                                                                                                                                                                                                </then>
                                                                                                                                                                                                <else>
                                                                                                                                                                                                    else
                                                                                                                                                                                                    <if>
                                                                                                                                                                                                        if
                                                                                                                                                                                                        <condition>
                                                                                                                                                                                                            (
                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    anchor
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                ==
                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                        ItemLabelAnchor</name>
                                                                                                                                                                                                                    .
                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                        OUTSIDE10
                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                </name>
                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                            )
                                                                                                                                                                                                        </condition>
                                                                                                                                                                                                        <then>
                                                                                                                                                                                                            <block>
                                                                                                                                                                                                                {
                                                                                                                                                                                                                <expr_stmt>
                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            result
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                        =
                                                                                                                                                                                                                        new
                                                                                                                                                                                                                        <call>
                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    Point2D</name>
                                                                                                                                                                                                                                .
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    Double
                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                            <argument_list>
                                                                                                                                                                                                                                (
                                                                                                                                                                                                                                <argument>
                                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                            x
                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                        -
                                                                                                                                                                                                                                        2.0
                                                                                                                                                                                                                                        * <name>
                                                                                                                                                                                                                                        ADJ
                                                                                                                                                                                                                                    </name> *
                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                                this</name>
                                                                                                                                                                                                                                            .
                                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                                </argument>
                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                <argument>
                                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                            y
                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                        -
                                                                                                                                                                                                                                        2.0
                                                                                                                                                                                                                                        * <name>
                                                                                                                                                                                                                                        OPP
                                                                                                                                                                                                                                    </name> *
                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                                this</name>
                                                                                                                                                                                                                                            .
                                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                                </argument>
                                                                                                                                                                                                                                )
                                                                                                                                                                                                                            </argument_list>
                                                                                                                                                                                                                        </call>
                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                </expr_stmt>
                                                                                                                                                                                                                }
                                                                                                                                                                                                            </block>
                                                                                                                                                                                                        </then>
                                                                                                                                                                                                        <else>
                                                                                                                                                                                                            else
                                                                                                                                                                                                            <if>
                                                                                                                                                                                                                if
                                                                                                                                                                                                                <condition>
                                                                                                                                                                                                                    (
                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            anchor
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                        ==
                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                ItemLabelAnchor</name>
                                                                                                                                                                                                                            .
                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                OUTSIDE11
                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                    )
                                                                                                                                                                                                                </condition>
                                                                                                                                                                                                                <then>
                                                                                                                                                                                                                    <block>
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                        <expr_stmt>
                                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    result
                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                =
                                                                                                                                                                                                                                new
                                                                                                                                                                                                                                <call>
                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                            Point2D</name>
                                                                                                                                                                                                                                        .
                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                            Double
                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                                    <argument_list>
                                                                                                                                                                                                                                        (
                                                                                                                                                                                                                                        <argument>
                                                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                                    x
                                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                                -
                                                                                                                                                                                                                                                2.0
                                                                                                                                                                                                                                                * <name>
                                                                                                                                                                                                                                                OPP
                                                                                                                                                                                                                                            </name> *
                                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                                        this</name>
                                                                                                                                                                                                                                                    .
                                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                                                        </argument>
                                                                                                                                                                                                                                        ,
                                                                                                                                                                                                                                        <argument>
                                                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                                    y
                                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                                -
                                                                                                                                                                                                                                                2.0
                                                                                                                                                                                                                                                * <name>
                                                                                                                                                                                                                                                ADJ
                                                                                                                                                                                                                                            </name> *
                                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                                        this</name>
                                                                                                                                                                                                                                                    .
                                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                                        itemLabelAnchorOffset
                                                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                                                        </argument>
                                                                                                                                                                                                                                        )
                                                                                                                                                                                                                                    </argument_list>
                                                                                                                                                                                                                                </call>
                                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                                            ;
                                                                                                                                                                                                                        </expr_stmt>
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    </block>
                                                                                                                                                                                                                </then>
                                                                                                                                                                                                                <else>
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    <if>
                                                                                                                                                                                                                        if
                                                                                                                                                                                                                        <condition>
                                                                                                                                                                                                                            (
                                                                                                                                                                                                                            <expr>
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    anchor
                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                ==
                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                        ItemLabelAnchor</name>
                                                                                                                                                                                                                                    .
                                                                                                                                                                                                                                    <name>
                                                                                                                                                                                                                                        OUTSIDE12
                                                                                                                                                                                                                                    </name>
                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                            </expr>
                                                                                                                                                                                                                            )
                                                                                                                                                                                                                        </condition>
                                                                                                                                                                                                                        <then>
                                                                                                                                                                                                                            <block>
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                <expr_stmt>
                                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                            result
                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                        =
                                                                                                                                                                                                                                        new
                                                                                                                                                                                                                                        <call>
                                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                                    Point2D</name>
                                                                                                                                                                                                                                                .
                                                                                                                                                                                                                                                <name>
                                                                                                                                                                                                                                                    Double
                                                                                                                                                                                                                                                </name>
                                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                                            <argument_list>
                                                                                                                                                                                                                                                (
                                                                                                                                                                                                                                                <argument>
                                                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                                            x
                                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                                                </argument>
                                                                                                                                                                                                                                                ,
                                                                                                                                                                                                                                                <argument>
                                                                                                                                                                                                                                                    <expr>
                                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                                            y
                                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                                        -
                                                                                                                                                                                                                                                        2.0
                                                                                                                                                                                                                                                        *
                                                                                                                                                                                                                                                        <name>
                                                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                                                this</name>
                                                                                                                                                                                                                                                            .
                                                                                                                                                                                                                                                            <name>
                                                                                                                                                                                                                                                                itemLabelAnchorOffset
                                                                                                                                                                                                                                                            </name>
                                                                                                                                                                                                                                                        </name>
                                                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                                                </argument>
                                                                                                                                                                                                                                                )
                                                                                                                                                                                                                                            </argument_list>
                                                                                                                                                                                                                                        </call>
                                                                                                                                                                                                                                    </expr>
                                                                                                                                                                                                                                    ;
                                                                                                                                                                                                                                </expr_stmt>
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            </block>
                                                                                                                                                                                                                        </then>
                                                                                                                                                                                                                    </if>
                                                                                                                                                                                                                </else>
                                                                                                                                                                                                            </if>
                                                                                                                                                                                                        </else>
                                                                                                                                                                                                    </if>
                                                                                                                                                                                                </else>
                                                                                                                                                                                            </if>
                                                                                                                                                                                        </else>
                                                                                                                                                                                    </if>
                                                                                                                                                                                </else>
                                                                                                                                                                            </if>
                                                                                                                                                                        </else>
                                                                                                                                                                    </if>
                                                                                                                                                                </else>
                                                                                                                                                            </if>
                                                                                                                                                        </else>
                                                                                                                                                    </if>
                                                                                                                                                </else>
                                                                                                                                            </if>
                                                                                                                                        </else>
                                                                                                                                    </if>
                                                                                                                                </else>
                                                                                                                            </if>
                                                                                                                        </else>
                                                                                                                    </if>
                                                                                                                </else>
                                                                                                            </if>
                                                                                                        </else>
                                                                                                    </if>
                                                                                                </else>
                                                                                            </if>
                                                                                        </else>
                                                                                    </if>
                                                                                </else>
                                                                            </if>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Registers an object to receive notification of changes to the renderer.
                *
                * @param listener the listener (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #removeChangeListener(RendererChangeListener)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RendererChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>listener</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'listener' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>listenerList</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>RendererChangeListener</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Deregisters an object so that it no longer receives
                * notification of changes to the renderer.
                *
                * @param listener the object (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @see #addChangeListener(RendererChangeListener)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RendererChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>listener</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'listener' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>listenerList</name>.
                                    <name>remove</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>RendererChangeListener</name>.
                                                <name>
                                                    <name/>
                                                </name>
                                            </name>
                                            class
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the specified object is registered with
                * the dataset as a listener. Most applications won't need to call this
                * method, it exists mainly for use by unit testing code.
                *
                * @param listener the listener.
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>hasListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>EventListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>List</name>
                            </type>
                            <name>list</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Arrays</name>.
                                            <name>asList</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>this</name>.<name>listenerList</name>.
                                                            <name>getListenerList</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name><name>list</name>.
                                    <name>contains</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>listener</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @since 1.0.5
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>void</name>
                </type>
                <name>fireChangeEvent</name>
                <parameter_list>()</parameter_list>
                <block>{

                    <comment type="line">// the commented out code would be better, but only if</comment>
                    <comment type="line">// RendererChangeEvent is immutable, which it isn't. See if there is</comment>
                    <comment type="line">// a way to fix this...</comment>

                    <comment type="line">//if (this.event == null) {</comment>
                    <comment type="line">// this.event = new RendererChangeEvent(this);</comment>
                    <comment type="line">//</comment>}
                    <comment type="line">//notifyListeners(this.event);</comment>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>RendererChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Notifies all registered listeners that the renderer has been modified.
                *
                * @param event information about the change event.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>notifyListeners</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RendererChangeEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Object</name>
                                <index>[]</index>
                            </type>
                            <name>ls</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>listenerList</name>.
                                            <name>getListenerList</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>
                                        <name><name>ls</name>.
                                            <name>length</name>
                                        </name>
                                        - 2
                                    </expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &gt;= 0
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr>
                                <name>i</name>
                                -= 2
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>
                                            <name>ls</name>
                                            <index>[
                                                <expr>
                                                    <name>i</name>
                                                </expr>
                                                ]
                                            </index>
                                        </name>
                                        ==
                                        <name><name>RendererChangeListener</name>.
                                            <name>
                                                <name/>
                                            </name>
                                        </name>
                                        class
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>((<name>RendererChangeListener</name>)
                                                <name>
                                                    <name>ls</name>
                                                    <index>[
                                                        <expr>
                                                            <name>i</name>
                                                            + 1
                                                        </expr>
                                                        ]
                                                    </index>
                                                </name>
                                                ).
                                                <call>
                                                    <name>rendererChanged</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>event</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests this renderer for equality with another object.
                *
                * @param obj the object (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                ==
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!(<name>obj</name>
                                <name>instanceof</name>
                                <name>AbstractRenderer</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AbstractRenderer</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>AbstractRenderer</name>)
                                    <name>obj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>seriesVisible</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>seriesVisible</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>this</name>.<name>seriesVisibleList</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>seriesVisibleList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>baseSeriesVisible</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>baseSeriesVisible</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>seriesVisibleInLegend</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>seriesVisibleInLegend</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>this</name>.<name>seriesVisibleInLegendList</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>seriesVisibleInLegendList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>baseSeriesVisibleInLegend</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>baseSeriesVisibleInLegend</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>paint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>paint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>paintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>paintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>basePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>basePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>fillPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>fillPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>fillPaintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>fillPaintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseFillPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseFillPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>outlinePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>outlinePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>outlinePaintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>outlinePaintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseOutlinePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseOutlinePaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>stroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>stroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>strokeList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>strokeList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>outlineStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>outlineStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>outlineStrokeList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>outlineStrokeList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseOutlineStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseOutlineStroke</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>shape</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>shape</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>shapeList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>shapeList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseShape</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseShape</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelsVisible</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelsVisible</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelsVisibleList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelsVisibleList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseItemLabelsVisible</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseItemLabelsVisible</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelFont</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelFont</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelFontList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelFontList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseItemLabelFont</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseItemLabelFont</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>itemLabelPaintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>itemLabelPaintList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>PaintUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseItemLabelPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseItemLabelPaint</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>positiveItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>positiveItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>positiveItemLabelPositionList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>positiveItemLabelPositionList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>basePositiveItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>basePositiveItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>negativeItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>negativeItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>negativeItemLabelPositionList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>negativeItemLabelPositionList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>baseNegativeItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>baseNegativeItemLabelPosition</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelAnchorOffset</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>itemLabelAnchorOffset</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>createEntities</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>createEntities</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>createEntitiesList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>createEntitiesList</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>baseCreateEntities</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>baseCreateEntities</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a hashcode for the renderer.
                *
                * @return The hashcode.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>193</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>seriesVisibleList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseSeriesVisible</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>seriesVisibleInLegendList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseSeriesVisibleInLegend</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>paintList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>basePaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>fillPaintList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseFillPaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlinePaintList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseOutlinePaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>strokeList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseStroke</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlineStrokeList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseOutlineStroke</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// shapeList</comment>
                    <comment type="line">// baseShape</comment>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>itemLabelsVisibleList</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseItemLabelsVisible</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <comment type="line">// itemLabelFontList</comment>
                    <comment type="line">// baseItemLabelFont</comment>
                    <comment type="line">// itemLabelPaintList</comment>
                    <comment type="line">// baseItemLabelPaint</comment>
                    <comment type="line">// positiveItemLabelPositionList</comment>
                    <comment type="line">// basePositiveItemLabelPosition</comment>
                    <comment type="line">// negativeItemLabelPositionList</comment>
                    <comment type="line">// baseNegativeItemLabelPosition</comment>
                    <comment type="line">// itemLabelAnchorOffset</comment>
                    <comment type="line">// createEntityList</comment>
                    <comment type="line">// baseCreateEntities</comment>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns an independent copy of the renderer.
                *
                * @return A clone.
                *
                * @throws CloneNotSupportedException if some component of the renderer
                * does not support cloning.
                */
            </comment>
            <function>
                <type>
                    <specifier>protected</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>CloneNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>AbstractRenderer</name>
                            </type>
                            <name>clone</name> =
                            <init>
                                <expr>(<name>AbstractRenderer</name>)
                                    <call>
                                        <name><name>super</name>.
                                            <name>clone</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>seriesVisibleList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>seriesVisibleList</name>
                                        </name>
                                        = (<name>BooleanList</name>)
                                        <call>
                                            <name><name>this</name>.<name>seriesVisibleList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>seriesVisibleInLegendList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>seriesVisibleInLegendList</name>
                                        </name>
                                        = (<name>BooleanList</name>)
                                        <call>
                                            <name><name>this</name>.<name>seriesVisibleInLegendList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// 'paint' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>paintList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>paintList</name>
                                        </name>
                                        = (<name>PaintList</name>)
                                        <call>
                                            <name><name>this</name>.<name>paintList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'basePaint' : immutable, no need to clone reference</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>fillPaintList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>fillPaintList</name>
                                        </name>
                                        = (<name>PaintList</name>)
                                        <call>
                                            <name><name>this</name>.<name>fillPaintList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'outlinePaint' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>outlinePaintList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>outlinePaintList</name>
                                        </name>
                                        = (<name>PaintList</name>)
                                        <call>
                                            <name><name>this</name>.<name>outlinePaintList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'baseOutlinePaint' : immutable, no need to clone reference</comment>

                    <comment type="line">// 'stroke' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>strokeList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>strokeList</name>
                                        </name>
                                        = (<name>StrokeList</name>)
                                        <call>
                                            <name><name>this</name>.<name>strokeList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'baseStroke' : immutable, no need to clone reference</comment>

                    <comment type="line">// 'outlineStroke' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>outlineStrokeList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>outlineStrokeList</name>
                                        </name>
                                        = (<name>StrokeList</name>)
                                        <call>
                                            <name><name>this</name>.<name>outlineStrokeList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'baseOutlineStroke' : immutable, no need to clone reference</comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>shape</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>shape</name>
                                        </name>
                                        =
                                        <call>
                                            <name><name>ShapeUtilities</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>shape</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>shapeList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>shapeList</name>
                                        </name>
                                        = (<name>ShapeList</name>)
                                        <call>
                                            <name><name>this</name>.<name>shapeList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>baseShape</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>baseShape</name>
                                        </name>
                                        =
                                        <call>
                                            <name><name>ShapeUtilities</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>baseShape</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>

                    <comment type="line">// 'itemLabelsVisible' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelsVisibleList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>itemLabelsVisibleList</name>
                                        </name>
                                        = (<name>BooleanList</name>)
                                        <call>
                                            <name><name>this</name>.<name>itemLabelsVisibleList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'basePaint' : immutable, no need to clone reference</comment>

                    <comment type="line">// 'itemLabelFont' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelFontList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>itemLabelFontList</name>
                                        </name>
                                        = (<name>ObjectList</name>)
                                        <call>
                                            <name><name>this</name>.<name>itemLabelFontList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'baseItemLabelFont' : immutable, no need to clone reference</comment>

                    <comment type="line">// 'itemLabelPaint' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>itemLabelPaintList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>itemLabelPaintList</name>
                                        </name>
                                        = (<name>PaintList</name>)
                                        <call>
                                            <name><name>this</name>.<name>itemLabelPaintList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'baseItemLabelPaint' : immutable, no need to clone reference</comment>

                    <comment type="line">// 'postiveItemLabelAnchor' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>positiveItemLabelPositionList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>positiveItemLabelPositionList</name>
                                        </name>
                                        = (<name>ObjectList</name>)
                                        <call>
                                            <name><name>this</name>.<name>positiveItemLabelPositionList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'baseItemLabelAnchor' : immutable, no need to clone reference</comment>

                    <comment type="line">// 'negativeItemLabelAnchor' : immutable, no need to clone reference</comment>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>negativeItemLabelPositionList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>negativeItemLabelPositionList</name>
                                        </name>
                                        = (<name>ObjectList</name>)
                                        <call>
                                            <name><name>this</name>.<name>negativeItemLabelPositionList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <comment type="line">// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference
                    </comment>

                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>createEntitiesList</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name><name>clone</name>.
                                            <name>createEntitiesList</name>
                                        </name>
                                        = (<name>BooleanList</name>)
                                        <call>
                                            <name><name>this</name>.<name>createEntitiesList</name>.
                                                <name>clone</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>clone</name>.
                                <name>listenerList</name>
                            </name>
                            = new
                            <call>
                                <name>EventListenerList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>clone</name>.
                                <name>event</name>
                            </name>
                            =
                            <name>null</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>clone</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provides serialization support.
                *
                * @param stream the output stream.
                *
                * @throws IOException if there is an I/O error.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>writeObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ObjectOutputStream</name>
                            </type>
                            <name>stream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stream</name>.
                                    <name>defaultWriteObject</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>paint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>basePaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>fillPaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseFillPaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlinePaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseOutlinePaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>stroke</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseStroke</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>outlineStroke</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseOutlineStroke</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>shape</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writeShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseShape</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>itemLabelPaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>writePaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>baseItemLabelPaint</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Provides serialization support.
                *
                * @param stream the input stream.
                *
                * @throws IOException if there is an I/O error.
                * @throws ClassNotFoundException if there is a classpath problem.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>readObject</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ObjectInputStream</name>
                            </type>
                            <name>stream</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                    ,
                    <argument>
                        <expr>
                            <name>ClassNotFoundException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>stream</name>.
                                    <name>defaultReadObject</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>paint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>basePaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fillPaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseFillPaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlinePaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlinePaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>stroke</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseStroke</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>outlineStroke</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseOutlineStroke</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>shape</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseShape</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readShape</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>itemLabelPaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>baseItemLabelPaint</name>
                            </name>
                            =
                            <call>
                                <name><name>SerialUtilities</name>.
                                    <name>readPaint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>stream</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <comment type="line">// listeners are not restored automatically, but storage must be</comment>
                    <comment type="line">// provided...</comment>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>listenerList</name>
                            </name>
                            = new
                            <call>
                                <name>EventListenerList</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

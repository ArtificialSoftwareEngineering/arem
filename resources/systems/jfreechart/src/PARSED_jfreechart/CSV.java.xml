<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\data\io\CSV.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * --------
        * CSV.java
        * --------
        * (C) Copyright 2003-2007, by Object Refinery Limited.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): -;
        *
        * Changes
        * -------
        * 24-Nov-2003 : Version 1 (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>io</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>BufferedReader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Reader</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>category</name>.
            <name>CategoryDataset</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>category</name>.
            <name>DefaultCategoryDataset</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A utility class for reading {@link CategoryDataset} data from a CSV file.
        * This initial version is very basic, and won't handle errors in the data
        * file very gracefully.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>CSV</name>
        <block>{

            <comment type="javadoc">/** The field delimiter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>char</name>
                    </type>
                    <name>fieldDelimiter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The text delimiter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>char</name>
                    </type>
                    <name>textDelimiter</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new CSV reader where the field delimiter is a comma, and the
                * text delimiter is a double-quote.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>CSV</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>','</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>'"'</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new reader with the specified field and text delimiters.
                *
                * @param fieldDelimiter the field delimiter (usually a comma, semi-colon,
                * colon, tab or space).
                * @param textDelimiter the text delimiter (usually a single or double
                * quote).
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>CSV</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>fieldDelimiter</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>char</name>
                            </type>
                            <name>textDelimiter</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>fieldDelimiter</name>
                            </name>
                            =
                            <name>fieldDelimiter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>textDelimiter</name>
                            </name>
                            =
                            <name>textDelimiter</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Reads a {@link CategoryDataset} from a CSV file or input source.
                *
                * @param in the input source.
                *
                * @return A category dataset.
                *
                * @throws IOException if there is an I/O problem.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>CategoryDataset</name>
                </type>
                <name>readCategoryDataset</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Reader</name>
                            </type>
                            <name>in</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>IOException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DefaultCategoryDataset</name>
                            </type>
                            <name>dataset</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>DefaultCategoryDataset</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>BufferedReader</name>
                            </type>
                            <name>reader</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name>BufferedReader</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>in</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>List</name>
                            </type>
                            <name>columnKeys</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>lineIndex</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>line</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>reader</name>.
                                            <name>readLine</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>line</name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>lineIndex</name>
                                        == 0
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <comment type="line">// first line contains column keys</comment>
                                        <expr_stmt>
                                            <expr>
                                                <name>columnKeys</name>
                                                =
                                                <call>
                                                    <name>extractColumnKeys</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>line</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <block>{
                                        <comment type="line">// remaining lines contain a row key and data values
                                        </comment>
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name>extractRowKeyAndData</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name>line</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>dataset</name>
                                                            </expr>
                                                        </argument>
                                                        ,
                                                        <argument>
                                                            <expr>
                                                                <name>columnKeys</name>
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </else>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name>line</name>
                                    =
                                    <call>
                                        <name><name>reader</name>.
                                            <name>readLine</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr><name>lineIndex</name>++
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    <return>return
                        <expr>
                            <name>dataset</name>
                        </expr>
                        ;
                    </return>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Extracts the column keys from a string.
                *
                * @param line a line from the input file.
                *
                * @return A list of column keys.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>List</name>
                </type>
                <name>extractColumnKeys</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>line</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>List</name>
                            </type>
                            <name>keys</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>java</name>.<name>util</name>.
                                            <name>ArrayList</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fieldIndex</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>line</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>line</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ==
                                        <name><name>this</name>.
                                            <name>fieldDelimiter</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fieldIndex</name>
                                                    &gt; 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// first field is ignored, since</comment>
                                                    <comment type="line">// column 0 is for row keys</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>key</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>line</name>.
                                                                            <name>substring</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>start</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>keys</name>.
                                                                    <name>add</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <call>
                                                                                <name>removeStringDelimiters</name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>key</name>
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>start</name>
                                                = <name>i</name> + 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr><name>fieldIndex</name>++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>line</name>.
                                            <name>substring</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>start</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>line</name>.
                                                            <name>length</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>keys</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>removeStringDelimiters</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>key</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>keys</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Extracts the row key and data for a single line from the input source.
                *
                * @param line the line from the input source.
                * @param dataset the dataset to be populated.
                * @param columnKeys the column keys.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>void</name>
                </type>
                <name>extractRowKeyAndData</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>line</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>DefaultCategoryDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>List</name>
                            </type>
                            <name>columnKeys</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Comparable</name>
                            </type>
                            <name>rowKey</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>fieldIndex</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <for>for (
                        <init>
                            <decl>
                                <type>
                                    <name>int</name>
                                </type>
                                <name>i</name> =
                                <init>
                                    <expr>0</expr>
                                </init>
                            </decl>
                            ;
                        </init>
                        <condition>
                            <expr>
                                <name>i</name>
                                &lt;
                                <call>
                                    <name><name>line</name>.
                                        <name>length</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            ;
                        </condition>
                        <incr>
                            <expr><name>i</name>++
                            </expr>
                        </incr>
                        )
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>line</name>.
                                                <name>charAt</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>i</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        ==
                                        <name><name>this</name>.
                                            <name>fieldDelimiter</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <if>if
                                            <condition>(
                                                <expr>
                                                    <name>fieldIndex</name>
                                                    == 0
                                                </expr>
                                                )
                                            </condition>
                                            <then>
                                                <block>{
                                                    <comment type="line">// first field contains the row key</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>String</name>
                                                            </type>
                                                            <name>key</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>line</name>.
                                                                            <name>substring</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>start</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>i</name>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <name>rowKey</name>
                                                            =
                                                            <call>
                                                                <name>removeStringDelimiters</name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>key</name>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </then>
                                            <else>else
                                                <block>{
                                                    <comment type="line">// remaining fields contain values</comment>
                                                    <decl_stmt>
                                                        <decl>
                                                            <type>
                                                                <name>Double</name>
                                                            </type>
                                                            <name>value</name> =
                                                            <init>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>Double</name>.
                                                                            <name>valueOf</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name>removeStringDelimiters
                                                                                        </name>
                                                                                        <argument_list>(
                                                                                            <argument>
                                                                                                <expr>
                                                                                                    <call>
                                                                                                        <name><name>
                                                                                                            line</name>.
                                                                                                            <name>
                                                                                                                substring
                                                                                                            </name>
                                                                                                        </name>
                                                                                                        <argument_list>(
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        start
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            ,
                                                                                                            <argument>
                                                                                                                <expr>
                                                                                                                    <name>
                                                                                                                        i
                                                                                                                    </name>
                                                                                                                </expr>
                                                                                                            </argument>
                                                                                                            )
                                                                                                        </argument_list>
                                                                                                    </call>
                                                                                                </expr>
                                                                                            </argument>
                                                                                            )
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </init>
                                                        </decl>
                                                        ;
                                                    </decl_stmt>
                                                    <expr_stmt>
                                                        <expr>
                                                            <call>
                                                                <name><name>dataset</name>.
                                                                    <name>addValue</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>
                                                                            <name>value</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>
                                                                            <name>rowKey</name>
                                                                        </expr>
                                                                    </argument>
                                                                    ,
                                                                    <argument>
                                                                        <expr>(<name>Comparable</name>)
                                                                            <call>
                                                                                <name><name>columnKeys</name>.
                                                                                    <name>get</name>
                                                                                </name>
                                                                                <argument_list>(
                                                                                    <argument>
                                                                                        <expr>
                                                                                            <name>fieldIndex</name>
                                                                                            - 1
                                                                                        </expr>
                                                                                    </argument>
                                                                                    )
                                                                                </argument_list>
                                                                            </call>
                                                                        </expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                        ;
                                                    </expr_stmt>
                                                    }
                                                </block>
                                            </else>
                                        </if>
                                        <expr_stmt>
                                            <expr>
                                                <name>start</name>
                                                = <name>i</name> + 1
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        <expr_stmt>
                                            <expr><name>fieldIndex</name>++
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </for>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Double</name>
                            </type>
                            <name>value</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Double</name>.
                                            <name>valueOf</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name>removeStringDelimiters</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <call>
                                                                        <name><name>line</name>.
                                                                            <name>substring</name>
                                                                        </name>
                                                                        <argument_list>(
                                                                            <argument>
                                                                                <expr>
                                                                                    <name>start</name>
                                                                                </expr>
                                                                            </argument>
                                                                            ,
                                                                            <argument>
                                                                                <expr>
                                                                                    <call>
                                                                                        <name><name>line</name>.
                                                                                            <name>length</name>
                                                                                        </name>
                                                                                        <argument_list>()
                                                                                        </argument_list>
                                                                                    </call>
                                                                                </expr>
                                                                            </argument>
                                                                            )
                                                                        </argument_list>
                                                                    </call>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>dataset</name>.
                                    <name>addValue</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>value</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>rowKey</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>(<name>Comparable</name>)
                                            <call>
                                                <name><name>columnKeys</name>.
                                                    <name>get</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>fieldIndex</name>
                                                            - 1
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Removes the string delimiters from a key (as well as any white space
                * outside the delimiters).
                *
                * @param key the key (including delimiters).
                *
                * @return The key without delimiters.
                */
            </comment>
            <function>
                <type>
                    <specifier>private</specifier>
                    <name>String</name>
                </type>
                <name>removeStringDelimiters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>k</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>key</name>.
                                            <name>trim</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>k</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>0</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ==
                                <name><name>this</name>.
                                    <name>textDelimiter</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>k</name>
                                        =
                                        <call>
                                            <name><name>k</name>.
                                                <name>substring</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>1</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>k</name>.
                                        <name>charAt</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <call>
                                                    <name><name>k</name>.
                                                        <name>length</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                                - 1
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                ==
                                <name><name>this</name>.
                                    <name>textDelimiter</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>k</name>
                                        =
                                        <call>
                                            <name><name>k</name>.
                                                <name>substring</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>0</expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>k</name>.
                                                                <name>length</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                        - 1
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>k</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

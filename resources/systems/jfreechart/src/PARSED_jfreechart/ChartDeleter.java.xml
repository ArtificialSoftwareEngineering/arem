<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\servlet\ChartDeleter.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * -----------------
        * ChartDeleter.java
        * -----------------
        * (C) Copyright 2002-2007, by Richard Atkinson and Contributors.
        *
        * Original Author: Richard Atkinson;
        * Contributor(s): -;
        *
        * Changes
        * -------
        * 19-Aug-2002 : Version 1;
        * 17-Oct-2002 : Fixed errors reported by Checkstyle (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 02-Feb-2007 : Removed author tags all over JFreeChart sources (DG);
        *
        */
    </comment>
    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>servlet</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>File</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Iterator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>List</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>servlet</name>.<name>http</name>.
            <name>HttpSessionBindingEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>servlet</name>.<name>http</name>.
            <name>HttpSessionBindingListener</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Used for deleting charts from the temporary directory when the users session
        * expires.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>ChartDeleter</name>
        <super>
            <implements>implements <name>HttpSessionBindingListener</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** The chart names. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>List</name>
                    </type>
                    <name>chartNames</name> =
                    <init>
                        <expr>new
                            <call>
                                <name><name>java</name>.<name>util</name>.
                                    <name>ArrayList</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Blank constructor.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>ChartDeleter</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>super</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Add a chart to be deleted when the session expires
                *
                * @param filename the name of the chart in the temporary directory to be
                * deleted.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addChart</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>filename</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>chartNames</name>.
                                    <name>add</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>filename</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks to see if a chart is in the list of charts to be deleted
                *
                * @param filename the name of the chart in the temporary directory.
                *
                * @return A boolean value indicating whether the chart is present in the
                * list.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isChartAvailable</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>filename</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return
                        <expr>(
                            <call>
                                <name><name>this</name>.<name>chartNames</name>.
                                    <name>contains</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>filename</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                            )
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Binding this object to the session has no additional effects.
                *
                * @param event the session bind event.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>valueBound</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>HttpSessionBindingEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <return>return;</return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * When this object is unbound from the session (including upon session
                * expiry) the files that have been added to the ArrayList are iterated
                * and deleted.
                *
                * @param event the session unbind event.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>valueUnbound</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>HttpSessionBindingEvent</name>
                            </type>
                            <name>event</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Iterator</name>
                            </type>
                            <name>iter</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>this</name>.<name>chartNames</name>.
                                            <name>listIterator</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>iter</name>.
                                        <name>hasNext</name>
                                    </name>
                                    <argument_list>()</argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>String</name>
                                    </type>
                                    <name>filename</name> =
                                    <init>
                                        <expr>(<name>String</name>)
                                            <call>
                                                <name><name>iter</name>.
                                                    <name>next</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>File</name>
                                    </type>
                                    <name>file</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>File</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>System</name>.
                                                                    <name>getProperty</name>
                                                                </name>
                                                                <argument_list>(
                                                                    <argument>
                                                                        <expr>"java.io.tmpdir"</expr>
                                                                    </argument>
                                                                    )
                                                                </argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>filename</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>file</name>.
                                                <name>exists</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <expr_stmt>
                                            <expr>
                                                <call>
                                                    <name><name>file</name>.
                                                        <name>delete</name>
                                                    </name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </expr_stmt>
                                        }
                                    </block>
                                </then>
                            </if>
                            }
                        </block>
                    </while>
                    <return>return;</return>

                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

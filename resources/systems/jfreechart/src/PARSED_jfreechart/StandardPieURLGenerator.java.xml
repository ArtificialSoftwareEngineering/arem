<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\urls\StandardPieURLGenerator.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ----------------------------
        * StandardPieURLGenerator.java
        * ----------------------------
        * (C) Copyright 2002-2007, by Richard Atkinson and Contributors.
        *
        * Original Author: Richard Atkinson;
        * Contributors: David Gilbert (for Object Refinery Limited);
        *
        * Changes:
        * --------
        * 05-Aug-2002 : Version 1, contributed by Richard Atkinson;
        * 09-Oct-2002 : Fixed errors reported by Checkstyle (DG);
        * 07-Mar-2003 : Modified to use KeyedValuesDataset and added pieIndex
        * parameter (DG);
        * 21-Mar-2003 : Implemented Serializable (DG);
        * 24-Apr-2003 : Switched around PieDataset and KeyedValuesDataset (DG);
        * 31-Mar-2004 : Added an optional 'pieIndex' parameter (DG);
        * 13-Jan-2005 : Fixed for compliance with XHTML 1.0 (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 24-Nov-2006 : Fixed equals() method and added argument checks (DG);
        * 17-Apr-2007 : Encode section key in generateURL() (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>urls</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>general</name>.
            <name>PieDataset</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>ObjectUtilities</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A URL generator for pie charts. Instances of this class are immutable.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>StandardPieURLGenerator</name>
        <super>
            <implements>implements <name>PieURLGenerator</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** For serialization. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>1626966402065883419L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The prefix. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>prefix</name> =
                    <init>
                        <expr>"index.html"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The category parameter name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>categoryParameterName</name> =
                    <init>
                        <expr>"category"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The pie index parameter name. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>String</name>
                    </type>
                    <name>indexParameterName</name> =
                    <init>
                        <expr>"pieIndex"</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Default constructor.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>StandardPieURLGenerator</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"index.html"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new generator.
                *
                * @param prefix the prefix (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>StandardPieURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>prefix</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"category"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new generator.
                *
                * @param prefix the prefix (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param categoryParameterName the category parameter name
                * (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>StandardPieURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>categoryParameterName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>prefix</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name>categoryParameterName</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>"pieIndex"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new generator.
                *
                * @param prefix the prefix (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param categoryParameterName the category parameter name
                * (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param indexParameterName the index parameter name (&lt;code&gt;null&lt;/code&gt;
                * permitted).
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>StandardPieURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>prefix</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>categoryParameterName</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>indexParameterName</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>prefix</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'prefix' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name>categoryParameterName</name>
                                ==
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <throw>throw
                                    <expr>new
                                        <call>
                                            <name>IllegalArgumentException</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>"Null 'categoryParameterName' argument."</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </throw>
                                }
                            </block>
                        </then>
                    </if>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>prefix</name>
                            </name>
                            =
                            <name>prefix</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>categoryParameterName</name>
                            </name>
                            =
                            <name>categoryParameterName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>indexParameterName</name>
                            </name>
                            =
                            <name>indexParameterName</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Generates a URL.
                *
                * @param dataset the dataset (ignored).
                * @param key the item key (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param pieIndex the pie index.
                *
                * @return A string containing the generated URL.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>generateURL</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>PieDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Comparable</name>
                            </type>
                            <name>key</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>pieIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>url</name> =
                            <init>
                                <expr>
                                    <name><name>this</name>.
                                        <name>prefix</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>url</name>.
                                        <name>indexOf</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>"?"</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                                &gt; -1
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>url</name>
                                        += "&amp;amp;" +
                                        <name><name>this</name>.
                                            <name>categoryParameterName</name>
                                        </name>
                                        + "="
                                        +
                                        <call>
                                            <name><name>URLUtilities</name>.
                                                <name>encode</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>key</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"UTF-8"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>url</name>
                                        += "?" +
                                        <name><name>this</name>.
                                            <name>categoryParameterName</name>
                                        </name>
                                        + "="
                                        +
                                        <call>
                                            <name><name>URLUtilities</name>.
                                                <name>encode</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>key</name>.
                                                                <name>toString</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>"UTF-8"</expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>indexParameterName</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>url</name>
                                        += "&amp;amp;" +
                                        <name><name>this</name>.
                                            <name>indexParameterName</name>
                                        </name>
                                        + "="
                                        +
                                        <call>
                                            <name><name>String</name>.
                                                <name>valueOf</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>pieIndex</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>url</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests if this object is equal to another.
                *
                * @param obj the object (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                ==
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!(<name>obj</name>
                                <name>instanceof</name>
                                <name>StandardPieURLGenerator</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StandardPieURLGenerator</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>StandardPieURLGenerator</name>)
                                    <name>obj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>this</name>.<name>prefix</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>prefix</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>this</name>.<name>categoryParameterName</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>categoryParameterName</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>ObjectUtilities</name>.
                                        <name>equal</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>this</name>.
                                                    <name>indexParameterName</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        ,
                                        <argument>
                                            <expr>
                                                <name><name>that</name>.
                                                    <name>indexParameterName</name>
                                                </name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>
            }
        </block>
    </class>
</unit>

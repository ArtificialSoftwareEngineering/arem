<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\editor\PaletteSample.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ------------------
        * PaletteSample.java
        * ------------------
        * (C) Copyright 2002-2007, by David M. O'Donnell.
        *
        * Original Author: David M. O'Donnell;
        * Contributor(s): David Gilbert (for Object Refinery Limited);
        *
        * Changes
        * -------
        * 21-Jan-2003 : Added standard header (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 31-Jan-2007 : Deprecated (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>editor</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>BasicStroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Component</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Dimension</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Insets</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>RenderingHints</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Line2D</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>JComponent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>JList</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>javax</name>.<name>swing</name>.
            <name>ListCellRenderer</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>ColorPalette</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>XYPlot</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.<name>xy</name>.
            <name>XYBlockRenderer</name>
        </name>
        ;
    </import>


    <comment type="javadoc">/**
        * A panel that displays a palette sample.
        *
        * @deprecated This class is no longer supported (as of version 1.0.4). If
        * you are creating contour plots, please try to use {@link XYPlot} and
        * {@link XYBlockRenderer}.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>PaletteSample</name>
        <super>
            <extends>extends
                <name>JComponent</name>
            </extends>
            <implements>implements
                <name>ListCellRenderer</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** The palette being displayed. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>ColorPalette</name>
                    </type>
                    <name>palette</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The preferred size of the component; */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Dimension</name>
                    </type>
                    <name>preferredSize</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new sample.
                *
                * @param palette the palette.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>PaletteSample</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ColorPalette</name>
                            </type>
                            <name>palette</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>palette</name>
                            </name>
                            =
                            <name>palette</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>preferredSize</name>
                            </name>
                            = new
                            <call>
                                <name>Dimension</name>
                                <argument_list>(
                                    <argument>
                                        <expr>80</expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>18</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns a list cell renderer for the stroke, so the sample can be
                * displayed in a list or combo.
                *
                * @param list the list component.
                * @param value the value.
                * @param index the index.
                * @param isSelected a flag that indicates whether or not the item is
                * selected.
                * @param cellHasFocus a flag that indicates whether or not the cell has
                * the focus.
                *
                * @return The renderer.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Component</name>
                </type>
                <name>getListCellRendererComponent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>JList</name>
                            </type>
                            <name>list</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>isSelected</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>cellHasFocus</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>value</name>
                                <name>instanceof</name>
                                <name>PaletteSample</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>PaletteSample</name>
                                        </type>
                                        <name>in</name> =
                                        <init>
                                            <expr>(<name>PaletteSample</name>)
                                                <name>value</name>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name>setPalette</name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <call>
                                                            <name><name>in</name>.
                                                                <name>getPalette</name>
                                                            </name>
                                                            <argument_list>()</argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>this</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the current palette object being displayed.
                *
                * @return The palette.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>ColorPalette</name>
                </type>
                <name>getPalette</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>palette</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the preferred size of the component.
                *
                * @return The preferred size.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Dimension</name>
                </type>
                <name>getPreferredSize</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>preferredSize</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Draws the sample.
                *
                * @param g the graphics device.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>paintComponent</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics</name>
                            </type>
                            <name>g</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name> =
                            <init>
                                <expr>(<name>Graphics2D</name>)
                                    <name>g</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setRenderingHint</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name><name>RenderingHints</name>.
                                                <name>KEY_ANTIALIASING</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>RenderingHints</name>.
                                                <name>VALUE_ANTIALIAS_OFF</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Dimension</name>
                            </type>
                            <name>size</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getSize</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Insets</name>
                            </type>
                            <name>insets</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getInsets</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>ww</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>size</name>.
                                            <name>getWidth</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    -
                                    <name><name>insets</name>.
                                        <name>left</name>
                                    </name>
                                    -
                                    <name><name>insets</name>.
                                        <name>right</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>hh</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>size</name>.
                                            <name>getHeight</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                    -
                                    <name><name>insets</name>.
                                        <name>top</name>
                                    </name>
                                    -
                                    <name><name>insets</name>.
                                        <name>bottom</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>g2</name>.
                                    <name>setStroke</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>BasicStroke</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>1.0f</expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y1</name> =
                            <init>
                                <expr>
                                    <name><name>insets</name>.
                                        <name>top</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y2</name> =
                            <init>
                                <expr>
                                    <name>y1</name>
                                    +
                                    <name>hh</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>xx</name> =
                            <init>
                                <expr>
                                    <name><name>insets</name>.
                                        <name>left</name>
                                    </name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Line2D</name>
                            </type>
                            <name>line</name> =
                            <init>
                                <expr>new
                                    <call>
                                        <name><name>Line2D</name>.
                                            <name>Double</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>count</name> =
                            <init>
                                <expr>0</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <while>while
                        <condition>(
                            <expr>
                                <name>xx</name>
                                &lt;=
                                <name><name>insets</name>.
                                    <name>left</name>
                                </name>
                                +
                                <name>ww</name>
                            </expr>
                            )
                        </condition>
                        <block>{
                            <expr_stmt>
                                <expr><name>count</name>++
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>line</name>.
                                            <name>setLine</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>xx</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>y1</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>xx</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>y2</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>setPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <call>
                                                        <name><name>this</name>.<name>palette</name>.
                                                            <name>getColor</name>
                                                        </name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>count</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>xx</name>
                                    += 1
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </while>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the palette object being displayed.
                *
                * @param palette the palette.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPalette</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ColorPalette</name>
                            </type>
                            <name>palette</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>palette</name>
                            </name>
                            =
                            <name>palette</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.
                                    <name>repaint</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

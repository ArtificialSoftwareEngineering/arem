<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\data\xml\RootHandler.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ----------------
        * RootHandler.java
        * ----------------
        * (C) Copyright 2003-2007, by Object Refinery Limited and Contributors.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): -;
        *
        * Changes
        * -------
        * 23-Jan-2003 : Version 1 (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>xml</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Stack</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.
            <name>SAXException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>xml</name>.<name>sax</name>.<name>helpers</name>.
            <name>DefaultHandler</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A SAX handler that delegates work to sub-handlers.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>RootHandler</name>
        <super>
            <extends>extends
                <name>DefaultHandler</name>
            </extends>
            <implements>implements
                <name>DatasetTags</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** The sub-handlers. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>Stack</name>
                    </type>
                    <name>subHandlers</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new handler.
                */
            </comment>
            <constructor>
                <specifier>public</specifier>
                <name>RootHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>subHandlers</name>
                            </name>
                            = new
                            <call>
                                <name>Stack</name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the stack of sub handlers.
                *
                * @return The sub-handler stack.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Stack</name>
                </type>
                <name>getSubHandlers</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>subHandlers</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Receives some (or all) of the text in the current element.
                *
                * @param ch character buffer.
                * @param start the start index.
                * @param length the length of the valid character data.
                *
                * @throws SAXException for errors.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>characters</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>
                                    <name>char</name>
                                    <index>[]</index>
                                </name>
                            </type>
                            <name>ch</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>length</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>SAXException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DefaultHandler</name>
                            </type>
                            <name>handler</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getCurrentHandler</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name>handler</name>
                                !=
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <call>
                                            <name><name>handler</name>.
                                                <name>characters</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>ch</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>start</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>length</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the handler at the top of the stack.
                *
                * @return The handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DefaultHandler</name>
                </type>
                <name>getCurrentHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DefaultHandler</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>this</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>subHandlers</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <if>if
                                    <condition>(
                                        <expr>
                                            <call>
                                                <name><name>this</name>.<name>subHandlers</name>.
                                                    <name>size</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                            &gt; 0
                                        </expr>
                                        )
                                    </condition>
                                    <then>
                                        <block>{
                                            <decl_stmt>
                                                <decl>
                                                    <type>
                                                        <name>Object</name>
                                                    </type>
                                                    <name>top</name> =
                                                    <init>
                                                        <expr>
                                                            <call>
                                                                <name><name>this</name>.<name>subHandlers</name>.
                                                                    <name>peek</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </init>
                                                </decl>
                                                ;
                                            </decl_stmt>
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <name>top</name>
                                                        !=
                                                        <name>null</name>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <expr_stmt>
                                                            <expr>
                                                                <name>result</name>
                                                                = (<name>DefaultHandler</name>)
                                                                <name>top</name>
                                                            </expr>
                                                            ;
                                                        </expr_stmt>
                                                        }
                                                    </block>
                                                </then>
                                            </if>
                                            }
                                        </block>
                                    </then>
                                </if>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Pushes a sub-handler onto the stack.
                *
                * @param subhandler the sub-handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>pushSubHandler</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>DefaultHandler</name>
                            </type>
                            <name>subhandler</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name><name>this</name>.<name>subHandlers</name>.
                                    <name>push</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>subhandler</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Pops a sub-handler from the stack.
                *
                * @return The sub-handler.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>DefaultHandler</name>
                </type>
                <name>popSubHandler</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>(<name>DefaultHandler</name>)
                            <call>
                                <name><name>this</name>.<name>subHandlers</name>.
                                    <name>pop</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

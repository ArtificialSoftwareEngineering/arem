<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\labels\StandardContourToolTipGenerator.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ------------------------------------
        * StandardContourToolTipGenerator.java
        * ------------------------------------
        * (C) Copyright 2002-2007, by David M. O'Donnell and Contributors.
        *
        * Original Author: David M. O'Donnell;
        * Contributor(s): David Gilbert (for Object Refinery Limited);
        *
        * Changes
        * -------
        * 23-Jan-2003 : Added standard header (DG);
        * 21-Mar-2003 : Implemented Serializable (DG);
        * 15-Jul-2004 : Switched the getZ() and getZValue() methods (DG);
        * 19-Jan-2005 : Now accesses primitives only from dataset (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>labels</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>DecimalFormat</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>text</name>.
            <name>SimpleDateFormat</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>XYPlot</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.<name>xy</name>.
            <name>XYBlockRenderer</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>contour</name>.
            <name>ContourDataset</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A standard tooltip generator for plots that use data from an
        * {@link ContourDataset}.
        *
        * @deprecated This class is no longer supported (as of version 1.0.4). If
        * you are creating contour plots, please try to use {@link XYPlot} and
        * {@link XYBlockRenderer}.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        class <name>StandardContourToolTipGenerator</name>
        <super>
            <implements>implements <name>ContourToolTipGenerator</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** For serialization. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>long</name>
                    </type>
                    <name>serialVersionUID</name> =
                    <init>
                        <expr>-1881659351247502711L</expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/** The number formatter. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>private</specifier>
                        <name>DecimalFormat</name>
                    </type>
                    <name>valueForm</name> =
                    <init>
                        <expr>new
                            <call>
                                <name>DecimalFormat</name>
                                <argument_list>(
                                    <argument>
                                        <expr>"##.###"</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Generates a tooltip text item for a particular item within a series.
                *
                * @param data the dataset.
                * @param item the item index (zero-based).
                *
                * @return The tooltip text.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>generateToolTip</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ContourDataset</name>
                            </type>
                            <name>data</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>x</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>data</name>.
                                            <name>getXValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>item</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>y</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>data</name>.
                                            <name>getYValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>item</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>z</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>data</name>.
                                            <name>getZValue</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>item</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>String</name>
                            </type>
                            <name>xString</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>data</name>.
                                        <name>isDateAxis</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>0</expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>SimpleDateFormat</name>
                                        </type>
                                        <name>formatter</name>
                                        =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name><name>java</name>.<name>text</name>.
                                                        <name>SimpleDateFormat</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"MM/dd/yyyy hh:mm:ss"</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <decl_stmt>
                                    <decl>
                                        <type>
                                            <name>StringBuffer</name>
                                        </type>
                                        <name>strbuf</name> =
                                        <init>
                                            <expr>new
                                                <call>
                                                    <name>StringBuffer</name>
                                                    <argument_list>()</argument_list>
                                                </call>
                                            </expr>
                                        </init>
                                    </decl>
                                    ;
                                </decl_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>strbuf</name>
                                        =
                                        <call>
                                            <name><name>formatter</name>.
                                                <name>format</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name>Date</name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>(<name>long</name>)
                                                                        <name>x</name>
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name>strbuf</name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>new
                                                        <call>
                                                            <name><name>java</name>.<name>text</name>.
                                                                <name>FieldPosition</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>0</expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                <expr_stmt>
                                    <expr>
                                        <name>xString</name>
                                        =
                                        <call>
                                            <name><name>strbuf</name>.
                                                <name>toString</name>
                                            </name>
                                            <argument_list>()</argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <expr_stmt>
                                    <expr>
                                        <name>xString</name>
                                        =
                                        <call>
                                            <name><name>this</name>.<name>valueForm</name>.
                                                <name>format</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>x</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </expr_stmt>
                                }
                            </block>
                        </else>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!
                                <call>
                                    <name><name>Double</name>.
                                        <name>isNaN</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name>z</name>
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>"X: " +
                                        <name>xString</name>
                                        + ", Y: " +
                                        <call>
                                            <name><name>this</name>.<name>valueForm</name>.
                                                <name>format</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        + ", Z: " +
                                        <call>
                                            <name><name>this</name>.<name>valueForm</name>.
                                                <name>format</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>z</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <block>{
                                <return>return
                                    <expr>"X: " +
                                        <name>xString</name>
                                        + ", Y: " +
                                        <call>
                                            <name><name>this</name>.<name>valueForm</name>.
                                                <name>format</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name>y</name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                        + ", Z: no data"
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </else>
                    </if>

                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Tests if this object is equal to another.
                *
                * @param obj the other object.
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{

                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                ==
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>

                    <if>if
                        <condition>(
                            <expr>!(<name>obj</name>
                                <name>instanceof</name>
                                <name>StandardContourToolTipGenerator</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>StandardContourToolTipGenerator</name>
                            </type>
                            <name>that</name>
                            =
                            <init>
                                <expr>(<name>StandardContourToolTipGenerator</name>)
                                    <name>obj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>valueForm</name>
                                </name>
                                !=
                                <name>null</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <call>
                                            <name><name>this</name>.<name>valueForm</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>that</name>.
                                                            <name>valueForm</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return <expr>false</expr>;
                    </return>

                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>

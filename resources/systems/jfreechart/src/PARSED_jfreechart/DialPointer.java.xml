<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\plot\dial\DialPointer.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ----------------
        * DialPointer.java
        * ----------------
        * (C) Copyright 2006-2007, by Object Refinery Limited.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): -;
        *
        * Changes
        * -------
        * 03-Nov-2006 : Version 1 (DG);
        * 17-Oct-2007 : Added equals() overrides (DG);
        * 24-Oct-2007 : Implemented PublicCloneable, changed default radius,
        * and added argument checks (DG);
        * 23-Nov-2007 : Added fillPaint and outlinePaint attributes to
        * DialPointer.Pointer (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>dial</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>BasicStroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Color</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Paint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Stroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Arc2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>GeneralPath</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Line2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Point2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>IOException</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectInputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>ObjectOutputStream</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>io</name>.
            <name>Serializable</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>HashUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>io</name>.
            <name>SerialUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PaintUtilities</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>util</name>.
            <name>PublicCloneable</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * A base class for the pointer in a {@link DialPlot}.
        *
        * @since 1.0.7
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>DialPointer</name>
        <super>
            <extends>extends
                <name>AbstractDialLayer</name>
            </extends>
            <implements>implements <name>DialLayer</name>, <name>Cloneable</name>, <name>PublicCloneable</name>,
                <name>Serializable</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/** The needle radius. */</comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>double</name>
                    </type>
                    <name>radius</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * The dataset index for the needle.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <name>int</name>
                    </type>
                    <name>datasetIndex</name>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Creates a new &lt;code&gt;DialPointer&lt;/code&gt; instance.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>DialPointer</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>this</name>
                                <argument_list>(
                                    <argument>
                                        <expr>0</expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Creates a new pointer for the specified dataset.
                *
                * @param datasetIndex the dataset index.
                */
            </comment>
            <constructor>
                <specifier>protected</specifier>
                <name>DialPointer</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>datasetIndex</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>radius</name>
                            </name>
                            = 0.9
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>datasetIndex</name>
                            </name>
                            =
                            <name>datasetIndex</name>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </constructor>

            <comment type="javadoc">/**
                * Returns the dataset index that the pointer maps to.
                *
                * @return The dataset index.
                *
                * @see #getDatasetIndex()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getDatasetIndex</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>datasetIndex</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the dataset index for the pointer and sends a
                * {@link DialLayerChangeEvent} to all registered listeners.
                *
                * @param index the index.
                *
                * @see #getDatasetIndex()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setDatasetIndex</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>index</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>datasetIndex</name>
                            </name>
                            =
                            <name>index</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>DialLayerChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the radius of the pointer, as a percentage of the dial's
                * framing rectangle.
                *
                * @return The radius.
                *
                * @see #setRadius(double)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>double</name>
                </type>
                <name>getRadius</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <name><name>this</name>.
                                <name>radius</name>
                            </name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Sets the radius of the pointer and sends a
                * {@link DialLayerChangeEvent} to all registered listeners.
                *
                * @param radius the radius.
                *
                * @see #getRadius()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setRadius</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>radius</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <expr_stmt>
                        <expr>
                            <name><name>this</name>.
                                <name>radius</name>
                            </name>
                            =
                            <name>radius</name>
                        </expr>
                        ;
                    </expr_stmt>
                    <expr_stmt>
                        <expr>
                            <call>
                                <name>notifyListeners</name>
                                <argument_list>(
                                    <argument>
                                        <expr>new
                                            <call>
                                                <name>DialLayerChangeEvent</name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>this</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; to indicate that this layer should be
                * clipped within the dial window.
                *
                * @return &lt;code&gt;true&lt;/code&gt;.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isClippedToWindow</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return <expr>true</expr>;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Checks this instance for equality with an arbitrary object.
                *
                * @param obj the object (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return A boolean.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>equals</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Object</name>
                            </type>
                            <name>obj</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <name>obj</name>
                                ==
                                <name>this</name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>true</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>!(<name>obj</name>
                                <name>instanceof</name>
                                <name>DialPointer</name>)
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>DialPointer</name>
                            </type>
                            <name>that</name> =
                            <init>
                                <expr>(<name>DialPointer</name>)
                                    <name>obj</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>datasetIndex</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>datasetIndex</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <if>if
                        <condition>(
                            <expr>
                                <name><name>this</name>.
                                    <name>radius</name>
                                </name>
                                !=
                                <name><name>that</name>.
                                    <name>radius</name>
                                </name>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return <expr>false</expr>;
                                </return>
                                }
                            </block>
                        </then>
                    </if>
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>equals</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>obj</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a hash code.
                *
                * @return A hash code.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>hashCode</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>23</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <expr_stmt>
                        <expr>
                            <name>result</name>
                            =
                            <call>
                                <name><name>HashUtilities</name>.
                                    <name>hashCode</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>result</name>
                                        </expr>
                                    </argument>
                                    ,
                                    <argument>
                                        <expr>
                                            <name><name>this</name>.
                                                <name>radius</name>
                                            </name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </expr_stmt>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a clone of the pointer.
                *
                * @return a clone.
                *
                * @throws CloneNotSupportedException if one of the attributes cannot
                * be cloned.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Object</name>
                </type>
                <name>clone</name>
                <parameter_list>()</parameter_list>
                <throws>throws
                    <argument>
                        <expr>
                            <name>CloneNotSupportedException</name>
                        </expr>
                    </argument>
                </throws>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>super</name>.
                                    <name>clone</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * A dial pointer that draws a thin line (like a pin).
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class <name>Pin</name>
                <super>
                    <extends>extends
                        <name>DialPointer</name>
                    </extends>
                </super>
                <block>{

                    <comment type="javadoc">/** For serialization. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>serialVersionUID</name> =
                            <init>
                                <expr>-8445860485367689750L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** The paint. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>transient</name>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/** The stroke. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>transient</name>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Creates a new instance.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Pin</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>this</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Creates a new instance.
                        *
                        * @param datasetIndex the dataset index.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Pin</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>datasetIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>datasetIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>paint</name>
                                    </name>
                                    =
                                    <name><name>Color</name>.
                                        <name>red</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>stroke</name>
                                    </name>
                                    = new
                                    <call>
                                        <name>BasicStroke</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>3.0f</expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>BasicStroke</name>.
                                                        <name>CAP_ROUND</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>BasicStroke</name>.
                                                        <name>JOIN_BEVEL</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Returns the paint.
                        *
                        * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                        *
                        * @see #setPaint(Paint)
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Paint</name>
                        </type>
                        <name>getPaint</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>this</name>.
                                        <name>paint</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Sets the paint and sends a {@link DialLayerChangeEvent} to all
                        * registered listeners.
                        *
                        * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                        *
                        * @see #getPaint()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setPaint</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Paint</name>
                                    </type>
                                    <name>paint</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>paint</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Null 'paint' argument."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>paint</name>
                                    </name>
                                    =
                                    <name>paint</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>notifyListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>DialLayerChangeEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>this</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns the stroke.
                        *
                        * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                        *
                        * @see #setStroke(Stroke)
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Stroke</name>
                        </type>
                        <name>getStroke</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>this</name>.
                                        <name>stroke</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Sets the stroke and sends a {@link DialLayerChangeEvent} to all
                        * registered listeners.
                        *
                        * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                        *
                        * @see #getStroke()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setStroke</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Stroke</name>
                                    </type>
                                    <name>stroke</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>stroke</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Null 'stroke' argument."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>stroke</name>
                                    </name>
                                    =
                                    <name>stroke</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>notifyListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>DialLayerChangeEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>this</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Draws the pointer.
                        *
                        * @param g2 the graphics target.
                        * @param plot the plot.
                        * @param frame the dial's reference frame.
                        * @param view the dial's view.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>draw</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Graphics2D</name>
                                    </type>
                                    <name>g2</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>DialPlot</name>
                                    </type>
                                    <name>plot</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Rectangle2D</name>
                                    </type>
                                    <name>frame</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Rectangle2D</name>
                                    </type>
                                    <name>view</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>setPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>paint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>setStroke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>stroke</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Rectangle2D</name>
                                    </type>
                                    <name>arcRect</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>DialPlot</name>.
                                                    <name>rectangleByRadius</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>frame</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>radius</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>radius</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>plot</name>.
                                                    <name>getValue</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>datasetIndex</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>DialScale</name>
                                    </type>
                                    <name>scale</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>plot</name>.
                                                    <name>getScaleForDataset</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>datasetIndex</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>angle</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>scale</name>.
                                                    <name>valueToAngle</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Arc2D</name>
                                    </type>
                                    <name>arc</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Arc2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>arcRect</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>angle</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>Arc2D</name>.
                                                                <name>OPEN</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Point2D</name>
                                    </type>
                                    <name>pt</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>arc</name>.
                                                    <name>getEndPoint</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Line2D</name>
                                    </type>
                                    <name>line</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Line2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>frame</name>.
                                                                    <name>getCenterX</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>frame</name>.
                                                                    <name>getCenterY</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>pt</name>.
                                                                    <name>getX</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>pt</name>.
                                                                    <name>getY</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Tests this pointer for equality with an arbitrary object.
                        *
                        * @param obj the object (&lt;code&gt;null&lt;/code&gt; permitted).
                        *
                        * @return A boolean.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        ==
                                        <name>this</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!(<name>obj</name>
                                        <name>instanceof</name>
                                        <name><name>DialPointer</name>.
                                            <name>Pin</name>
                                        </name>
                                        )
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>DialPointer</name>.
                                            <name>Pin</name>
                                        </name>
                                    </type>
                                    <name>that</name> =
                                    <init>
                                        <expr>(
                                            <name><name>DialPointer</name>.
                                                <name>Pin</name>
                                            </name>
                                            )
                                            <name>obj</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>PaintUtilities</name>.
                                                <name>equal</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>paint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>that</name>.
                                                            <name>paint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>this</name>.<name>stroke</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>that</name>.
                                                            <name>stroke</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>obj</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns a hash code for this instance.
                        *
                        * @return A hash code.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>hashCode</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>result</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>super</name>.
                                                    <name>hashCode</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    =
                                    <call>
                                        <name><name>HashUtilities</name>.
                                            <name>hashCode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>result</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>paint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    =
                                    <call>
                                        <name><name>HashUtilities</name>.
                                            <name>hashCode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>result</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>stroke</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>result</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Provides serialization support.
                        *
                        * @param stream the output stream.
                        *
                        * @throws IOException if there is an I/O error.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>writeObject</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ObjectOutputStream</name>
                                    </type>
                                    <name>stream</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>stream</name>.
                                            <name>defaultWriteObject</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>writePaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>paint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>writeStroke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>stroke</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Provides serialization support.
                        *
                        * @param stream the input stream.
                        *
                        * @throws IOException if there is an I/O error.
                        * @throws ClassNotFoundException if there is a classpath problem.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>readObject</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ObjectInputStream</name>
                                    </type>
                                    <name>stream</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                            ,
                            <argument>
                                <expr>
                                    <name>ClassNotFoundException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>stream</name>.
                                            <name>defaultReadObject</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>paint</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>readPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>stroke</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>readStroke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>

            <comment type="javadoc">/**
                * A dial pointer.
                */
            </comment>
            <class>
                <specifier>public</specifier>
                <specifier>static</specifier> class <name>Pointer</name>
                <super>
                    <extends>extends
                        <name>DialPointer</name>
                    </extends>
                </super>
                <block>{

                    <comment type="javadoc">/** For serialization. */</comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>static</specifier>
                                <specifier>final</specifier>
                                <name>long</name>
                            </type>
                            <name>serialVersionUID</name> =
                            <init>
                                <expr>-4180500011963176960L</expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * The radius that defines the width of the pointer at the base.
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>double</name>
                            </type>
                            <name>widthRadius</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * The fill paint.
                        *
                        * @since 1.0.8
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>transient</name>
                                <name>Paint</name>
                            </type>
                            <name>fillPaint</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * The outline paint.
                        *
                        * @since 1.0.8
                        */
                    </comment>
                    <decl_stmt>
                        <decl>
                            <type>
                                <specifier>private</specifier>
                                <name>transient</name>
                                <name>Paint</name>
                            </type>
                            <name>outlinePaint</name>
                        </decl>
                        ;
                    </decl_stmt>

                    <comment type="javadoc">/**
                        * Creates a new instance.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Pointer</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>this</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>0</expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Creates a new instance.
                        *
                        * @param datasetIndex the dataset index.
                        */
                    </comment>
                    <constructor>
                        <specifier>public</specifier>
                        <name>Pointer</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>datasetIndex</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>super</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>datasetIndex</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>widthRadius</name>
                                    </name>
                                    = 0.05
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>fillPaint</name>
                                    </name>
                                    =
                                    <name><name>Color</name>.
                                        <name>gray</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>outlinePaint</name>
                                    </name>
                                    =
                                    <name><name>Color</name>.
                                        <name>black</name>
                                    </name>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </constructor>

                    <comment type="javadoc">/**
                        * Returns the width radius.
                        *
                        * @return The width radius.
                        *
                        * @see #setWidthRadius(double)
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>double</name>
                        </type>
                        <name>getWidthRadius</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>this</name>.
                                        <name>widthRadius</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Sets the width radius and sends a {@link DialLayerChangeEvent} to
                        * all registered listeners.
                        *
                        * @param radius the radius
                        *
                        * @see #getWidthRadius()
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setWidthRadius</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>radius</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>widthRadius</name>
                                    </name>
                                    =
                                    <name>radius</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>notifyListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>DialLayerChangeEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>this</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns the fill paint.
                        *
                        * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                        *
                        * @see #setFillPaint(Paint)
                        *
                        * @since 1.0.8
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Paint</name>
                        </type>
                        <name>getFillPaint</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>this</name>.
                                        <name>fillPaint</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Sets the fill paint and sends a {@link DialLayerChangeEvent} to all
                        * registered listeners.
                        *
                        * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                        *
                        * @see #getFillPaint()
                        *
                        * @since 1.0.8
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setFillPaint</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Paint</name>
                                    </type>
                                    <name>paint</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>paint</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Null 'paint' argument."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>fillPaint</name>
                                    </name>
                                    =
                                    <name>paint</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>notifyListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>DialLayerChangeEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>this</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns the outline paint.
                        *
                        * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                        *
                        * @see #setOutlinePaint(Paint)
                        *
                        * @since 1.0.8
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>Paint</name>
                        </type>
                        <name>getOutlinePaint</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <return>return
                                <expr>
                                    <name><name>this</name>.
                                        <name>outlinePaint</name>
                                    </name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Sets the outline paint and sends a {@link DialLayerChangeEvent} to
                        * all registered listeners.
                        *
                        * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                        *
                        * @see #getOutlinePaint()
                        *
                        * @since 1.0.8
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>setOutlinePaint</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Paint</name>
                                    </type>
                                    <name>paint</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>paint</name>
                                        ==
                                        <name>null</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <throw>throw
                                            <expr>new
                                                <call>
                                                    <name>IllegalArgumentException</name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>"Null 'paint' argument."</expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            ;
                                        </throw>
                                        }
                                    </block>
                                </then>
                            </if>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>outlinePaint</name>
                                    </name>
                                    =
                                    <name>paint</name>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name>notifyListeners</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>DialLayerChangeEvent</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>
                                                                    <name>this</name>
                                                                </expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Draws the pointer.
                        *
                        * @param g2 the graphics target.
                        * @param plot the plot.
                        * @param frame the dial's reference frame.
                        * @param view the dial's view.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>void</name>
                        </type>
                        <name>draw</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Graphics2D</name>
                                    </type>
                                    <name>g2</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>DialPlot</name>
                                    </type>
                                    <name>plot</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Rectangle2D</name>
                                    </type>
                                    <name>frame</name>
                                </decl>
                            </param>
                            ,
                            <param>
                                <decl>
                                    <type>
                                        <name>Rectangle2D</name>
                                    </type>
                                    <name>view</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>setPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>Color</name>.
                                                        <name>blue</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>setStroke</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <call>
                                                        <name>BasicStroke</name>
                                                        <argument_list>(
                                                            <argument>
                                                                <expr>1.0f</expr>
                                                            </argument>
                                                            )
                                                        </argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Rectangle2D</name>
                                    </type>
                                    <name>lengthRect</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>DialPlot</name>.
                                                    <name>rectangleByRadius</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>frame</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>radius</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>radius</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Rectangle2D</name>
                                    </type>
                                    <name>widthRect</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>DialPlot</name>.
                                                    <name>rectangleByRadius</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>frame</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>widthRadius</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>widthRadius</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>value</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>plot</name>.
                                                    <name>getValue</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>datasetIndex</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>DialScale</name>
                                    </type>
                                    <name>scale</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>plot</name>.
                                                    <name>getScaleForDataset</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name><name>this</name>.
                                                                <name>datasetIndex</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>double</name>
                                    </type>
                                    <name>angle</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>scale</name>.
                                                    <name>valueToAngle</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>value</name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Arc2D</name>
                                    </type>
                                    <name>arc1</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Arc2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>lengthRect</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>angle</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>Arc2D</name>.
                                                                <name>OPEN</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Point2D</name>
                                    </type>
                                    <name>pt1</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>arc1</name>.
                                                    <name>getEndPoint</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Arc2D</name>
                                    </type>
                                    <name>arc2</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Arc2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>widthRect</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>angle</name>
                                                            - 90.0
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>180.0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>Arc2D</name>.
                                                                <name>OPEN</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Point2D</name>
                                    </type>
                                    <name>pt2</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>arc2</name>.
                                                    <name>getStartPoint</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Point2D</name>
                                    </type>
                                    <name>pt3</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>arc2</name>.
                                                    <name>getEndPoint</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Arc2D</name>
                                    </type>
                                    <name>arc3</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Arc2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <name>widthRect</name>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name>angle</name>
                                                            - 180.0
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>0.0</expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <name><name>Arc2D</name>.
                                                                <name>OPEN</name>
                                                            </name>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Point2D</name>
                                    </type>
                                    <name>pt4</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>arc3</name>.
                                                    <name>getStartPoint</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>GeneralPath</name>
                                    </type>
                                    <name>gp</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name>GeneralPath</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>gp</name>.
                                            <name>moveTo</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt1</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt1</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>gp</name>.
                                            <name>lineTo</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt2</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt2</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>gp</name>.
                                            <name>lineTo</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt4</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt4</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>gp</name>.
                                            <name>lineTo</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt3</name>.
                                                            <name>getX</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>(<name>float</name>)
                                                    <call>
                                                        <name><name>pt3</name>.
                                                            <name>getY</name>
                                                        </name>
                                                        <argument_list>()</argument_list>
                                                    </call>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>gp</name>.
                                            <name>closePath</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>setPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>fillPaint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>fill</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>gp</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>setPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>outlinePaint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Line2D</name>
                                    </type>
                                    <name>line</name> =
                                    <init>
                                        <expr>new
                                            <call>
                                                <name><name>Line2D</name>.
                                                    <name>Double</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>frame</name>.
                                                                    <name>getCenterX</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>frame</name>.
                                                                    <name>getCenterY</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>pt1</name>.
                                                                    <name>getX</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    ,
                                                    <argument>
                                                        <expr>
                                                            <call>
                                                                <name><name>pt1</name>.
                                                                    <name>getY</name>
                                                                </name>
                                                                <argument_list>()</argument_list>
                                                            </call>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>line</name>.
                                            <name>setLine</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>pt2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>pt3</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>line</name>.
                                            <name>setLine</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>pt3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>pt1</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>line</name>.
                                            <name>setLine</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>pt2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>pt1</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>line</name>.
                                            <name>setLine</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>pt2</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>pt4</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>

                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>line</name>.
                                            <name>setLine</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>pt3</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>pt4</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>g2</name>.
                                            <name>draw</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>line</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Tests this pointer for equality with an arbitrary object.
                        *
                        * @param obj the object (&lt;code&gt;null&lt;/code&gt; permitted).
                        *
                        * @return A boolean.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>boolean</name>
                        </type>
                        <name>equals</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>Object</name>
                                    </type>
                                    <name>obj</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <block>{
                            <if>if
                                <condition>(
                                    <expr>
                                        <name>obj</name>
                                        ==
                                        <name>this</name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>true</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!(<name>obj</name>
                                        <name>instanceof</name>
                                        <name><name>DialPointer</name>.
                                            <name>Pointer</name>
                                        </name>
                                        )
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name><name>DialPointer</name>.
                                            <name>Pointer</name>
                                        </name>
                                    </type>
                                    <name>that</name> =
                                    <init>
                                        <expr>(
                                            <name><name>DialPointer</name>.
                                                <name>Pointer</name>
                                            </name>
                                            )
                                            <name>obj</name>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>

                            <if>if
                                <condition>(
                                    <expr>
                                        <name><name>this</name>.
                                            <name>widthRadius</name>
                                        </name>
                                        !=
                                        <name><name>that</name>.
                                            <name>widthRadius</name>
                                        </name>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>PaintUtilities</name>.
                                                <name>equal</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>fillPaint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>that</name>.
                                                            <name>fillPaint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <if>if
                                <condition>(
                                    <expr>!
                                        <call>
                                            <name><name>PaintUtilities</name>.
                                                <name>equal</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>this</name>.
                                                            <name>outlinePaint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                ,
                                                <argument>
                                                    <expr>
                                                        <name><name>that</name>.
                                                            <name>outlinePaint</name>
                                                        </name>
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return <expr>false</expr>;
                                        </return>
                                        }
                                    </block>
                                </then>
                            </if>
                            <return>return
                                <expr>
                                    <call>
                                        <name><name>super</name>.
                                            <name>equals</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>obj</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Returns a hash code for this instance.
                        *
                        * @return A hash code.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>public</specifier>
                            <name>int</name>
                        </type>
                        <name>hashCode</name>
                        <parameter_list>()</parameter_list>
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>int</name>
                                    </type>
                                    <name>result</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>super</name>.
                                                    <name>hashCode</name>
                                                </name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    =
                                    <call>
                                        <name><name>HashUtilities</name>.
                                            <name>hashCode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>result</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>widthRadius</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    =
                                    <call>
                                        <name><name>HashUtilities</name>.
                                            <name>hashCode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>result</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>fillPaint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    =
                                    <call>
                                        <name><name>HashUtilities</name>.
                                            <name>hashCode</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>result</name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>outlinePaint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <return>return
                                <expr>
                                    <name>result</name>
                                </expr>
                                ;
                            </return>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Provides serialization support.
                        *
                        * @param stream the output stream.
                        *
                        * @throws IOException if there is an I/O error.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>writeObject</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ObjectOutputStream</name>
                                    </type>
                                    <name>stream</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>stream</name>.
                                            <name>defaultWriteObject</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>writePaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>fillPaint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>writePaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name><name>this</name>.
                                                        <name>outlinePaint</name>
                                                    </name>
                                                </expr>
                                            </argument>
                                            ,
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    <comment type="javadoc">/**
                        * Provides serialization support.
                        *
                        * @param stream the input stream.
                        *
                        * @throws IOException if there is an I/O error.
                        * @throws ClassNotFoundException if there is a classpath problem.
                        */
                    </comment>
                    <function>
                        <type>
                            <specifier>private</specifier>
                            <name>void</name>
                        </type>
                        <name>readObject</name>
                        <parameter_list>(
                            <param>
                                <decl>
                                    <type>
                                        <name>ObjectInputStream</name>
                                    </type>
                                    <name>stream</name>
                                </decl>
                            </param>
                            )
                        </parameter_list>
                        <throws>throws
                            <argument>
                                <expr>
                                    <name>IOException</name>
                                </expr>
                            </argument>
                            ,
                            <argument>
                                <expr>
                                    <name>ClassNotFoundException</name>
                                </expr>
                            </argument>
                        </throws>
                        <block>{
                            <expr_stmt>
                                <expr>
                                    <call>
                                        <name><name>stream</name>.
                                            <name>defaultReadObject</name>
                                        </name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>fillPaint</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>readPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            <expr_stmt>
                                <expr>
                                    <name><name>this</name>.
                                        <name>outlinePaint</name>
                                    </name>
                                    =
                                    <call>
                                        <name><name>SerialUtilities</name>.
                                            <name>readPaint</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>stream</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                    </function>

                    }
                </block>
            </class>

            }
        </block>
    </class>
</unit>

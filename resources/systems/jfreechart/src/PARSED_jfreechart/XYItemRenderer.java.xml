<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\chart\renderer\xy\XYItemRenderer.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * -------------------
        * XYItemRenderer.java
        * -------------------
        * (C) Copyright 2001-2007, by Object Refinery Limited and Contributors.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): Mark Watson (www.markwatson.com);
        * Sylvain Vieujot;
        * Focus Computer Services Limited;
        * Richard Atkinson;
        *
        * Changes
        * -------
        * 19-Oct-2001 : Version 1, based on code by Mark Watson (DG);
        * 22-Oct-2001 : Renamed DataSource.java --&gt; Dataset.java etc. (DG);
        * 13-Dec-2001 : Changed return type of drawItem from void --&gt; Shape. The area
        * returned can be used as the tooltip region.
        * 23-Jan-2002 : Added DrawInfo parameter to drawItem() method (DG);
        * 28-Mar-2002 : Added a property change listener mechanism. Now renderers do
        * not have to be immutable (DG);
        * 04-Apr-2002 : Added the initialise() method (DG);
        * 09-Apr-2002 : Removed the translated zero from the drawItem method, it can
        * be calculated inside the initialise method if it is required.
        * Added a new getToolTipGenerator() method. Changed the return
        * type for drawItem() to void (DG);
        * 24-May-2002 : Added ChartRenderingInfo the initialise method API (DG);
        * 25-Jun-2002 : Removed redundant import (DG);
        * 20-Aug-2002 : Added get/setURLGenerator methods to interface (DG);
        * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG);
        * 18-Nov-2002 : Added methods for drawing grid lines (DG);
        * 17-Jan-2003 : Moved plot classes into a separate package (DG);
        * 27-Jan-2003 : Added shape lookup table (DG);
        * 05-Jun-2003 : Added domain and range grid bands (sponsored by Focus Computer
        * Services Ltd) (DG);
        * 27-Jul-2003 : Added getRangeType() to support stacked XY area charts (RA);
        * 16-Sep-2003 : Changed ChartRenderingInfo --&gt; PlotRenderingInfo (DG);
        * 25-Feb-2004 : Replaced CrosshairInfo with CrosshairState. Renamed
        * XYToolTipGenerator --&gt; XYItemLabelGenerator (DG);
        * 26-Feb-2004 : Added lots of new methods (DG);
        * 30-Apr-2004 : Added getRangeExtent() method (DG);
        * 06-May-2004 : Added methods for controlling item label visibility (DG);
        * 13-May-2004 : Removed property change listener mechanism (DG);
        * 18-May-2004 : Added item label font and paint methods (DG);
        * 10-Sep-2004 : Removed redundant getRangeType() method (DG);
        * 06-Oct-2004 : Replaced getRangeExtent() with findRangeBounds() and added
        * findDomainBounds (DG);
        * 23-Nov-2004 : Changed drawRangeGridLine() --&gt; drawRangeLine() (DG);
        * 07-Jan-2005 : Removed deprecated method (DG);
        * 24-Feb-2005 : Now extends LegendItemSource (DG);
        * 20-Apr-2005 : Renamed XYLabelGenerator --&gt; XYItemLabelGenerator (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG);
        * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke,
        * outlineStroke, shape, itemLabelsVisible, itemLabelFont,
        * itemLabelPaint, positiveItemLabelPosition,
        * negativeItemLabelPosition and createEntities override
        * fields (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>renderer</name>.
            <name>xy</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Font</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Graphics2D</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Paint</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Shape</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.
            <name>Stroke</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>awt</name>.<name>geom</name>.
            <name>Rectangle2D</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItem</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.
            <name>LegendItemSource</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>annotations</name>.
            <name>XYAnnotation</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>axis</name>.
            <name>ValueAxis</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>RendererChangeEvent</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>event</name>.
            <name>RendererChangeListener</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>ItemLabelPosition</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>XYItemLabelGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>XYSeriesLabelGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>labels</name>.
            <name>XYToolTipGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>CrosshairState</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>Marker</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>PlotRenderingInfo</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>plot</name>.
            <name>XYPlot</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>chart</name>.<name>urls</name>.
            <name>XYURLGenerator</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>Range</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.<name>xy</name>.
            <name>XYDataset</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>ui</name>.
            <name>Layer</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * Interface for rendering the visual representation of a single (x, y) item on
        * an {@link XYPlot}.
        * &lt;p&gt;
        * To support cloning charts, it is recommended that renderers implement both
        * the {@link Cloneable} and &lt;code&gt;PublicCloneable&lt;/code&gt; interfaces.
        */
    </comment>
    <class type="interface">
        <specifier>public</specifier>
        interface <name>XYItemRenderer</name>
        <super>
            <extends>extends
                <name>LegendItemSource</name>
            </extends>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Initialises the renderer then returns the number of 'passes' through the
                * data that the renderer will require (usually just one). This method
                * will be called before the first item is rendered, giving the renderer
                * an opportunity to initialise any state information it wants to maintain.
                * The renderer can do nothing if it chooses.
                *
                * @param g2 the graphics device.
                * @param dataArea the area inside the axes.
                * @param plot the plot.
                * @param dataset the dataset.
                * @param info an optional info collection object to return data back to
                * the caller.
                *
                * @return The number of passes the renderer requires.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYItemRendererState</name>
                </type>
                <name>initialise</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the number of passes through the data required by the renderer.
                *
                * @return The pass count.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>int</name>
                </type>
                <name>getPassCount</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a boolean that indicates whether or not the specified item
                * should be drawn (this is typically used to hide an entire series).
                *
                * @param series the series index.
                * @param item the item index.
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getItemVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a boolean that indicates whether or not the specified series
                * should be drawn (this is typically used to hide an entire series).
                *
                * @param series the series index.
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls the visibility of ALL series. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesVisible(int)} and
                * {@link #getBaseSeriesVisible()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisible</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisible(int, Boolean)}
                * and {@link #setBaseSeriesVisible(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. This flag
                * overrides the per series and default settings - you must set it to
                * &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisible(int, Boolean,
                * boolean)} and {@link #setBaseSeriesVisible(boolean, boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls whether a series is visible.
                *
                * @param series the series index (zero-based).
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible and, if
                * requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index.
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base visibility for all series.
                *
                * @return The base visibility.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBaseSeriesVisible</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param visible the flag.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility.
                * @param notify notify listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)</comment>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the series should be shown in the legend,
                * and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param series the series index.
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls the visibility of ALL series in the
                * legend. This flag overrides the per series and default settings - you
                * must set it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to
                * apply.
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesVisibleInLegend(int)}
                * and {@link #getBaseSeriesVisibleInLegend()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisibleInLegend</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                * This flag overrides the per series and default settings - you must set
                * it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisibleInLegend(int,
                * Boolean)} and {@link #setBaseSeriesVisibleInLegend(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls the visibility of ALL series in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                * This flag overrides the per series and default settings - you must set
                * it to &lt;code&gt;null&lt;/code&gt; if you want the other settings to apply.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesVisibleInLegend(int,
                * Boolean, boolean)} and {@link #setBaseSeriesVisibleInLegend(boolean,
                * boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the flag that controls whether a series is visible in the
                * legend. This method returns only the "per series" settings - to
                * incorporate the override and base settings as well, you need to use the
                * {@link #isSeriesVisibleInLegend(int)} method.
                *
                * @param series the series index (zero-based).
                *
                * @return The flag (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible in the legend
                * and sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the flag that controls whether a series is visible in the legend
                * and, if requested, sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index.
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base visibility in the legend for all series.
                *
                * @return The base visibility.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>getBaseSeriesVisibleInLegend</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility in the legend and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the flag.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility in the legend and, if requested, sends
                * a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility.
                * @param notify notify listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseSeriesVisibleInLegend</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// PAINT</comment>

            <comment type="javadoc">/**
                * Returns the paint used to fill data items as they are drawn.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used to fill an item drawn by the renderer.
                *
                * @param series the series index (zero-based).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the paint to be used for ALL series, and sends a
                * {@link RendererChangeEvent} to all registered listeners. If this is
                * &lt;code&gt;null&lt;/code&gt;, the renderer will use the paint for the series.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesPaint(int, Paint)} and
                * {@link #setBasePaint(Paint)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the paint used for a series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesPaint(int, Paint, boolean)?</comment>

            <comment type="javadoc">/**
                * Returns the base paint.
                *
                * @return The base paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBasePaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base paint and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBasePaint(int, Paint, boolean)?</comment>

            <comment type="line">// // FILL PAINT</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Returns the paint used to fill data items as they are drawn.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param row the row (or series) index (zero-based).</comment>
            <comment type="line">// * @param column the column (or category) index (zero-based).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @return The paint (never &lt;code&gt;null&lt;/code&gt;).</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public Paint getItemFillPaint(int row, int column);</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Returns the paint used to fill an item drawn by the renderer.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param series the series index (zero-based).</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public Paint getSeriesFillPaint(int series);</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Sets the paint used for a series and sends a</comment>
            <comment type="line">// * {@link RendererChangeEvent} to all registered listeners.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param series the series index (zero-based).</comment>
            <comment type="line">// * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public void setSeriesFillPaint(int series, Paint paint);</comment>
            <comment type="line">//</comment>
            <comment type="line">// // FIXME: add setSeriesFillPaint(int, Paint, boolean)?</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Returns the base paint.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @return The base paint (never &lt;code&gt;null&lt;/code&gt;).</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public Paint getBaseFillPaint();</comment>
            <comment type="line">//</comment>
            <comment type="line">// /**</comment>
            <comment type="line">// * Sets the base paint and sends a {@link RendererChangeEvent} to all</comment>
            <comment type="line">// * registered listeners.</comment>
            <comment type="line">// *</comment>
            <comment type="line">// * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).</comment>
            <comment type="line">// */</comment>
            <comment type="line">// public void setBaseFillPaint(Paint paint);</comment>
            <comment type="line">//</comment>
            <comment type="line">// // FIXME: add setBaseFillPaint(int, Paint, boolean)?</comment>

            <comment type="line">// OUTLINE PAINT</comment>

            <comment type="javadoc">/**
                * Returns the paint used to outline data items as they are drawn.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used to outline an item drawn by the renderer.
                *
                * @param series the series (zero-based index).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the paint used for a series outline and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?</comment>

            <comment type="javadoc">/**
                * Sets the outline paint for ALL series (optional).
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlinePaint(int,
                * Paint)} and {@link #setBaseOutlinePaint(Paint)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base outline paint.
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBaseOutlinePaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base outline paint and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlinePaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseOutlinePaint(Paint, boolean)?</comment>

            <comment type="line">// STROKE</comment>

            <comment type="javadoc">/**
                * Returns the stroke used to draw data items.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getItemStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the stroke used to draw the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the stroke for ALL series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesStroke(int, Stroke)}
                * and {@link #setBaseStroke(Stroke)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the stroke used for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesStroke(int, Stroke, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base stroke.
                *
                * @return The base stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getBaseStroke</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base stroke.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseStroke(Stroke, boolean) ?</comment>

            <comment type="line">// OUTLINE STROKE</comment>

            <comment type="javadoc">/**
                * Returns the stroke used to outline data items. The default
                * implementation passes control to the lookupSeriesOutlineStroke method.
                * You can override this method if you require different behaviour.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getItemOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the stroke used to outline the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The stroke (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the outline stroke for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesOutlineStroke(int,
                * Stroke)} and {@link #setBaseOutlineStroke(Stroke)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the outline stroke used for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base outline stroke.
                *
                * @return The stroke (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Stroke</name>
                </type>
                <name>getBaseOutlineStroke</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base outline stroke and sends a {@link RendererChangeEvent} to
                * all registered listeners.
                *
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseOutlineStroke</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?</comment>

            <comment type="line">// SHAPE</comment>

            <comment type="javadoc">/**
                * Returns a shape used to represent a data item.
                *
                * @param row the row (or series) index (zero-based).
                * @param column the column (or category) index (zero-based).
                *
                * @return The shape (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getItemShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a shape used to represent the items in a series.
                *
                * @param series the series (zero-based index).
                *
                * @return The shape (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>
            <comment type="javadoc">/**
                * Sets the shape for ALL series (optional) and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesShape(int, Shape)} and
                * {@link #setBaseShape(Shape)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the shape used for a series and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setSeriesShape(int, Shape, boolean) ?</comment>

            <comment type="javadoc">/**
                * Returns the base shape.
                *
                * @return The shape (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Shape</name>
                </type>
                <name>getBaseShape</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base shape and sends a {@link RendererChangeEvent} to all
                * registered listeners.
                *
                * @param shape the shape (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseShape</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Shape</name>
                            </type>
                            <name>shape</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// FIXME: add setBaseShape(Shape, boolean) ?</comment>

            <comment type="line">// ITEM LABELS VISIBLE</comment>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if an item label is visible, and
                * &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isItemLabelVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns &lt;code&gt;true&lt;/code&gt; if the item labels for a series are visible,
                * and &lt;code&gt;false&lt;/code&gt; otherwise.
                *
                * @param series the series index (zero-based).
                *
                * @return A boolean.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>isSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls whether or not the item labels for ALL series
                * are visible.
                *
                * @param visible the flag.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean)} and {@link #setBaseItemLabelsVisible(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls whether or not the item labels for ALL series
                * are visible.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean)} and {@link #setBaseItemLabelsVisible(boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the visibility of item labels for ALL series and, if requested,
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible a flag that controls whether or not the item labels are
                * visible (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify a flag that controls whether or not listeners are
                * notified.
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelsVisible(int,
                * Boolean, boolean)} and {@link #setBaseItemLabelsVisible(Boolean,
                * boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls the visibility of the item labels for a series.
                *
                * @param series the series index (zero-based).
                * @param visible the flag.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets a flag that controls the visibility of the item labels for a series.
                *
                * @param series the series index (zero-based).
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the visibility of item labels for a series and, if requested,
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param visible the visible flag.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base setting for item label visibility.
                *
                * @return A flag (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Boolean</name>
                </type>
                <name>getBaseItemLabelsVisible</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base flag that controls whether or not item labels are visible.
                *
                * @param visible the flag.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base setting for item label visibility.
                *
                * @param visible the flag (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base visibility for item labels and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param visible the visibility flag.
                * @param notify a flag that controls whether or not listeners are
                * notified.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelsVisible</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Boolean</name>
                            </type>
                            <name>visible</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// ITEM LABEL GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the item label generator for a data item.
                *
                * @param row the row index (zero based).
                * @param column the column index (zero based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYItemLabelGenerator</name>
                </type>
                <name>getItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label generator for a series.
                *
                * @param series the series index (zero based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYItemLabelGenerator</name>
                </type>
                <name>getSeriesItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label generator for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated As of version 1.0.6, this override setting should not be
                * used. You can use the base setting instead
                * ({@link #setBaseItemLabelGenerator(XYItemLabelGenerator)}).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label generator for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero based).
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base item label generator.
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYItemLabelGenerator</name>
                </type>
                <name>getBaseItemLabelGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label generator and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYItemLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// TOOL TIP GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the tool tip generator for a data item.
                *
                * @param row the row index (zero based).
                * @param column the column index (zero based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYToolTipGenerator</name>
                </type>
                <name>getToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the tool tip generator for a series.
                *
                * @param series the series index (zero based).
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYToolTipGenerator</name>
                </type>
                <name>getSeriesToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the tool tip generator for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated As of version 1.0.6, this override setting should not be
                * used. You can use the base setting instead
                * ({@link #setBaseToolTipGenerator(XYToolTipGenerator)}).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the tool tip generator for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero based).
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base tool tip generator.
                *
                * @return The generator (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYToolTipGenerator</name>
                </type>
                <name>getBaseToolTipGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base tool tip generator and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseToolTipGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYToolTipGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// URL GENERATOR</comment>

            <comment type="javadoc">/**
                * Returns the URL generator for HTML image maps.
                *
                * @return The URL generator (possibly null).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYURLGenerator</name>
                </type>
                <name>getURLGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the URL generator for HTML image maps.
                *
                * @param urlGenerator the URL generator (null permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setURLGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYURLGenerator</name>
                            </type>
                            <name>urlGenerator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">//// ITEM LABEL FONT ///////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the font for an item label.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The font (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the font used for all item labels. This may be
                * &lt;code&gt;null&lt;/code&gt;, in which case the per series font settings will apply.
                *
                * @return The font (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesItemLabelFont(int)} and
                * {@link #getBaseItemLabelFont()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getItemLabelFont</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label font for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners. You can set
                * this to &lt;code&gt;null&lt;/code&gt; if you prefer to set the font on a per series
                * basis.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelFont(int,
                * Font)} and {@link #setBaseItemLabelFont(Font)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the font for all the item labels in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The font (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getSeriesItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label font for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param font the font (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base item label font (this is used when no other font
                * setting is available).
                *
                * @return The font (&lt;code&gt;never&lt;/code&gt; null).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Font</name>
                </type>
                <name>getBaseItemLabelFont</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label font and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param font the font (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelFont</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Font</name>
                            </type>
                            <name>font</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">//// ITEM LABEL PAINT /////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * Returns the paint used to draw an item label.
                *
                * @param row the row index (zero based).
                * @param column the column index (zero based).
                *
                * @return The paint (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used for all item labels. This may be
                * &lt;code&gt;null&lt;/code&gt;, in which case the per series paint settings will
                * apply.
                *
                * @return The paint (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #getSeriesItemLabelPaint(int)}
                * and {@link #getBaseItemLabelPaint()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getItemLabelPaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label paint for ALL series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on {@link #setSeriesItemLabelPaint(int,
                * Paint)} and {@link #setBaseItemLabelPaint(Paint)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the paint used to draw the item labels for a series.
                *
                * @param series the series index (zero based).
                *
                * @return The paint (possibly &lt;code&gt;null&lt;code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getSeriesItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label paint for a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series (zero based index).
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base item label paint.
                *
                * @return The paint (never &lt;code&gt;null&lt;code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Paint</name>
                </type>
                <name>getBaseItemLabelPaint</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label paint and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseItemLabelPaint</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// POSITIVE ITEM LABEL POSITION...</comment>

            <comment type="javadoc">/**
                * Returns the item label position for positive values.
                *
                * @param row the row index (zero-based).
                * @param column the column index (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for positive values in ALL series.
                *
                * @return The item label position (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #getSeriesPositiveItemLabelPosition(int)}
                * and {@link #getBasePositiveItemLabelPosition()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getPositiveItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for positive values in ALL series, and
                * sends a {@link RendererChangeEvent} to all registered listeners. You
                * need to set this to &lt;code&gt;null&lt;/code&gt; to expose the settings for
                * individual series.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition)}
                * and {@link #setBasePositiveItemLabelPosition(ItemLabelPosition)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the positive item label position for ALL series and (if requested)
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition,
                * boolean)} and {@link #setBasePositiveItemLabelPosition(
                * ItemLabelPosition, boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for all positive values in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for all positive values in a series and
                * sends a {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for all positive values in a series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesPositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base positive item label position.
                *
                * @return The position (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getBasePositiveItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base positive item label position.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base positive item label position and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify registered listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBasePositiveItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// NEGATIVE ITEM LABEL POSITION...</comment>

            <comment type="javadoc">/**
                * Returns the item label position for negative values. This method can be
                * overridden to provide customisation of the item label position for
                * individual data items.
                *
                * @param row the row index (zero-based).
                * @param column the column (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>row</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>column</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for negative values in ALL series.
                *
                * @return The item label position (possibly &lt;code&gt;null&lt;/code&gt;).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #getSeriesNegativeItemLabelPosition(int)}
                * and {@link #getBaseNegativeItemLabelPosition()}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getNegativeItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in ALL series, and
                * sends a {@link RendererChangeEvent} to all registered listeners. You
                * need to set this to &lt;code&gt;null&lt;/code&gt; to expose the settings for
                * individual series.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition)}
                * and {@link #setBaseNegativeItemLabelPosition(ItemLabelPosition)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in ALL series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                *
                * @deprecated This method should no longer be used (as of version 1.0.6).
                * It is sufficient to rely on
                * {@link #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition,
                * boolean)} and {@link #setBaseNegativeItemLabelPosition(
                * ItemLabelPosition, boolean)}.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the item label position for all negative values in a series.
                *
                * @param series the series index (zero-based).
                *
                * @return The item label position (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in a series and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the item label position for negative values in a series and (if
                * requested) sends a {@link RendererChangeEvent} to all registered
                * listeners.
                *
                * @param series the series index (zero-based).
                * @param position the position (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param notify notify registered listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setSeriesNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the base item label position for negative values.
                *
                * @return The position (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>ItemLabelPosition</name>
                </type>
                <name>getBaseNegativeItemLabelPosition</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base item label position for negative values and sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the base negative item label position and, if requested, sends a
                * {@link RendererChangeEvent} to all registered listeners.
                *
                * @param position the position (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param notify notify registered listeners?
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setBaseNegativeItemLabelPosition</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>ItemLabelPosition</name>
                            </type>
                            <name>position</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>boolean</name>
                            </type>
                            <name>notify</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="line">// CREATE ENTITIES</comment>
            <comment type="line">// FIXME: these methods should be defined</comment>

            <comment type="line">// public boolean getItemCreateEntity(int series, int item);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public Boolean getSeriesCreateEntities(int series);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setSeriesCreateEntities(int series, Boolean create);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setSeriesCreateEntities(int series, Boolean create,</comment>
            <comment type="line">// boolean notify);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public boolean getBaseCreateEntities();</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setBaseCreateEntities(boolean create);</comment>
            <comment type="line">//</comment>
            <comment type="line">// public void setBaseCreateEntities(boolean create, boolean notify);</comment>

            <comment type="javadoc">/**
                * Adds an annotation and sends a {@link RendererChangeEvent} to all
                * registered listeners. The annotation is added to the foreground
                * layer.
                *
                * @param annotation the annotation (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addAnnotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYAnnotation</name>
                            </type>
                            <name>annotation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Adds an annotation to the specified layer.
                *
                * @param annotation the annotation (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param layer the layer (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addAnnotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYAnnotation</name>
                            </type>
                            <name>annotation</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Layer</name>
                            </type>
                            <name>layer</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes the specified annotation and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                *
                * @param annotation the annotation to remove (&lt;code&gt;null&lt;/code&gt; not
                * permitted).
                *
                * @return A boolean to indicate whether or not the annotation was
                * successfully removed.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>boolean</name>
                </type>
                <name>removeAnnotation</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYAnnotation</name>
                            </type>
                            <name>annotation</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes all annotations and sends a {@link RendererChangeEvent}
                * to all registered listeners.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeAnnotations</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Draws all the annotations for the specified layer.
                *
                * @param g2 the graphics device.
                * @param dataArea the data area.
                * @param domainAxis the domain axis.
                * @param rangeAxis the range axis.
                * @param layer the layer.
                * @param info the plot rendering info.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawAnnotations</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>domainAxis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>rangeAxis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Layer</name>
                            </type>
                            <name>layer</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Called for each item to be plotted.
                * &lt;p&gt;
                * The {@link XYPlot} can make multiple passes through the dataset,
                * depending on the value returned by the renderer's initialise() method.
                *
                * @param g2 the graphics device.
                * @param state the renderer state.
                * @param dataArea the area within which the data is being rendered.
                * @param info collects drawing info.
                * @param plot the plot (can be used to obtain standard color
                * information etc).
                * @param domainAxis the domain axis.
                * @param rangeAxis the range axis.
                * @param dataset the dataset.
                * @param series the series index (zero-based).
                * @param item the item index (zero-based).
                * @param crosshairState crosshair information for the plot
                * (&lt;code&gt;null&lt;/code&gt; permitted).
                * @param pass the pass index.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYItemRendererState</name>
                            </type>
                            <name>state</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>PlotRenderingInfo</name>
                            </type>
                            <name>info</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>domainAxis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>rangeAxis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>item</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>CrosshairState</name>
                            </type>
                            <name>crosshairState</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>pass</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a legend item for a series from a dataset.
                *
                * @param datasetIndex the dataset index.
                * @param series the series (zero-based index).
                *
                * @return The legend item (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>LegendItem</name>
                </type>
                <name>getLegendItem</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>datasetIndex</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>int</name>
                            </type>
                            <name>series</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the legend item label generator.
                *
                * @return The legend item label generator (never &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYSeriesLabelGenerator</name>
                </type>
                <name>getLegendItemLabelGenerator</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the legend item label generator.
                *
                * @param generator the generator (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setLegendItemLabelGenerator</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYSeriesLabelGenerator</name>
                            </type>
                            <name>generator</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Fills a band between two values on the axis. This can be used to color
                * bands between the grid lines.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the domain axis.
                * @param dataArea the data area.
                * @param start the start value.
                * @param end the end value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>fillDomainGridBand</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Fills a band between two values on the range axis. This can be used to
                * color bands between the grid lines.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the range axis.
                * @param dataArea the data area.
                * @param start the start value.
                * @param end the end value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>fillRangeGridBand</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>start</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>end</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a grid line against the domain axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the value axis.
                * @param dataArea the area for plotting data (not yet adjusted for any
                * 3D effect).
                * @param value the value.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawDomainGridLine</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a grid line against the range axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the value axis.
                * @param dataArea the area for plotting data (not yet adjusted for any
                * 3D effect).
                * @param value the value.
                * @param paint the paint (&lt;code&gt;null&lt;/code&gt; not permitted).
                * @param stroke the stroke (&lt;code&gt;null&lt;/code&gt; not permitted).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawRangeLine</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>double</name>
                            </type>
                            <name>value</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Paint</name>
                            </type>
                            <name>paint</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Stroke</name>
                            </type>
                            <name>stroke</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws the specified &lt;code&gt;marker&lt;/code&gt; against the domain axis.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the value axis.
                * @param marker the marker.
                * @param dataArea the axis data area.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawDomainMarker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Marker</name>
                            </type>
                            <name>marker</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Draws a horizontal line across the chart to represent a 'range marker'.
                *
                * @param g2 the graphics device.
                * @param plot the plot.
                * @param axis the value axis.
                * @param marker the marker line.
                * @param dataArea the axis data area.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>drawRangeMarker</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Graphics2D</name>
                            </type>
                            <name>g2</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>ValueAxis</name>
                            </type>
                            <name>axis</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Marker</name>
                            </type>
                            <name>marker</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Rectangle2D</name>
                            </type>
                            <name>dataArea</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the plot that this renderer has been assigned to.
                *
                * @return The plot.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>XYPlot</name>
                </type>
                <name>getPlot</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Sets the plot that this renderer is assigned to. This method will be
                * called by the plot class...you do not need to call it yourself.
                *
                * @param plot the plot.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>setPlot</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYPlot</name>
                            </type>
                            <name>plot</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the lower and upper bounds (range) of the x-values in the
                * specified dataset.
                *
                * @param dataset the dataset (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return The range.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>findDomainBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the lower and upper bounds (range) of the y-values in the
                * specified dataset. The implementation of this method will take
                * into account the presentation used by the renderers (for example,
                * a renderer that "stacks" values will return a bigger range than
                * a renderer that doesn't.
                *
                * @param dataset the dataset (&lt;code&gt;null&lt;/code&gt; permitted).
                *
                * @return The range (or &lt;code&gt;null&lt;/code&gt; if the dataset is
                * &lt;code&gt;null&lt;/code&gt; or empty).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>Range</name>
                </type>
                <name>findRangeBounds</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>XYDataset</name>
                            </type>
                            <name>dataset</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Add a renderer change listener.
                *
                * @param listener the listener.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>addChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RendererChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Removes a change listener.
                *
                * @param listener the listener.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <name>void</name>
                </type>
                <name>removeChangeListener</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>RendererChangeListener</name>
                            </type>
                            <name>listener</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            }
        </block>
    </class>
</unit>

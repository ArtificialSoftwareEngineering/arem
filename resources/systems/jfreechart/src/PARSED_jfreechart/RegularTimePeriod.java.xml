<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" language="Java"
      filename="D:\bio\git\biorimp\BIO-RIMP\test_data\code\jfreechart\src\org\jfree\data\time\RegularTimePeriod.java">
    <comment type="block">/* ===========================================================
        * JFreeChart : a free chart library for the Java(tm) platform
        * ===========================================================
        *
        * (C) Copyright 2000-2007, by Object Refinery Limited and Contributors.
        *
        * Project Info: http://www.jfree.org/jfreechart/index.html
        *
        * This library is free software; you can redistribute it and/or modify it
        * under the terms of the GNU Lesser General Public License as published by
        * the Free Software Foundation; either version 2.1 of the License, or
        * (at your option) any later version.
        *
        * This library is distributed in the hope that it will be useful, but
        * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
        * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
        * License for more details.
        *
        * You should have received a copy of the GNU Lesser General Public
        * License along with this library; if not, write to the Free Software
        * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
        * USA.
        *
        * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
        * in the United States and other countries.]
        *
        * ----------------------
        * RegularTimePeriod.java
        * ----------------------
        * (C) Copyright 2001-2007, by Object Refinery Limited.
        *
        * Original Author: David Gilbert (for Object Refinery Limited);
        * Contributor(s): -;
        *
        * Changes
        * -------
        * 11-Oct-2001 : Version 1 (DG);
        * 26-Feb-2002 : Changed getStart(), getMiddle() and getEnd() methods to
        * evaluate with reference to a particular time zone (DG);
        * 29-May-2002 : Implemented MonthConstants interface, so that these constants
        * are conveniently available (DG);
        * 10-Sep-2002 : Added getSerialIndex() method (DG);
        * 10-Jan-2003 : Renamed TimePeriod --&gt; RegularTimePeriod (DG);
        * 13-Mar-2003 : Moved to com.jrefinery.data.time package (DG);
        * 29-Apr-2004 : Changed getMiddleMillisecond() methods to fix bug 943985 (DG);
        * 25-Nov-2004 : Added utility methods (DG);
        * ------------- JFREECHART 1.0.x ---------------------------------------------
        * 06-Oct-2006 : Deprecated the WORKING_CALENDAR field and several methods,
        * added new peg() method (DG);
        *
        */
    </comment>

    <package>package
        <name><name>org</name>.<name>jfree</name>.<name>data</name>.
            <name>time</name>
        </name>
        ;
    </package>

    <import>import
        <name><name>java</name>.<name>lang</name>.<name>reflect</name>.
            <name>Constructor</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Calendar</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>Date</name>
        </name>
        ;
    </import>
    <import>import
        <name><name>java</name>.<name>util</name>.
            <name>TimeZone</name>
        </name>
        ;
    </import>

    <import>import
        <name><name>org</name>.<name>jfree</name>.<name>date</name>.
            <name>MonthConstants</name>
        </name>
        ;
    </import>

    <comment type="javadoc">/**
        * An abstract class representing a unit of time. Convenient methods are
        * provided for calculating the next and previous time periods. Conversion
        * methods are defined that return the first and last milliseconds of the time
        * period. The results from these methods are timezone dependent.
        * &lt;P&gt;
        * This class is immutable, and all subclasses should be immutable also.
        */
    </comment>
    <class>
        <specifier>public</specifier>
        <specifier>abstract</specifier> class <name>RegularTimePeriod</name>
        <super>
            <implements>implements <name>TimePeriod</name>, <name>Comparable</name>,
                <name>MonthConstants</name>
            </implements>
        </super>
        <block>{

            <comment type="javadoc">/**
                * Creates a time period that includes the specified millisecond, assuming
                * the given time zone.
                *
                * @param c the time period class.
                * @param millisecond the time.
                * @param zone the time zone.
                *
                * @return The time period.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>RegularTimePeriod</name>
                </type>
                <name>createInstance</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>Date</name>
                            </type>
                            <name>millisecond</name>
                        </decl>
                    </param>
                    ,
                    <param>
                        <decl>
                            <type>
                                <name>TimeZone</name>
                            </type>
                            <name>zone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>RegularTimePeriod</name>
                            </type>
                            <name>result</name> =
                            <init>
                                <expr>
                                    <name>null</name>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <try>try
                        <block>{
                            <decl_stmt>
                                <decl>
                                    <type>
                                        <name>Constructor</name>
                                    </type>
                                    <name>constructor</name> =
                                    <init>
                                        <expr>
                                            <call>
                                                <name><name>c</name>.
                                                    <name>getDeclaredConstructor</name>
                                                </name>
                                                <argument_list>(
                                                    <argument>
                                                        <expr>new
                                                            <name>
                                                                <name>Class</name>
                                                                <index>[]</index>
                                                            </name>
                                                            <block>{
                                                                <expr>
                                                                    <name><name>Date</name>.
                                                                        <name>
                                                                            <name/>
                                                                        </name>
                                                                    </name>
                                                                    class
                                                                </expr>
                                                                ,
                                                                <expr>
                                                                    <name><name>TimeZone</name>.
                                                                        <name>
                                                                            <name/>
                                                                        </name>
                                                                    </name>
                                                                    class
                                                                </expr>
                                                                }
                                                            </block>
                                                        </expr>
                                                    </argument>
                                                    )
                                                </argument_list>
                                            </call>
                                        </expr>
                                    </init>
                                </decl>
                                ;
                            </decl_stmt>
                            <expr_stmt>
                                <expr>
                                    <name>result</name>
                                    = (<name>RegularTimePeriod</name>)
                                    <call>
                                        <name><name>constructor</name>.
                                            <name>newInstance</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>new
                                                    <name>
                                                        <name>Object</name>
                                                        <index>[]</index>
                                                    </name>
                                                    <block>{
                                                        <expr>
                                                            <name>millisecond</name>
                                                        </expr>
                                                        ,
                                                        <expr>
                                                            <name>zone</name>
                                                        </expr>
                                                        }
                                                    </block>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                                ;
                            </expr_stmt>
                            }
                        </block>
                        <catch>catch (
                            <param>
                                <decl>
                                    <type>
                                        <name>Exception</name>
                                    </type>
                                    <name>e</name>
                                </decl>
                            </param>
                            )
                            <block>{
                                <comment type="line">// do nothing, so null is returned</comment>
                                }
                            </block>
                        </catch>
                    </try>
                    <return>return
                        <expr>
                            <name>result</name>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a subclass of {@link RegularTimePeriod} that is smaller than
                * the specified class.
                *
                * @param c a subclass of {@link RegularTimePeriod}.
                *
                * @return A class.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <specifier>static</specifier>
                    <name>Class</name>
                </type>
                <name>downsize</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Class</name>
                            </type>
                            <name>c</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <if>if
                        <condition>(
                            <expr>
                                <call>
                                    <name><name>c</name>.
                                        <name>equals</name>
                                    </name>
                                    <argument_list>(
                                        <argument>
                                            <expr>
                                                <name><name>Year</name>.
                                                    <name>
                                                        <name/>
                                                    </name>
                                                </name>
                                                class
                                            </expr>
                                        </argument>
                                        )
                                    </argument_list>
                                </call>
                            </expr>
                            )
                        </condition>
                        <then>
                            <block>{
                                <return>return
                                    <expr>
                                        <name><name>Quarter</name>.
                                            <name>
                                                <name/>
                                            </name>
                                        </name>
                                        class
                                    </expr>
                                    ;
                                </return>
                                }
                            </block>
                        </then>
                        <else>else
                            <if>if
                                <condition>(
                                    <expr>
                                        <call>
                                            <name><name>c</name>.
                                                <name>equals</name>
                                            </name>
                                            <argument_list>(
                                                <argument>
                                                    <expr>
                                                        <name><name>Quarter</name>.
                                                            <name>
                                                                <name/>
                                                            </name>
                                                        </name>
                                                        class
                                                    </expr>
                                                </argument>
                                                )
                                            </argument_list>
                                        </call>
                                    </expr>
                                    )
                                </condition>
                                <then>
                                    <block>{
                                        <return>return
                                            <expr>
                                                <name><name>Month</name>.
                                                    <name>
                                                        <name/>
                                                    </name>
                                                </name>
                                                class
                                            </expr>
                                            ;
                                        </return>
                                        }
                                    </block>
                                </then>
                                <else>else
                                    <if>if
                                        <condition>(
                                            <expr>
                                                <call>
                                                    <name><name>c</name>.
                                                        <name>equals</name>
                                                    </name>
                                                    <argument_list>(
                                                        <argument>
                                                            <expr>
                                                                <name><name>Month</name>.
                                                                    <name>
                                                                        <name/>
                                                                    </name>
                                                                </name>
                                                                class
                                                            </expr>
                                                        </argument>
                                                        )
                                                    </argument_list>
                                                </call>
                                            </expr>
                                            )
                                        </condition>
                                        <then>
                                            <block>{
                                                <return>return
                                                    <expr>
                                                        <name><name>Day</name>.
                                                            <name>
                                                                <name/>
                                                            </name>
                                                        </name>
                                                        class
                                                    </expr>
                                                    ;
                                                </return>
                                                }
                                            </block>
                                        </then>
                                        <else>else
                                            <if>if
                                                <condition>(
                                                    <expr>
                                                        <call>
                                                            <name><name>c</name>.
                                                                <name>equals</name>
                                                            </name>
                                                            <argument_list>(
                                                                <argument>
                                                                    <expr>
                                                                        <name><name>Day</name>.
                                                                            <name>
                                                                                <name/>
                                                                            </name>
                                                                        </name>
                                                                        class
                                                                    </expr>
                                                                </argument>
                                                                )
                                                            </argument_list>
                                                        </call>
                                                    </expr>
                                                    )
                                                </condition>
                                                <then>
                                                    <block>{
                                                        <return>return
                                                            <expr>
                                                                <name><name>Hour</name>.
                                                                    <name>
                                                                        <name/>
                                                                    </name>
                                                                </name>
                                                                class
                                                            </expr>
                                                            ;
                                                        </return>
                                                        }
                                                    </block>
                                                </then>
                                                <else>else
                                                    <if>if
                                                        <condition>(
                                                            <expr>
                                                                <call>
                                                                    <name><name>c</name>.
                                                                        <name>equals</name>
                                                                    </name>
                                                                    <argument_list>(
                                                                        <argument>
                                                                            <expr>
                                                                                <name><name>Hour</name>.
                                                                                    <name>
                                                                                        <name/>
                                                                                    </name>
                                                                                </name>
                                                                                class
                                                                            </expr>
                                                                        </argument>
                                                                        )
                                                                    </argument_list>
                                                                </call>
                                                            </expr>
                                                            )
                                                        </condition>
                                                        <then>
                                                            <block>{
                                                                <return>return
                                                                    <expr>
                                                                        <name><name>Minute</name>.
                                                                            <name>
                                                                                <name/>
                                                                            </name>
                                                                        </name>
                                                                        class
                                                                    </expr>
                                                                    ;
                                                                </return>
                                                                }
                                                            </block>
                                                        </then>
                                                        <else>else
                                                            <if>if
                                                                <condition>(
                                                                    <expr>
                                                                        <call>
                                                                            <name><name>c</name>.
                                                                                <name>equals</name>
                                                                            </name>
                                                                            <argument_list>(
                                                                                <argument>
                                                                                    <expr>
                                                                                        <name><name>Minute</name>.
                                                                                            <name>
                                                                                                <name/>
                                                                                            </name>
                                                                                        </name>
                                                                                        class
                                                                                    </expr>
                                                                                </argument>
                                                                                )
                                                                            </argument_list>
                                                                        </call>
                                                                    </expr>
                                                                    )
                                                                </condition>
                                                                <then>
                                                                    <block>{
                                                                        <return>return
                                                                            <expr>
                                                                                <name><name>Second</name>.
                                                                                    <name>
                                                                                        <name/>
                                                                                    </name>
                                                                                </name>
                                                                                class
                                                                            </expr>
                                                                            ;
                                                                        </return>
                                                                        }
                                                                    </block>
                                                                </then>
                                                                <else>else
                                                                    <if>if
                                                                        <condition>(
                                                                            <expr>
                                                                                <call>
                                                                                    <name><name>c</name>.
                                                                                        <name>equals</name>
                                                                                    </name>
                                                                                    <argument_list>(
                                                                                        <argument>
                                                                                            <expr>
                                                                                                <name><name>
                                                                                                    Second</name>.
                                                                                                    <name>
                                                                                                        <name/>
                                                                                                    </name>
                                                                                                </name>
                                                                                                class
                                                                                            </expr>
                                                                                        </argument>
                                                                                        )
                                                                                    </argument_list>
                                                                                </call>
                                                                            </expr>
                                                                            )
                                                                        </condition>
                                                                        <then>
                                                                            <block>{
                                                                                <return>return
                                                                                    <expr>
                                                                                        <name><name>Millisecond</name>.
                                                                                            <name>
                                                                                                <name/>
                                                                                            </name>
                                                                                        </name>
                                                                                        class
                                                                                    </expr>
                                                                                    ;
                                                                                </return>
                                                                                }
                                                                            </block>
                                                                        </then>
                                                                        <else>else
                                                                            <block>{
                                                                                <return>return
                                                                                    <expr>
                                                                                        <name><name>Millisecond</name>.
                                                                                            <name>
                                                                                                <name/>
                                                                                            </name>
                                                                                        </name>
                                                                                        class
                                                                                    </expr>
                                                                                    ;
                                                                                </return>
                                                                                }
                                                                            </block>
                                                                        </else>
                                                                    </if>
                                                                </else>
                                                            </if>
                                                        </else>
                                                    </if>
                                                </else>
                                            </if>
                                        </else>
                                    </if>
                                </else>
                            </if>
                        </else>
                    </if>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the time period preceding this one, or &lt;code&gt;null&lt;/code&gt; if some
                * lower limit has been reached.
                *
                * @return The previous time period (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>RegularTimePeriod</name>
                </type>
                <name>previous</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the time period following this one, or &lt;code&gt;null&lt;/code&gt; if some
                * limit has been reached.
                *
                * @return The next time period (possibly &lt;code&gt;null&lt;/code&gt;).
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>RegularTimePeriod</name>
                </type>
                <name>next</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns a serial index number for the time unit.
                *
                * @return The serial index number.
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>long</name>
                </type>
                <name>getSerialIndex</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="line">//////////////////////////////////////////////////////////////////////////</comment>

            <comment type="javadoc">/**
                * The default time zone.
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>TimeZone</name>
                    </type>
                    <name>DEFAULT_TIME_ZONE</name> =
                    <init>
                        <expr>
                            <call>
                                <name><name>TimeZone</name>.
                                    <name>getDefault</name>
                                </name>
                                <argument_list>()</argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * A working calendar (recycle to avoid unnecessary object creation).
                *
                * @deprecated This was a bad idea, don't use it!
                */
            </comment>
            <decl_stmt>
                <decl>
                    <type>
                        <specifier>public</specifier>
                        <specifier>static</specifier>
                        <specifier>final</specifier>
                        <name>Calendar</name>
                    </type>
                    <name>WORKING_CALENDAR</name>
                    =
                    <init>
                        <expr>
                            <call>
                                <name><name>Calendar</name>.
                                    <name>getInstance</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>DEFAULT_TIME_ZONE</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                    </init>
                </decl>
                ;
            </decl_stmt>

            <comment type="javadoc">/**
                * Recalculates the start date/time and end date/time for this time period
                * relative to the supplied calendar (which incorporates a time zone).
                *
                * @param calendar the calendar (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @since 1.0.3
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>void</name>
                </type>
                <name>peg</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the date/time that marks the start of the time period. This
                * method returns a new &lt;code&gt;Date&lt;/code&gt; instance every time it is called.
                *
                * @return The start date/time.
                *
                * @see #getFirstMillisecond()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Date</name>
                </type>
                <name>getStart</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>Date</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getFirstMillisecond</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the date/time that marks the end of the time period. This
                * method returns a new &lt;code&gt;Date&lt;/code&gt; instance every time it is called.
                *
                * @return The end date/time.
                *
                * @see #getLastMillisecond()
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>Date</name>
                </type>
                <name>getEnd</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>new
                            <call>
                                <name>Date</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getLastMillisecond</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the first millisecond of the time period. This will be
                * determined relative to the time zone specified in the constructor, or
                * in the calendar instance passed in the most recent call to the
                * {@link #peg(Calendar)} method.
                *
                * @return The first millisecond of the time period.
                *
                * @see #getLastMillisecond()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>long</name>
                </type>
                <name>getFirstMillisecond</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the first millisecond of the time period, evaluated within a
                * specific time zone.
                *
                * @param zone the time zone (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return The first millisecond of the time period.
                *
                * @deprecated As of 1.0.3, you should avoid using this method (it creates
                * a new Calendar instance every time it is called). You are advised
                * to call {@link #getFirstMillisecond(Calendar)} instead.
                *
                * @see #getLastMillisecond(TimeZone)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getFirstMillisecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TimeZone</name>
                            </type>
                            <name>zone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>zone</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>getFirstMillisecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the first millisecond of the time period, evaluated using the
                * supplied calendar (which incorporates a timezone).
                *
                * @param calendar the calendar (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return The first millisecond of the time period.
                *
                * @throws NullPointerException if &lt;code&gt;calendar,/code&gt; is
                * &lt;/code&gt;null&lt;/code&gt;.
                *
                * @see #getLastMillisecond(Calendar)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>long</name>
                </type>
                <name>getFirstMillisecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the last millisecond of the time period. This will be
                * determined relative to the time zone specified in the constructor, or
                * in the calendar instance passed in the most recent call to the
                * {@link #peg(Calendar)} method.
                *
                * @return The last millisecond of the time period.
                *
                * @see #getFirstMillisecond()
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>long</name>
                </type>
                <name>getLastMillisecond</name>
                <parameter_list>()</parameter_list>;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the last millisecond of the time period, evaluated within a
                * specific time zone.
                *
                * @param zone the time zone (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return The last millisecond of the time period.
                *
                * @deprecated As of 1.0.3, you should avoid using this method (it creates
                * a new Calendar instance every time it is called). You are advised
                * to call {@link #getLastMillisecond(Calendar)} instead.
                *
                * @see #getFirstMillisecond(TimeZone)
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getLastMillisecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TimeZone</name>
                            </type>
                            <name>zone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>zone</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <call>
                                <name>getLastMillisecond</name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <name>calendar</name>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the last millisecond of the time period, evaluated using the
                * supplied calendar (which incorporates a timezone).
                *
                * @param calendar the calendar (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return The last millisecond of the time period.
                *
                * @see #getFirstMillisecond(Calendar)
                */
            </comment>
            <function_decl>
                <type>
                    <specifier>public</specifier>
                    <specifier>abstract</specifier>
                    <name>long</name>
                </type>
                <name>getLastMillisecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                ;
            </function_decl>

            <comment type="javadoc">/**
                * Returns the millisecond closest to the middle of the time period.
                *
                * @return The middle millisecond.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getMiddleMillisecond</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>m1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getFirstMillisecond</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>m2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getLastMillisecond</name>
                                        <argument_list>()</argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>m1</name>
                            + (<name>m2</name> - <name>m1</name>) / 2
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the millisecond closest to the middle of the time period,
                * evaluated within a specific time zone.
                *
                * @param zone the time zone (&lt;code&gt;null&lt;/code&gt; not permitted).
                *
                * @return The middle millisecond.
                *
                * @deprecated As of 1.0.3, you should avoid using this method (it creates
                * a new Calendar instance every time it is called). You are advised
                * to call {@link #getMiddleMillisecond(Calendar)} instead.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getMiddleMillisecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>TimeZone</name>
                            </type>
                            <name>zone</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name><name>Calendar</name>.
                                            <name>getInstance</name>
                                        </name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>zone</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>m1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getFirstMillisecond</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>calendar</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>m2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getLastMillisecond</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>calendar</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>m1</name>
                            + (<name>m2</name> - <name>m1</name>) / 2
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns the millisecond closest to the middle of the time period,
                * evaluated using the supplied calendar (which incorporates a timezone).
                *
                * @param calendar the calendar.
                *
                * @return The middle millisecond.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>long</name>
                </type>
                <name>getMiddleMillisecond</name>
                <parameter_list>(
                    <param>
                        <decl>
                            <type>
                                <name>Calendar</name>
                            </type>
                            <name>calendar</name>
                        </decl>
                    </param>
                    )
                </parameter_list>
                <block>{
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>m1</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getFirstMillisecond</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>calendar</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <decl_stmt>
                        <decl>
                            <type>
                                <name>long</name>
                            </type>
                            <name>m2</name> =
                            <init>
                                <expr>
                                    <call>
                                        <name>getLastMillisecond</name>
                                        <argument_list>(
                                            <argument>
                                                <expr>
                                                    <name>calendar</name>
                                                </expr>
                                            </argument>
                                            )
                                        </argument_list>
                                    </call>
                                </expr>
                            </init>
                        </decl>
                        ;
                    </decl_stmt>
                    <return>return
                        <expr>
                            <name>m1</name>
                            + (<name>m2</name> - <name>m1</name>) / 2
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            <comment type="javadoc">/**
                * Returns a string representation of the time period.
                *
                * @return The string.
                */
            </comment>
            <function>
                <type>
                    <specifier>public</specifier>
                    <name>String</name>
                </type>
                <name>toString</name>
                <parameter_list>()</parameter_list>
                <block>{
                    <return>return
                        <expr>
                            <call>
                                <name><name>String</name>.
                                    <name>valueOf</name>
                                </name>
                                <argument_list>(
                                    <argument>
                                        <expr>
                                            <call>
                                                <name>getStart</name>
                                                <argument_list>()</argument_list>
                                            </call>
                                        </expr>
                                    </argument>
                                    )
                                </argument_list>
                            </call>
                        </expr>
                        ;
                    </return>
                    }
                </block>
            </function>

            }
        </block>
    </class>
</unit>
